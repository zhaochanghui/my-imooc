/*
Navicat MySQL Data Transfer

Source Server         : tx
Source Server Version : 50641
Source Host           : 123.207.234.226:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 50641
File Encoding         : 65001

Date: 2019-09-16 01:06:13
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  `brief` varchar(512) DEFAULT NULL,
  `content` longtext,
  `create_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=82 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('45', 'CentOS7 yum 安装mysql 5.6', '7', 'mysql5.6在centos7上安装如下，yum方式', '<p>转自：https://www.cnblogs.com/zhangyin6985/p/6307219.html</p><p>1、下载 MySQL Yum Repository<br/>wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</p><p><br/>2、添加 MySQL Yum Repository<br/>rpm -ivh mysql-community-release-el7-5.noarch.rpm</p><p>3、验证下是否添加成功<br/>yum repolist enabled | grep &quot;mysql.*-community.*&quot;</p><p>4、选择要启用 MySQL 版本</p><p>查看 MySQL 版本，执行yum repolist all | grep mysql<br/>可以看到 5.5， 5.7 版本是默认禁用的，因为现在最新的稳定版是 5.6</p><p>可以通过类似下面的语句来启动某些版本<br/>yum-config-manager --disable mysql56-community<br/>yum-config-manager --enable mysql57-community-dmr</p><p>或者通过修改 /etc/yum.repos.d/mysql-community.repo 文件<br/># Enable to use MySQL 5.6<br/>[mysql56-community]<br/>name=MySQL 5.6 Community Server<br/>baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/$basearch/<br/>enabled=1<br/>gpgcheck=1<br/>gpgkey=file:/etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</p><p>其中 enabled=0 是指禁用，enabled=1 指启用。<br/>注意： 任何时候，只能启用一个版本。</p><p>5、通过 Yum 来安装 MySQL<br/>yum install mysql-community-server</p><p>6、MySQL 安全设置（设置密码）<br/>mysql_secure_installation;</p><p>7、远程访问设置<br/>创建一个普通用户 sa ，密码是 some_pass<br/>CREATE USER &#39;sa&#39;@&#39;%&#39; IDENTIFIED BY &#39;some_pass&#39;;</p><p>给这个用户授予 SELECT,INSERT,UPDATE,DELETE 的远程访问的权限，这个账号一般用于提供给实施的系统访问<br/>GRANT SELECT,INSERT,UPDATE,DELETE ON *.* TO &#39;sa&#39;@&#39;%&#39;;</p><p>创建一个管理员用户 admin 账号 ，密码是 some_pass<br/>CREATE USER &#39;admin&#39;@&#39;%&#39; IDENTIFIED BY &#39;some_pass&#39;;</p><p>给这个用户授予所有的远程访问的权限。这个用户主要用于管理整个数据库、备份、还原等操作。<br/>GRANT ALL ON *.* TO &#39;admin&#39;@&#39;%&#39;;</p><p>使授权立刻生效<br/>flush privileges;</p><p>8、设置字符集</p><p>一般的，为了支持中文，我们应该讲字符集设为 UTF-8， 执行下面命令查看当前 MySQL 字符集<br/>SHOW VARIABLES LIKE &#39;character%&#39;;</p><p>修改 /etc/my.cnf 文件，添加字符集的设置</p><p>[mysqld]&nbsp;<br/>character_set_server = utf8</p><p>[mysql]<br/>default-character-set = utf8</p><p>重启 MySQL ,可以看到字符集已经修改了</p><p>9、备份、还原</p><p>备份<br/>mysqldump --socket=/home/data/mysql/mysql.sock --single-transaction=TRUE -u root -p emsc &gt; emsc.sql</p><p>还原<br/>mysql --socket=/home/data/mysql/mysql.sock -u root -p emsc &lt; emsc.sql</p>', '2018-06-30 15:59:04', '2018-06-30 15:59:04');
INSERT INTO `article` VALUES ('46', 'centos7+tomcat部署JavaWeb项目超详细步骤', '2', '我们平时访问的网站大多都是发布在云服务器上的，比如阿里云、腾讯云等。对于新手，尤其是没有接触过linux系统的人而言是比较有困难的，而且至今使用云服务器也是有成本的，很多时候我们可以通过虚拟机自己搭建一个测试服务器来运行我们的JavaWeb项目。这里我就从头到尾开始详细的介绍一下如何部署javaWeb项目到centos7上。', '<p>总体分为三部分：1、java环境。2、tomcat环境。3、JavaWeb项目部署</p><p>一、安装java环境</p><p>centos7安装java环境比较简单，我是通过virtualBox安装的最小的centos7，安装完毕后设置好IP，要能够访问外网，我上一篇文章里详细讲了如何通过centos7设置IP访问外网。好了，废话不多说，直接上命令：</p><p>yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel</p><p>yum命令需要联网 该操作就是从网上下载jdk8到你的centos7并且安装到默认目录。</p><p>我们在Windows系统内用eclipse开发还需要设置JAVA_HOME、CLASSPATH、PATH环境变量，同样的在centos7里面也一样，安装完毕之后，</p><p>将下面的三行添加到 /etc/profile 中：</p><p>export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64</p><p>export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</p><p>export PATH=$PATH:$JAVA_HOME/bin</p><p>保存关闭后，执行：source /etc/profile #让设置立即生效。</p><p>这里稍微说明一下/etc/profile文件就是centos7的环境变量配置文件。这个文件是每个用户登录时都会运行的环境变量设置，如果仅仅是修改是不会立即生效的，需要重新登录的时候才能生效，通过命令：source /etc/profile可以让刚才的设置立即生效。</p><p>至此，java环境安装完毕，和windows下一样，运执行命令：java -version</p><p>会出现以下信息：</p><p>openjdk version \"1.8.0_121\"</p><p>OpenJDK Runtime Environment (build 1.8.0_121-b13)</p><p>OpenJDK 64-Bit Server VM (build 25.121-b13, mixed mode)</p><p>说明java环境安装成功！</p><p>二、安装tomcat环境</p><p>总体来说这个比较简单就是下载压缩包、解压缩、运行。和Windows一样。具体步骤如下：</p><p>下载linux下的Tomcat压缩包 apache-tomcat-8.5.13.tar.gz</p><p>放到home下（目录随意，可以自己新建一个文件夹） 解压缩</p><p>执行命令：tar -zxvf apache-tomcat-8.5.13.tar.gz</p><p>然后就会多了一个apache-tomcat-8.5.13的文件夹，其实这样tomcat就相当于安装成功了，是不是很简单，但是要运行它还需要一些操作。</p><p>1、启动tomcat</p><p>执行命令：/home/apache-tomcat-8.5.13/bin/startup.sh</p><p>2、开发8080端口</p><p>firewall-cmd --zone=public --add-port=8080/tcp --permanent</p><p>说一下这一句的意思吧，因为centos7 已经更改了防火墙策略，所以使用这种方式来打开端口</p><p>--zone #作用域</p><p>--add-port=8080/tcp #添加端口，格式为：端口/通讯协议</p><p>--permanent #永久生效，没有此参数重启后失效</p><p>重启防火墙：firewall-cmd --reload</p><p>3、验证</p><p>可以在Windows下通过输入虚拟机的ip地址来访问例如：192.168.1.100:8080</p><p>显示了tomcat的欢迎页，说明了tomcat已经成功运行了。</p><p>三、部署JavaWeb项目</p><p>linux里使用的是war包来部署的，所以我们要把项目打包成war包，操作如下</p><p>file-export类型选择WAR file</p><div><img src=\"http://t11.baidu.com/it/u=1719119707,4216096119&amp;fm=170&amp;s=89285D32031364695C5561CF0000E0B1&amp;w=640&amp;h=357&amp;img.JPEG\" alt=\"\"></div><p>之后把生成的war包复制到centos7中。</p><p>tomcat部署JavaWeb项目分为下面的步骤：</p><p>1、删除tomcat按照目录的ROOT文件夹下的所有文件</p><p>2、把war包复制到ROOT文件下面，解压缩：jar -xvf xxxx.war;</p><p>3、结束所有的java进程：ps -e|grep java|awk \'{print \"kill -9 \"$1}\'|sh</p><p>4、启动tomcat：sh tomcat目录/bin/startup.sh;或者是进入到tomcat的bin目录下执行：./startup.sh</p><p>5、访问：在主机电脑通过浏览器访问192.168.1.100:8080(centos的Ip和端口号)，就可以打开项目的开始页面。</p><p>后续内容持续更新，如果你也在学习技术，或者你想要成为全栈工程师，可以关注一下下哈。不定期更新java、框架、centos等内容。O(∩_∩)O</p><p>遇到问题可以评论噢，我会第一时间解答的。</p><p>转自：https://www.cnblogs.com/xiaohu1218/p/7233162.html</p>', '2018-06-20 00:02:51', '2018-06-20 00:02:51');
INSERT INTO `article` VALUES ('47', 'springmvc牵手ajax(一)', '2', '做web开发ajax必须明白的哦，下面是我学习springboot+springmvc+mybatis+idea是练习ajax的例子。', '<p><br>1.控制器曾<br><br>@Controller<br>public class AjaxController {<br>    @RequestMapping(\"/ajax\")<br>    public void ajax(HttpServletRequest req,HttpServletResponse resq) throws Exception{<br>        resq.getWriter().print(\"ajax data wxm\");<br>    }<br>    <br>}<br><br>2.jsp页面请求：<br><br>&lt;%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%&gt;<br>&lt;%<br>String path = request.getContextPath();<br>String basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";<br>%&gt;<br><br>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>  &lt;head&gt;<br>    &lt;base href=\"&lt;%=basePath%&gt;\"&gt;<br>    <br>    &lt;title&gt;My JSP \'index.jsp\' starting page&lt;/title&gt;<br>   <br>    &lt;!--<br>    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\"&gt;<br>    --&gt;<br>    &lt;script type=\"text/javascript\" src=\"js/jquery-1.11.3.min.js\"&gt;&lt;/script&gt;<br>      &lt;script type=\"text/javascript\"&gt;<br>      $(function(){<br>          &nbsp;&nbsp;&nbsp;&nbsp;$(\'#btn\').click(function(){<br>              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$.post(\"/ajax\",function(data){<br>                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(\"#content\").html(data);<br>              &nbsp;&nbsp;&nbsp;&nbsp;});<br>          &nbsp;&nbsp;&nbsp;&nbsp;});<br>      });<br>      &lt;/script&gt;<br>  <br>  &lt;/head&gt;<br>  <br>  &lt;body&gt;<br>   &lt;input type=\"button\" id=\"btn\" value=\"ajax\"/&gt;&lt;br&gt;<br>   &lt;div id=\"content\"&gt;&lt;/div&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;<br><br></p>', '2018-06-20 22:41:17', '2018-06-20 22:41:17');
INSERT INTO `article` VALUES ('48', 'React Native(一)：认识react native，安装react native', '6', 'React是Facebook开发的一款JavaScript库，使用这个库可以很好的编写漂亮的网页UI，能简化前端程序员很多操作。\r\n而React Native是在React基础上发展而来，目的让程序员能够真正用JavaScript去开发手机端的APP，像浏览WebAPP 一样，但是同时具有NativeAPP的流程与操作体验。记住，这与你使用WebView完全是不一样的。\r\nReact Native使你能够在Javascript和React的基础上获得完全一致的开发体验，构建世界一流的原生APP。\r\nReact Native着力于提高多平台开发的开发效率 —— 仅需学习一次，编写任何平台。(Learn once, write anywhere)\r\nFacebook已经在多项产品中使用了React Native，并且将持续地投入建设React Native。', '<ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>React Native是什么<br/> React-Native是：Facebook在2015年初React.js技术研讨大会上公布的一个开源项目。支持用开源的JavaScript库React.js来开发iOS和Android原生App。初期仅支持iOS平台，同年9月份，该开源项目同时支持Android平台。React Native的原理是：在JavaScript中用React抽象操作系统原生的UI组件，代替DOM元素来渲染，比如以&lt;View&gt;取代&lt;div&gt;，以&lt;Image&gt;替代&lt;img&gt;等。<br/><br/>2.React Native的优缺点：<br/><br/>优点是：能够用JavaScript脚本就可以写出App的界面，对从事Web开发的同事们转行做几个简单的移动App是个福利。不用为了写个移动App小程序而专门去学习Objective-C和Swift或者java。<br/>和其他的移动Web框架相比：<br/>&nbsp;Native不用WebView，彻底摆脱了WebView让人不爽的交互和性能问题；<br/>&nbsp;Native的原生控件有更好的体验；<br/>&nbsp;Native有更好的手势识别；<br/>&nbsp; Native有更适合的线程模型；<br/>缺点是：学习曲线不完全平滑，REACT NATIVE还不成熟<br/>3.要学些什么？<br/>Html+CSS+JavaScript的基本功肯定是少不了；<br/>Node.js的基本概念学习。API文档：https://nodejs.org/dist/v4.2.2/docs/api/<br/>JSX: JavaScript语法的一个扩展，类似XML结构。https://facebook.github.io/react/docs/jsx-in-depth.html<br/>&nbsp;FLUX: Facebook公司的一个创建用户客户端web程序的框架。https://facebook.github.io/flux/docs/overview.html<br/>更多文章请参考：http://www.cnblogs.com/shaoting/p/5820016.html<br/>至于相应环境的安装请参考：https://github.com/lan-xue-xing/thinking-react-native<br/>&nbsp;windows下安装可以参考：https://www.cnblogs.com/yuying0527/archive/2017/07/24/7230203.html，我用win7,我就是参照这个来做的，亲测可用哦<br/>&nbsp;IDE的选择：<span style=\"background-color: rgb(255, 0, 0);\">IntelliJ IDEA</span>,webstorm,sublime text3等，我用idea,棒棒的，用它同时开发java,php,python,js,react等等，无需别的ide啦，<span style=\"background-color: rgb(255, 0, 0);\">如果你的电脑内存4小于4G，那我建议你用sublime text3</span></p></li><li><p>安装：参照官网和这个网址：https://www.cnblogs.com/yuying0527/archive/2017/07/24/7230203.html</p></li></ol><p>&nbsp;&nbsp;&nbsp;&nbsp;2.1 安装jdk1.8,配置java环境变量</p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp; &nbsp; 安装成功可以用java -version查看版本信息</span><br/><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp; &nbsp;配置环境变量（注意的你的路径）</span><br/><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">　 JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_45</span><br/><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">　 Path+=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</span><br/><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">　 CLASSPATH+=%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;</span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"> &nbsp; &nbsp; &nbsp; 2.2 &nbsp;<span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">安装Android SDK</span></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><strong>&nbsp;<span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">推荐安装Android Studio，我下载Android Studio的地址：<a href=\"https://dl.google.com/dl/android/studio/install/3.1.2.0/android-studio-ide-173.4720617-windows.exe\">https://dl.google.com/dl/android/studio/install/3.1.2.0/android-studio-ide-173.4720617-windows.exe</a>&nbsp; &nbsp; </span><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">你可以参照我的去下，按道理，版本越高越好，别下载古董级别的就行啦</span></strong></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><strong><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">&nbsp;安装完成后在Android Studio的欢迎界面中选择Configure | SDK Manager。 在SDK Platforms窗口中，选择Show Package Details，然后在Android 6.0 (Marshmallow)中勾选Google APIs、Android SDK Platform 23、Intel x86 Atom System Image、Intel x86 Atom_64 System Image以及Google APIs Intel x86 Atom_64 System Image。</span></strong></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><strong><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><img src=\"https://app.yinxiang.com/shard/s49/res/e776e18f-8283-4ded-ab9c-9d861fff68f0.png\"/></span></strong></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><strong><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><br/></span></strong></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><strong><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">在SDK Tools窗口中，选择Show Package Details，然后在Android SDK Build Tools中勾选Android SDK Build-Tools 23.0.1（必须包含有这个版本。当然如果其他插件需要其他版本，你可以同时安装其他多个版本）。然后还要勾选最底部的Android Support Repository.</span></span></strong></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><strong><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><img src=\"https://app.yinxiang.com/shard/s49/res/c76d0e7c-cc20-4136-802e-f19ebec9f673.png\"/></span></span></strong></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><strong><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;配置android sdk环境变量，类似下面：</span><br/><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;ANDROID_HOME=D:\\adt-bundle\\sdk</span><br/><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">&nbsp;&nbsp;&nbsp;&nbsp;path=%ANDROID_HOME%\\platform-tools;%ANDROID_HOME%\\tools;</span></span></span></strong></span></p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\">&nbsp; &nbsp;2.3 &nbsp;安装NodeJS，尽量安装最新版</span><br/></p><p style=\"margin-top: 0px; margin-bottom: 0.714285em; padding: 0px; border: 0px; line-height: 1.57143em; color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px; white-space: normal;\">&nbsp; &nbsp;安装完node后建议设置npm镜像以加速后面的过程（或使用科学上网工具）。注意：不要使用cnpm！cnpm安装的模块路径比较奇怪，packager不能正常识别！<br/>&nbsp; &nbsp; npm config set registry https://registry.npm.taobao.org --global<br/>&nbsp; &nbsp; npm config set disturl https://npm.taobao.org/dist --global<br/>&nbsp; &nbsp;2.4 &nbsp;安装git</p><p style=\"margin-top: 0px; margin-bottom: 0.714285em; padding: 0px; border: 0px; line-height: 1.57143em; color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px; white-space: normal;\">&nbsp; 2.5 .安装Python2.7,python3不行哦</p><p style=\"margin-top: 0px; margin-bottom: 0.714285em; padding: 0px; border: 0px; line-height: 1.57143em; color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px; white-space: normal;\">&nbsp;2.6 .安装react-native<br/>&nbsp;中文官网：https://reactnative.cn/docs/0.51/getting-started.html#content<br/>&nbsp;npm install -g yarn react-native-cli<br/>&nbsp;2.7 测试安装（这其中估计会出现许多问题，下一篇文章起步二中我把我第一次成功创建项目并安装到安卓机的过程中踩的坑写出来）,也可以用神安卓模拟器，比如夜神安卓模拟器，很方便的，我一开始是用真机测试，后面尝试了用夜神安卓模拟器，后面的文章会介绍<br/>&nbsp;&nbsp;&nbsp;&nbsp;react-native init AwesomeProject<br/>&nbsp;&nbsp;&nbsp;&nbsp;cd AwesomeProject<br/>&nbsp;&nbsp;&nbsp;&nbsp;react-native run-android &nbsp;&nbsp;</p><p><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><strong><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"><span style=\"color: rgb(56, 56, 56); font-family: gotham, helvetica, arial, sans-serif; font-size: 14px;\"></span></span></span></strong></span><br/></p>', '2018-06-24 17:14:59', '2018-06-24 17:14:59');
INSERT INTO `article` VALUES ('49', 'React Native(二):React Native 布局', '6', 'React Native采用一中全新的布局方式：FlexBox（弹性布局）。可以很方便的实现各种复杂布局，是全新的针对web和移动开发布局的一种实现方式。\r\n何为FlexBox?   完整名称为：the flexible box Module,旨在通过弹性的方式来对齐和分布容器中的组件。Flexbuju的主要思想是：让容器有能力让其子项目能够改变其宽度|高度|顺序，以最佳方式填充可用空间。\r\n在布局中，首先得确定主轴方向(flexDirection)，主轴组件的对齐方式（justifyContent），侧轴组件的对齐方式(alignItems)，通过以上四点可以基本确定布局。\r\n如果你想学好Flex布局还是应该多多的写一些Demo。', '<pre class=\"brush:plain;toolbar:false\">基本概念\r\nmain&nbsp;aixs,代表一条主要的轴线，布局会按照主轴的方向来展开。例如,主轴的方向是&#39;row&#39;,意思就是会在水平方向布局。\r\ncross&nbsp;aixs，与main&nbsp;aixs垂直的另外一条轴线。可以控制在这条轴线上的对齐方式。\r\n命名:驼峰式.比如：flexDirection。React&nbsp;Native的尺寸都是与密度无关的像素(independent&nbsp;pixels)。\r\n\r\nGroup属性\r\n\r\n这种叫法(Android叫法)不是很准确，意思是一个盒子里面可以放一些东西，Group属性就是定义这个盒子的属性。\r\n\r\nflexDirection(&#39;row&#39;,&nbsp;&#39;row-reverse&#39;,&nbsp;&#39;column&#39;,&nbsp;&#39;column-reverse&#39;):主轴的方向，就像在盒子里面放东西的顺序，\r\n例如定义为&#39;row&#39;，放完第一个东西以后，第二个就需要和第一个在同一行。\r\njustifyContent(&#39;flex-start&#39;,&nbsp;&#39;flex-end&#39;,&nbsp;&#39;center&#39;,&nbsp;&#39;space-between&#39;,&nbsp;&#39;space-around&#39;):主轴的对齐方式，\r\n例如，在主轴方向为&#39;row&#39;时，justifyContent就能改变盒子里面东西的排列方式，例如&#39;flex-end&#39;意思是盒子里面\r\n的东西排列在一行的最末尾。\r\nflexWrap(&#39;wrap&#39;,&#39;nowrap&#39;):主轴上位置超过了容纳区域时换行方式。例如，在主轴方向为&#39;row&#39;时，一行放不下了，\r\n设置&#39;wrap&#39;就会换到下一行。\r\nalignItems(&#39;flex-start&#39;,&nbsp;&#39;flex-end&#39;,&nbsp;&#39;center&#39;,&nbsp;&#39;stretch&#39;):交叉轴的对齐方式，例如，在主轴方向为&#39;row&#39;时，\r\n在交叉轴上的就是按\r\n照&#39;columen&#39;排列的，这个属性就是控制交叉轴的对齐方式，例如&#39;center&#39;就会展示在竖直方向的中间。\r\n看了下CSS的Flex，相对而言React&nbsp;Native简化了一些，还有flex-flow和align-content在React&nbsp;Native中没有。\r\n\r\nChild属性\r\n\r\n同样这种(Android)叫法不是很准确，意思是一个盒子里面可以放一些东西，Child属性就是定义放在盒子里面东西的属性。\r\n\r\nflex(number):不同于CSS标准，React&nbsp;Native中flex只能是数字。如果是正整数，就是与数字的大小成比例。如果为0就是\r\n自生的大小，并且不能扩展。如果为-1，会展示自生的大小，并且当空间不够的时候会缩小到minWidth/minHeight。\r\nflexGrow(number):定义child的放大属性，当还有空余的空间的时候设置有效，数字越大占比越大。\r\nflexShrink(number):定义了child的缩小属性，当child展示超过了空间的时候设置有效，跟flexGrow用户比较的类似。\r\nflexBasis(number):flexDirection为row的时候用来设置width属性。flexDirection为column的时候用来设置width属性。\r\nalignSelf(&#39;auto&#39;,&nbsp;&#39;flex-start&#39;,&nbsp;&#39;flex-end&#39;,&nbsp;&#39;center&#39;,&nbsp;&#39;stretch&#39;):可以覆盖掉alignItems属性，不设置具\r\n体的width/height的时候&#39;stretch&#39;才有效果。\r\n相比于CSS的标准，没有了order属性以及flex属性对应的意思不一样。\r\n\r\n其它属性\r\n\r\naspectRatio(number):用来表示宽高比，React&nbsp;Native独有。是一个很好的属性，例如知道了图片展示的比例，宽度是\r\n屏幕宽度，这样就不需要计算宽度再计算高度，只需要设置一下就行了。\r\nposition(&#39;absolute&#39;,&nbsp;&#39;relative&#39;):&nbsp;代表的是位置信息，默认是&#39;relative&#39;。如果设置了&#39;absolute&#39;就代表是一个\r\n绝对的位置，然后可以使用一个其它的属性(left、right等等)来固定展示在屏幕某个地方。\r\noverflow(&#39;visible&#39;,&nbsp;&#39;hidden&#39;,&nbsp;&#39;scroll&#39;):当child溢出了它的Group的时候展示的样式。\r\nzIndex(number):数字比较大就展示在上面。有一些特殊的用途可能会使用到。下面代码text1就会展示在text2上面。\r\ntext1:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;fontSize:&nbsp;14,\r\n&nbsp;&nbsp;&nbsp;&nbsp;backgroundColor:&nbsp;&#39;#0f0&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;marginLeft:&nbsp;20,\r\n&nbsp;&nbsp;&nbsp;&nbsp;height:&nbsp;25,\r\n&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;&#39;absolute&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;zIndex:&nbsp;3,&nbsp;//&nbsp;展示在text2上面\r\n},\r\ntext2:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;fontSize:&nbsp;14,\r\n&nbsp;&nbsp;&nbsp;&nbsp;backgroundColor:&nbsp;&#39;#f00&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;left:&nbsp;10,\r\n&nbsp;&nbsp;&nbsp;&nbsp;borderWidth:&nbsp;20,\r\n&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;&#39;absolute&#39;,&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;zIndex:&nbsp;2,\r\n},\r\n\r\n\r\n其它：margin、padding、border、left、top、right、bottom、maxWidth、maxHeight、minWidth、minHeight以及衍生出\r\n来的marginLeft、marginRight等等就不细说了。\r\n想学的同学可以参照下面的例子来入门react&nbsp;native的布局哦，一定要多写多想\r\nimport&nbsp;React,&nbsp;{&nbsp;Component&nbsp;}&nbsp;from&nbsp;&#39;react&#39;;\r\nimport&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;AppRegistry,\r\n&nbsp;&nbsp;&nbsp;&nbsp;StyleSheet,\r\n&nbsp;&nbsp;&nbsp;&nbsp;Text,\r\n&nbsp;&nbsp;&nbsp;&nbsp;View\r\n}&nbsp;from&nbsp;&#39;react-native&#39;\r\n/**-----------------------------------第一个示例程序--------------------------------------------&nbsp;**/\r\nclass&nbsp;Project&nbsp;extends&nbsp;Component&nbsp;{\r\nrender()&nbsp;{&nbsp;//初始化\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;View&nbsp;style={styles.container}&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;red&#39;,height:50}}&gt;第一个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;blue&#39;,height:100}}&gt;第二个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;green&#39;,height:160}}&gt;第三个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;yellow&#39;,height:200}}&gt;第四个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/View&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n//样式\r\nconst&nbsp;styles&nbsp;=&nbsp;StyleSheet.create({\r\n&nbsp;&nbsp;&nbsp;&nbsp;container:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//充满全屏,否则内容多少,只显示多少区域.&nbsp;是&#39;flex-grow&#39;&#39;flex-shrink&#39;&#39;flex-basis&#39;三个属性的缩写,\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;flex:1,&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;其中第二个和第三个参数都是可选,默认值是&quot;0&nbsp;1&nbsp;auto&quot;&nbsp;宽度&nbsp;=&nbsp;弹性宽度&nbsp;*&nbsp;(flexGrow/sum(flexGrow))\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;width:200,\r\n&nbsp;&nbsp;&nbsp;&nbsp;height:200,\r\n&nbsp;&nbsp;&nbsp;&nbsp;marginTop:20,//上边距\r\n&nbsp;&nbsp;&nbsp;&nbsp;backgroundColor:&#39;black&#39;,//背景色\r\n&nbsp;&nbsp;&nbsp;&nbsp;//React&nbsp;Native&nbsp;布局采用FlexBox(弹性布局),该属性是设置布局的主轴方向为row:横向(默认方向是竖向:column)\r\n&nbsp;&nbsp;&nbsp;&nbsp;flexDirection:&#39;row&#39;,&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//定义了伸缩项目在主轴线的对齐方式&nbsp;flex-start&nbsp;|&nbsp;flex-end&nbsp;|&nbsp;center&nbsp;|&nbsp;space-between&nbsp;|&nbsp;space-around\r\n&nbsp;&nbsp;&nbsp;&nbsp;justifyContent:&#39;space-between&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;//定义了伸缩项目在侧轴(交叉轴)的对齐方式&nbsp;flex-start&nbsp;|&nbsp;flex-end&nbsp;|&nbsp;center&nbsp;|&nbsp;baseline&nbsp;|&nbsp;stretch(默认)&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;alignItems:&#39;flex-start&#39;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;});\r\n\r\n/**-----------------------------------第二个示例程序--------------------------------------------&nbsp;**/\r\nclass&nbsp;Project1&nbsp;extends&nbsp;Component&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;render()&nbsp;{&nbsp;//初始化\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;View&nbsp;style={styles1.container}&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;red&#39;,width:200}}&gt;第一个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;blue&#39;,width:300}}&gt;第二个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;green&#39;,width:200}}&gt;第三个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;yellow&#39;,width:200}}&gt;第四个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/View&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\nconst&nbsp;styles1&nbsp;=&nbsp;StyleSheet.create({\r\n&nbsp;&nbsp;&nbsp;&nbsp;container:{\r\n&nbsp;&nbsp;&nbsp;&nbsp;backgroundColor:&#39;black&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;marginTop:20,\r\n&nbsp;&nbsp;&nbsp;&nbsp;flexDirection:&#39;row&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;justifyContent:&#39;flex-start&#39;,\r\n&nbsp;//定义显示不下的显示模式,默认控件都是在一条线上,值有以下几种\r\n&nbsp;//&nbsp;wrap换行,nowarp(默认值)不换行,warp-reverse:换行,效果和wrap相反\r\n&nbsp;&nbsp;&nbsp;&nbsp;flexWrap:&#39;wrap&#39;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n});\r\n/**-----------------------------------第三个示例程序-------------------------------------------------&nbsp;**/\r\n//alignSelf允许单个项目可以有自己单独的对齐方式\r\nclass&nbsp;Project2&nbsp;extends&nbsp;Component{\r\n&nbsp;&nbsp;&nbsp;&nbsp;render(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;return(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;View&nbsp;style={styles2.container}&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;red&#39;,flex:1,height:50,alignSelf:&#39;center&#39;}}&gt;第一个&lt;/Text&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;blue&#39;,flex:2,height:30,alignSelf:&#39;flex-start&#39;}}&gt;第二个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;green&#39;,flex:2,height:70,alignSelf:&#39;flex-end&#39;}}&gt;第三个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&nbsp;style={{backgroundColor:&#39;yellow&#39;,flex:1,height:80,alignSelf:&#39;stretch&#39;}}&gt;第四个&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/View&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\nconst&nbsp;styles2&nbsp;=&nbsp;StyleSheet.create({\r\n&nbsp;&nbsp;&nbsp;&nbsp;container:{\r\n&nbsp;&nbsp;&nbsp;&nbsp;backgroundColor:&#39;black&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;marginTop:20,\r\n&nbsp;&nbsp;&nbsp;&nbsp;flexDirection:&#39;row&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n});</pre><p><br/></p>', '2018-06-30 18:02:42', '2018-06-30 18:02:42');
INSERT INTO `article` VALUES ('50', 'React Native(三):Image组件', '6', '几乎每个IT项目都会用到图片.\r\nreact native就是通过Image组件显示图片。既可以加载网络图片,也可以加载本地资源图片。\r\nImage组件本地图片可以不知定宽高，uri方式的远程图片必须在样式中声明图片的款和高。否则图片将不会被呈现在界面上。', '<p><span style=\"font-size: 12px;\"></span><br/></p><pre class=\"brush:plain;toolbar:false\">Image组件类似于iOS中UIImage控件，该组件可以通过多种方式加载图片资源。\r\n/**\r\n*&nbsp;image&nbsp;加载的2种方式+设置图片的内容模式\r\nImage组件如果是uri方式必须在样式中声明图片的width和height。否则uri方式的远程图片将不会被呈现在界面上。\r\n我们一般将Image定义的宽和高乘以当前运行环境的像素密度称为Image的实际宽高.当Image的实际宽高与图片的实际宽高\r\n不符时,视图样式定义中resizeMode的取值不同而分为三种情况,三个取值分别是:&nbsp;contain,&nbsp;cover和stretch.默认值是cover.\r\n\r\ncover模式只求在显示比例不失真的情况下填充整个显示区域。可以对图片进行放大或者缩小，超出显示区域的部分不显示，&nbsp;\r\n也就是说，图片可能部分会显示不了。\r\ncontain模式是要求显示整张图片,&nbsp;可以对它进行等比缩小,&nbsp;图片会显示完整,可能会露出Image控件的底色。如果图片宽高都\r\n小于控件宽高，则不会对图片进行放大。\r\nstretch模式不考虑保持图片原来的宽,高比.填充整个Image定义的显示区域,这种模式显示的图片可能会畸形和失真。\r\ncenter模式,&nbsp;0.33版本才支持，contain模式基础上支持等比放大。\r\n*/\r\n\r\nimport&nbsp;React,&nbsp;{&nbsp;Component&nbsp;}&nbsp;from&nbsp;&#39;react&#39;;\r\nimport&nbsp;{&nbsp;AppRegistry,&nbsp;StyleSheet,Text,Image,&nbsp;View&nbsp;}&nbsp;from&nbsp;&#39;react-native&#39;\r\n\r\nclass&nbsp;Project&nbsp;extends&nbsp;Component&nbsp;{\r\n&nbsp;render()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;return&nbsp;(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;View&nbsp;style={styles.container}&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&gt;加载工程中图片，可以不用设置宽高&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Image&nbsp;source={require(&#39;./imgs/1.png&#39;)}&nbsp;style={{width:120,height:120}}/&gt;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Image&nbsp;source={require(&#39;image!520&#39;)}&nbsp;style={{width:120,height:120}}&nbsp;/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&gt;加载网络中的图片,必须设置宽高才能显示&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Image&nbsp;source={{uri:&#39;https://unsplash.it/600/400/?random&#39;}}&nbsp;style={{width:120,height:200}}/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&gt;设置加载图片的模式&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Image&nbsp;source={{uri:&#39;http://img06.tooopen.com/images/20180603/tooopen_sl_241633088448.jpg&#39;}}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style={{width:120,height:200,resizeMode:Image.resizeMode.cover}}/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Image&nbsp;source={{uri:&#39;http://img06.tooopen.com/images/20180603/tooopen_sl_241633088448.jpg&#39;}}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style={{width:120,height:200,resizeMode:Image.resizeMode.contain}}/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Image&nbsp;source={{uri:&#39;http://img06.tooopen.com/images/20180603/tooopen_sl_241633088448.jpg&#39;}}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style={{width:120,height:200,resizeMode:Image.resizeMode.stretch}}/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/View&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\nconst&nbsp;styles&nbsp;=&nbsp;StyleSheet.create({\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flex:&nbsp;1,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marginTop:20,&nbsp;&nbsp;//上边距\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flexDirection:&#39;column&#39;,&nbsp;&nbsp;//主轴方向&nbsp;垂直\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;justifyContent:&nbsp;&#39;flex-start&#39;,&nbsp;//控件在主轴上的对齐方向\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alignItems:&nbsp;&#39;flex-start&#39;,&nbsp;&nbsp;//控件在侧轴上的对齐方向\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;backgroundColor:&nbsp;&#39;#F5FCFF&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n});\r\n\r\nAppRegistry.registerComponent(&#39;Project&#39;,&nbsp;()&nbsp;=&gt;&nbsp;Project);</pre><p><span style=\"font-size: 12px;\"></span><br/></p>', '2018-06-30 17:40:48', '2018-06-30 17:40:48');
INSERT INTO `article` VALUES ('51', 'php修行之路', '3', '学习得分清主次，轻重，顺序，坚持学才能学好哦。学php也是如此。PHP又名超文本预处理器，是一种通用开源脚本语言。PHP主要适用于Web开发领域，语法吸收了C语言、Java和Perl的特点，利于学习，使用广泛。其独特的语法混合了C、Java、Perl以及PHP自创的语法。下面介绍php工作者从小白到大神的合适的进化之路。', '<p><preconsolas\';font-size:10.5pt;\"><br>##<span宋体\';\">学习步骤<br><span宋体\';\"><br>###<span宋体\';\">第一阶段<br><span宋体\';\"><br><span宋体\';\">首先对HTML+CSS<span宋体\';\">有一个基础的了解，做出一个简单的页面，感受一下网页开发的乐趣。（HTML+CSS<span宋体\';\">）<br><span宋体\';\">接着简单的学习一下JavaScript<span宋体\';\">，了解网页的动态交互效果是怎么做出来的。（JavaScript<span宋体\';\">）<br><span宋体\';\">学习一点Linux<span宋体\';\">基础课程，因为大多数的web<span宋体\';\">站点都是部署在Linux<span宋体\';\">服务器上的，所以你需要了解一下简单的Linux<span宋体\';\">操作。（Linux<span宋体\';\">基础）<br><span宋体\';\">当你对这些都有一点基础的了解之后，这时候开始学习PHP<span宋体\';\">语法的效果可能会更好。所以就开始你的PHP<span宋体\';\">学习之路吧！（PHP<span宋体\';\">语法）<br><span宋体\';\">可能经过之前的了解，你知道大多数的PHP<span宋体\';\">站点都是需要数据库的，这里我们一般说PHP<span宋体\';\">和MySQL<span宋体\';\">会更配哦！那么我的建议是MySQL<span宋体\';\">确实是一个不错的选择。（MySQL<span宋体\';\">数据库了解）<br><span宋体\';\">当你有了这些基础知识之后，你已经可以创造一些简单的小玩意了！哦！这时候你可能会问我该在哪里跑我的程序呢？有了问题就要解决么！毕竟我们程序员的主要职责就是debug<span宋体\';\">了。所以开始搭建你的LAMP<span宋体\';\">环境吧！（注意：我这里说的是LAMP<span宋体\';\">环境，可能大部分人用的是Windows<span宋体\';\">系统，毕竟这也算是中国国情了么！而且确实在Windows<span宋体\';\">上搭建WAMP<span宋体\';\">环境对于不习惯使用命令行的人来说确实会方便不少，但是对于你以后在公司工作来说，这却不是一个很好的选择！是的，没错！公司90%<span宋体\';\">以上使用的都是Linux<span宋体\';\">系统。当你在学习刚开始的时候就用LAMP<span宋体\';\">环境，这样你就能更好的适应公司的环境，毕竟Linux<span宋体\';\">系统的命令行操作的命令那么杂，如果你不经常使用，过不了几天你学过的那些Linux<span宋体\';\">基础就忘光了。之后还得增加学习成本来重新学习LAMP<span宋体\';\">环境，那么一开始就使用它，何乐而不为呢？ -- <span宋体\';\">这里可能和前几个学习步骤有点冲突，毕竟当你翻开第一本PHP<span宋体\';\">语法书的时候，他基本上讲的就是环境搭建，所以我这个步骤可能有点靠后了，这个就根据你个人的学习习惯来调整就好。如果你喜欢准备的万无一失在开始你的编程之旅，那么我按照这个学习顺序走就可以了！当然如果你之前已经了解过一点相关知识，那么别犹豫，直接搭建好环境开干！）<br><span宋体\';\">要是你按照这个顺序已经学到这里了，那么现在开始做一个界面精美的留言本吧！一个留言本基本上就都考核了你的基础知识了。你可以用你学到的HTML+CSS<span宋体\';\">，JavaScript<span宋体\';\">做一个好看又有动态交互的界面。再用PHP<span宋体\';\">语法来连接数据库，编写逻辑，操作数据。这些就考验了你对PHP<span宋体\';\">语法的简单运用！然后你要是按照我第六条建议搭建的是LAMP<span宋体\';\">环境，那么你在建表的时候就不免用到切换用户，进入目录，创建目录等等一系列Linux<span宋体\';\">命令，当然了，对于新手来说，我的建议是在命令行下建表，这样更加有利于你对sql<span宋体\';\">语句的学习。<br>###<span宋体\';\">第二阶段<br><span宋体\';\"><br><span宋体\';\">到了第二阶段，可能对于热爱学习的你来说，已经不仅仅满足于做一个简单的留言本了！毕竟这对于现代的我们来说这可能已经是上个世纪的东西了，谁稀罕？ 而且你可能这个时候已经慢慢的认识到了，现在已经是面向对象的世界了。俗话说“<span宋体\';\">万事万物皆对象”<span宋体\';\">，要是还用原生脚本来编写的话，虽然我得承认他们的速度是最快的，但是在这个需求多变的世界中，需求的改变时时刻刻都在发生，当然如果你的产品经理人不错的话，他可能会提前给你确定好大部分的需求，这样你改动的时候可能会少一点。可惜天不遂人愿，他们大多被叫做产品狗，意思你自己体会去吧。这样你如果用原生写出来的项目，只要有一点点的变动，你可以自己试试，看看会不会把你整的喊爸爸。 这样，为了我们自己的身体健康，我们就需要有一种高度封装的代码，耦合性极低，大家谁都不影响谁，你让我改动这一块，我就仅仅需要动这一块就好了。而且你想用我这一个功能，随便用，你只要按照我给你的那个属性直接用就行！谁让我们牛逼了。看到这儿，你是不是对这个神奇的东西有了很大的期待啊？没错，这个神奇的东西就是我们上面说的面向对象的思想。相信我，当你真正掌握了面向对象的思想，你就会感受到人间自有真情在。<br><span宋体\';\"><br><span宋体\';\">上面大体的说了一下面向对象的好处，现在我们就来学习一下吧！这个时候就应该学学PHP<span宋体\';\">的进阶内容了，关于PHP<span宋体\';\">的面向对象编程，我们需要了解命名空间，类，继承，接口，类自动加载等等（PHP<span宋体\';\">面向对象编程）。这个面向对象的思想是最难转化的，可能你已经习惯了面向过程编程，感觉逻辑就是应该按照你的思路来走，刚刚上手面向对象编程，你可能会觉得很变扭。但是，相信我，在前期你可能需要强迫一下自己，当你真正熟悉了oop<span宋体\';\">之后你可能就再也离不开他了。<br><span宋体\';\"><br><span宋体\';\">上面说完了PHP<span宋体\';\">的面向对象编程，那么我们就该思考一个问题了。我的逻辑编码已经有那么一点点登堂入室的感觉了，但是发现在连接数据库的时候还是使用的是原来的连接方式感觉好变扭啊，而且万一哪天我心情不好，想换个数据库玩玩，那我还得把这段连接代码删除，找到专门连接其他数据库的连接方式。有没有一些一劳永逸的方法呢？别担心，已经有大神为我们解决了。下面我们就说说进阶的第二个话题-<span宋体\';\">数据库。在这里我介绍两个oop<span宋体\';\">方式的数据库扩展（PDO<span宋体\';\">，mysqli<span宋体\';\">）。PDO<span宋体\';\">已经实现了通过对象封装让我们用一段代码可以随意切换数据库，做到了想换就换，心随我动。而mysqli<span宋体\';\">是MySQL<span宋体\';\">的进阶版本，现在官方推荐的是这个。（PDO<span宋体\';\">，mysqli<span宋体\';\">）<br><span宋体\';\"><br><span宋体\';\">当然这是说的我们后端的进阶，那么可能有的同学就说了，写前端的JavaScript<span宋体\';\">也好费劲，调用一个简单的id<span宋体\';\">就需要写那么一长串代码，好费劲啊！别担心，这就是我要给你们介绍的JavaScript<span宋体\';\">的进阶jQuery<span宋体\';\">，他对原生的dom<span宋体\';\">进行了封装，让你用更少的代码来完成更多的事儿，同时他又是看着那么简洁，优雅。毕竟我们可是高贵的程序猿，可不是民工。追求的是艺术和科技的结合。（jQuery<span宋体\';\">）<br><span宋体\';\"><br><span宋体\';\">第二阶段是改变你的思维方式，让你换个思路去看世界。思想变过来了，我们不妨用我们这一阶段学到的东西，来吧你的之前做的留言本，全都换成面向对象编程。这样你可能就感受到它的魅力了。<br><span宋体\';\"><br>###<span宋体\';\">第三阶段<br><span宋体\';\"><br><span宋体\';\">当你完成了上面两个阶段，如果你是一步一个脚印的来走的话。我相信的摩天大楼就在你的眼前。那还等什么，赶快建起高楼，走上人生巅峰，迎娶白富美吧！但是，要是我们还是像之前那样打地基一步一个脚印的去盖的话，那这摩天大楼何时才能完工呢？这个时候我们就需要站在巨人的肩膀上来实现了。我们只需要把摩天大楼装修的漂漂亮亮的就好，至于搭建脚手架这种事让巨人去帮你做吧。所以第三阶段我们就需要学习如何使用框架了。毕竟前人栽树后人乘凉，我们只需要拿来用就好。这里我介绍几个当前PHP<span宋体\';\">主流的框架，也是我经常使用的这几个（Laravel<span宋体\';\">，Yii<span宋体\';\">，Thinkphp<span宋体\';\">）。<br><span宋体\';\"><br>Laravel<span宋体\';\">是以PHP<span宋体\';\">最优雅的框架来著称的，它运用了很多先进的思想，优雅的设计。在你使用它的时候你会感觉你在打造的是一个艺术品。不过又有点就会有缺点，因为他先进的思想，优雅的设计导致他相比较其他框架来说反应有点慢，毕竟贵族永远都是那么慢条斯理。<br><span宋体\';\"><br>Yii<span宋体\';\">就想一个朝气蓬勃的青年，他快捷，高效，安全，当你使用它的时候你会感觉非常顺手。<br><span宋体\';\"><br>Thinkphp<span宋体\';\">是国内的一个框架，他是我认识的第一个框架，他非常的简洁，给了你极大地便利，当你想要使用它的时候，你可以把它捡起来，不需要的话，随手扔掉就好。但是他有一个我不能忍受的缺点就是他有一些函数的命名仅仅使用一个字母来命名，虽然简洁，就我本身而言我感觉极其不友好。 上面就是我介绍的几个框架，俗话说：一法通百法通，当你能深刻的理解一个框架的时候，在上手其他框架的时候，仅仅是表达方式上的不同。<br><span宋体\';\"><br><span宋体\';\">下面我们介绍几个前端框架，让我们写界面也能写的更加优雅：（bootstrap<span宋体\';\">，Vue<span宋体\';\">，angular.js<span宋体\';\">）<br><span宋体\';\"><br>bootstrap<span宋体\';\">这个框架可以说是后端程序员的福音，对于一个讨厌写界面，而且写出的界面毫无美感的你来说。bootstrap<span宋体\';\">里面的栅格系统，会让你只关心你的逻辑实现，至于界面的话很简单的就能搭建出一个简洁优雅的界面来。<br><span宋体\';\"><br>Vue <span宋体\';\">这可以说是一个跟得上潮流的框架，它的MVVM<span宋体\';\">模式，数据绑定的思想都可以让你更加方便的来调用后台数据，而且他及其小巧，更加方便你的定制。现在好多公司都在在它的基础上来搭建内部脚手架。所以学习他，绝对是一个不错的投资。<br><span宋体\';\"><br>angular.js <span宋体\';\">相信程序猿没有听过Google<span宋体\';\">的应该很少吧。没错他就是Google<span宋体\';\">开源出来的一个框架，相信质量是一定有保障的。而且他火热的社区氛围，也保障了它的生命力。他也用了MVC<span宋体\';\">的模式，可以实现双向数据绑定。这么多的优点，难道你就不心动么？<br><span宋体\';\"><br>###<span宋体\';\">第四阶段<br><span宋体\';\"><br><span宋体\';\">对于已经走完以上几个阶段的人最容易出现的问题就是PHP<span宋体\';\">好简单啊！PHP<span宋体\';\">在手，天下我有的感觉。感觉再也没有了当年学习的热情，尤其是你还做过一些零零散散的项目，更是觉得在PHP<span宋体\';\">上有更大的进步空间。我当年也是这样，感觉谁都很菜，自以为已经深谙PHP<span宋体\';\">之道了。有这种感觉很正常，毕竟PHP<span宋体\';\">非常简单，甚至最难的数据结构都已经有大神给你封装成函数，随便掉用即可。但是PHP<span宋体\';\">简单，可是web<span宋体\';\">开发可是博大精深啊。在这个阶段，你就需要往更深层次来走了，虽然还没达到研究PHP<span宋体\';\">内部实现的程度，但是下面我说的这些知识已经够你专研一阵子了。<br><span宋体\';\"><br><span宋体\';\">首先从上个阶段你对框架的运用，你已经理解到MVC<span宋体\';\">模式的思想了么？这个时候就是需要你去了解的了。（MVC<span宋体\';\">）<br><span宋体\';\"><br><span宋体\';\">看着大神给你搭好的脚手架，你现在光是会用，难道对他们神奇的封装一点都不好奇么？为什么这样调用，你就能实现你想要的功能？所以是时候自己尽自己最大的努力搭建一个你自己的脚手架了，即使你自己将来不用，但是如果你自己写一遍的话，你就能对框架的宏观搭建有一个更深的了解。（搭建自己的框架）<br><span宋体\';\"><br><span宋体\';\">同样的话对前端框架也是有用的，当然如果你是主攻后端的话，我的建议是那你只要简单了解一下内部思想就好了。毕竟编程编的是思想，所不定他的思想是对你有用的，那么你可能就会搭建出一个更好的框架，变成传说中的大神。<br><span宋体\';\"><br><span宋体\';\">你在第三阶段的时候有没有感觉，有时候你解决某个逻辑的时候想到了一个特别好的解决方法，为此你还高兴不已。但是我要告诉你，在此之前可能对于一个资深工程师来说这就是一个简单的设计模式，已经被用了好多年。所以这个阶段我推荐你去看一下设计模式的书，在之前大神们已经给出了23<span宋体\';\">中设计模式。他们都是思想的精华，值得你仔细研读。（设计模式）<br><span宋体\';\"><br><span宋体\';\">还有你之前可能只是简单的传值，但是你却不知道他们内部是怎么做到的，也有可能你知道，但是却不是很清楚。所以在这个阶段我推荐你看看HTTP<span宋体\';\">协议，TCP/IP<span宋体\';\">原理，Apache<span宋体\';\">服务器内部配置，Auth<span宋体\';\">协议。这些已经涉及到了一些内部原理，他可能枯燥无味，但是这些知识绝对是你成神路上必不可少的东西。（HTTP<span宋体\';\">，TCP/IP<span宋体\';\">，Apache<span宋体\';\">，Auth<span宋体\';\">协议）<br><span宋体\';\"><br><span宋体\';\">达到上面这些程度的，可以说你已经很厉害了，带领一个小团队基本不成问题。但是如果我想成为业内的大神该怎么办呢？这个时候你就需要往更深的程度发展了，比如说服务器，PHP<span宋体\';\">原理什么的，因为我自己也在摸索，所以对于更高的程度也。。。。。<br><span宋体\';\"><br><span宋体\';\">参考：https://github.com/GiggleAll/php</span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></span宋体\';\"></preconsolas\';font-size:10.5pt;\"><br></p>', '2018-06-24 00:27:53', '2018-06-24 00:27:53');
INSERT INTO `article` VALUES ('52', 'Java post,get工具类', '2', '最近做微信开发，需要httpq请求微信接口，故用到post,get请求，下面就是我封装的java http请求类，亲测可用哦。下面直接给代码，拿去就可以直接用的哦。如果用了觉得好就给个好评哦', '<pre class=\"brush:plain;toolbar:false\">package&nbsp;com.demo.utils;\r\nimport&nbsp;java.io.BufferedReader;\r\nimport&nbsp;java.io.IOException;\r\nimport&nbsp;java.io.InputStreamReader;\r\nimport&nbsp;java.io.PrintWriter;\r\nimport&nbsp;java.io.OutputStreamWriter;\r\nimport&nbsp;java.net.URL;\r\nimport&nbsp;java.net.URLConnection;\r\nimport&nbsp;java.util.List;\r\nimport&nbsp;java.util.Map;\r\n\r\npublic&nbsp;class&nbsp;HttpUtils&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;向指定URL发送GET方法的请求\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;url\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;发送请求的URL\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;param\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求参数，请求参数应该是&nbsp;name1=value1&amp;name2=value2&nbsp;的形式。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;URL&nbsp;所代表远程资源的响应结果\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;sendGet(String&nbsp;url,&nbsp;String&nbsp;param)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;result&nbsp;=&nbsp;&quot;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedReader&nbsp;in&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;urlNameString&nbsp;=&nbsp;url&nbsp;+&nbsp;&quot;?&quot;&nbsp;+&nbsp;param;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URL&nbsp;realUrl&nbsp;=&nbsp;new&nbsp;URL(urlNameString);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;打开和URL之间的连接\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URLConnection&nbsp;connection&nbsp;=&nbsp;realUrl.openConnection();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;设置通用的请求属性\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.setRequestProperty(&quot;accept&quot;,&nbsp;&quot;*/*&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.setRequestProperty(&quot;connection&quot;,&nbsp;&quot;Keep-Alive&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.setRequestProperty(&quot;user-agent&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Mozilla/4.0&nbsp;(compatible;&nbsp;MSIE&nbsp;6.0;&nbsp;Windows&nbsp;NT&nbsp;5.1;SV1)&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;建立实际的连接\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.connect();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取所有响应头字段\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;String,&nbsp;List&lt;String&gt;&gt;&nbsp;map&nbsp;=&nbsp;connection.getHeaderFields();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;遍历所有的响应头字段\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(String&nbsp;key&nbsp;:&nbsp;map.keySet())&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(key&nbsp;+&nbsp;&quot;---&gt;&quot;&nbsp;+&nbsp;map.get(key));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;定义&nbsp;BufferedReader输入流来读取URL的响应\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;=&nbsp;new&nbsp;BufferedReader(new&nbsp;InputStreamReader(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.getInputStream()));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;line;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;((line&nbsp;=&nbsp;in.readLine())&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;+=&nbsp;line;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;发送GET请求出现异常！&quot;&nbsp;+&nbsp;e);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;使用finally块来关闭输入流\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(in&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in.close();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(Exception&nbsp;e2)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e2.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;向指定&nbsp;URL&nbsp;发送POST方法的请求\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;url\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;发送请求的&nbsp;URL\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;param\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求参数，请求参数应该是&nbsp;name1=value1&amp;name2=value2&nbsp;的形式。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;所代表远程资源的响应结果\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;sendPost(String&nbsp;url,&nbsp;String&nbsp;param)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OutputStreamWriter&nbsp;out&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedReader&nbsp;in&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;result&nbsp;=&nbsp;&quot;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URL&nbsp;realUrl&nbsp;=&nbsp;new&nbsp;URL(url);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;打开和URL之间的连接\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URLConnection&nbsp;conn&nbsp;=&nbsp;realUrl.openConnection();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;设置通用的请求属性\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.setRequestProperty(&quot;accept&quot;,&nbsp;&quot;*/*&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.setRequestProperty(&quot;connection&quot;,&nbsp;&quot;Keep-Alive&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.setRequestProperty(&quot;user-agent&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;Mozilla/4.0&nbsp;(compatible;&nbsp;MSIE&nbsp;6.0;&nbsp;Windows&nbsp;NT&nbsp;5.1;SV1)&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.setRequestProperty(&quot;Charset&quot;,&nbsp;&quot;UTF-8&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;发送POST请求必须设置如下两行\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.setDoOutput(true);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.setDoInput(true);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取URLConnection对象对应的输出流\r\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;=&nbsp;new&nbsp;PrintWriter(conn.getOutputStream());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;=&nbsp;new&nbsp;OutputStreamWriter(conn.getOutputStream(),&nbsp;&quot;UTF-8&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;发送请求参数\r\n//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.print(param);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.write(param);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;flush输出流的缓冲\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.flush();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;定义BufferedReader输入流来读取URL的响应\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;=&nbsp;new&nbsp;BufferedReader(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;InputStreamReader(conn.getInputStream()));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;line;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;((line&nbsp;=&nbsp;in.readLine())&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;+=&nbsp;line;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;发送&nbsp;POST&nbsp;请求出现异常！&quot;+e);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//使用finally块来关闭输出流、输入流\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;finally{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(out!=null){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out.close();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(in!=null){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in.close();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch(IOException&nbsp;ex){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ex.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;result;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>', '2018-06-24 16:55:33', '2018-06-24 16:55:33');
INSERT INTO `article` VALUES ('53', 'Java微信公众号(一)：基本配置接入开发者模式', '2', '最近公司项目用到微信接口，所以我赶紧用自己的服务器，微信申请了测试号，自己下班进行了学习，今天先讲微信开发的第一步：配置接口，url:需要公网域名，自己可以买腾讯云或阿里云服务器，然后买个域名，建立PHP，或java环境，我之类是利用springboot,springmvc,mybaits,tomcat,centos7.3,mysql,maven进行练习的，亲测的哦，亲，相关的知识点不会的，赶紧补补。', '<p><br/></p><h4 style=\"box-sizing: border-box; outline: 0px; padding: 0px; margin: 8px 0px 16px; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; white-space: normal;\">第一步：需要一个能提供外网访问的 url 地址</h4><blockquote style=\"box-sizing: border-box; outline: 0px; padding: 16px; margin: 0px 0px 24px; border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; word-wrap: normal; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px; white-space: normal;\"><p style=\"box-sizing: border-box; outline: 0px; padding: 0px; margin-top: 0px; margin-bottom: 0px; color: rgb(153, 153, 153); line-height: 22px; text-align: justify; word-break: break-all;\">a. 获取方式：去阿里云、腾讯云、新浪云等等平台上购买一台虚拟主机。&nbsp;<br/>b. 注意点：可能有的小伙伴用的是 花生壳动态内网穿透 所提供的外网域名。确实该域名是外网域名，但是该外网域名端口不是固定的 80(http) 或 443(https) 端口，所以配置会失败。&nbsp;<br/><img src=\"http://oxg2u3fwj.bkt.clouddn.com/wechat/wx_config.png\" alt=\"\" title=\"\"/></p></blockquote><p>第二步：我用的是ssm最新版，截止2018.6.25，注意两个地方的token要一致<br/></p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 1.57143em; font-family: Monaco, Courier, monospace; color: rgb(56, 56, 56); font-size: 14px;\" class=\"brush:plain;toolbar:false;\">package&nbsp;com.demo2.controller.admin;\r\n\r\n\r\nimport&nbsp;org.springframework.boot.autoconfigure.EnableAutoConfiguration;\r\nimport&nbsp;org.springframework.stereotype.Controller;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestMapping;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestMethod;\r\nimport&nbsp;org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport&nbsp;javax.servlet.http.HttpServletRequest;\r\nimport&nbsp;javax.servlet.http.HttpServletResponse;\r\nimport&nbsp;java.security.MessageDigest;\r\nimport&nbsp;java.util.Arrays;\r\n\r\n\r\n@Controller\r\n@EnableAutoConfiguration\r\npublic&nbsp;class&nbsp;AdminWx&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;token&nbsp;=&nbsp;&quot;weixin&quot;;&nbsp;&nbsp;&nbsp;//接口配置信息里的接口配置信息修改\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;appId&nbsp;=&nbsp;&quot;wxxx&quot;;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;appSecret=&nbsp;&quot;ayyyyyyyf&quot;;\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/wx.php&quot;,method&nbsp;=&nbsp;RequestMethod.GET)\r\n&nbsp;&nbsp;&nbsp;&nbsp;@ResponseBody\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;wxx(HttpServletRequest&nbsp;req,&nbsp;HttpServletResponse&nbsp;response)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;signature&nbsp;=&nbsp;req.getParameter(&quot;signature&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;timestamp&nbsp;=&nbsp;req.getParameter(&quot;timestamp&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;nonce&nbsp;=&nbsp;req.getParameter(&quot;nonce&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;echostr&nbsp;=&nbsp;req.getParameter(&quot;echostr&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(checkSignature(signature,&nbsp;timestamp,&nbsp;nonce)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;echostr;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;&quot;wx&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;boolean&nbsp;checkSignature(String&nbsp;signature,String&nbsp;timestamp,String&nbsp;nonce){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String[]&nbsp;arr&nbsp;=&nbsp;new&nbsp;String[]{token,timestamp,nonce};\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//排序\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Arrays.sort(arr);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//生成字符串\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuffer&nbsp;content&nbsp;=&nbsp;new&nbsp;StringBuffer();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i=0;i&lt;arr.length;i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content.append(arr[i]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//sha1加密\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;temp&nbsp;=&nbsp;getSha1(content.toString());\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;temp.equals(signature);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Sha1加密方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;str\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;getSha1(String&nbsp;str)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(str&nbsp;==&nbsp;null&nbsp;||&nbsp;str.length()&nbsp;==&nbsp;0)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;hexDigits[]&nbsp;=&nbsp;{&nbsp;&#39;0&#39;,&nbsp;&#39;1&#39;,&nbsp;&#39;2&#39;,&nbsp;&#39;3&#39;,&nbsp;&#39;4&#39;,&nbsp;&#39;5&#39;,&nbsp;&#39;6&#39;,&nbsp;&#39;7&#39;,&nbsp;&#39;8&#39;,&nbsp;&#39;9&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;a&#39;,&nbsp;&#39;b&#39;,&nbsp;&#39;c&#39;,&nbsp;&#39;d&#39;,&nbsp;&#39;e&#39;,&nbsp;&#39;f&#39;&nbsp;};\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageDigest&nbsp;mdTemp&nbsp;=&nbsp;MessageDigest.getInstance(&quot;SHA1&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mdTemp.update(str.getBytes(&quot;UTF-8&quot;));\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;byte[]&nbsp;md&nbsp;=&nbsp;mdTemp.digest();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;j&nbsp;=&nbsp;md.length;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;buf[]&nbsp;=&nbsp;new&nbsp;char[j&nbsp;*&nbsp;2];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;k&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;j;&nbsp;i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;byte&nbsp;byte0&nbsp;=&nbsp;md[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buf[k++]&nbsp;=&nbsp;hexDigits[byte0&nbsp;&gt;&gt;&gt;&nbsp;4&nbsp;&amp;&nbsp;0xf];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buf[k++]&nbsp;=&nbsp;hexDigits[byte0&nbsp;&amp;&nbsp;0xf];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;String(buf);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;获取access_token\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getAccessToken()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;wx11&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n}</pre><p><br/></p>', '2018-06-25 23:03:48', '2018-06-25 23:03:48');
INSERT INTO `article` VALUES ('54', 'Java微信公众号(二)：获取access_token', '2', 'access_token是公众号的全局唯一接口调用凭据，公众号调用各接口时都需使用access_token。开发者需要进行妥善保存。access_token的存储至少要保留512个字符空间。access_token的有效期目前为2个小时，需定时刷新，重复获取将导致上次获取的access_token失效。', '<pre class=\"brush:plain;toolbar:false\">&nbsp;在上一篇的java微信开发：配置开发者模式配置了url，那么我后面的微信相关的人口都在这个url下面写，我是在和配置\r\n&nbsp;开发者模式（Url,token）同一个控制器下进行的。公众号可以使用AppID和AppSecret调用本接口来获取access_token。\r\n&nbsp;AppID和AppSecret可在微信公众平台官网-开发者中心页中获得。且一个公众号每天获取access_token的次数上限为2000次。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;①&nbsp;接口调用请求地址\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;②&nbsp;需要传递参数说明\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;③&nbsp;返回参数说明\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从上述请求地址，以及参数和响应表格可以知道，我们需要通过请求传递三个参数给微信公众平台，分别是grant_type\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（获取access_token填写client_credential）、appid、appsecret，请求成功后，公众平台会将access_token以及\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有效期返回给我们。\r\n\r\n下面直接上代码：ssm(springboot,springmvc,mybatis,maven,idea开发的，截止2018.6.24最新版)，注意参数换成自己的，\r\n写完代码上传到服务器，直接访问&quot;域名/wx/at&quot;就输出acces_token，注意引入相关package就行，全部可以maven下载的的包，\r\n很多教程除了下载的包，还自己写了很多http请求，access_token的类等一大堆东西，把小伙伴们搞蒙了，我这里没有哦，全\r\n部代码在同一个控制器下。\r\n\r\npackage&nbsp;com.demo.controller.admin;\r\n\r\n\r\n\r\nimport&nbsp;org.apache.http.HttpResponse;\r\nimport&nbsp;org.apache.http.HttpStatus;\r\nimport&nbsp;org.apache.http.client.HttpClient;\r\nimport&nbsp;org.apache.http.client.methods.HttpGet;\r\nimport&nbsp;org.apache.http.impl.client.DefaultHttpClient;\r\nimport&nbsp;org.apache.http.util.EntityUtils;\r\nimport&nbsp;org.springframework.boot.autoconfigure.EnableAutoConfiguration;\r\nimport&nbsp;org.springframework.stereotype.Controller;\r\nimport&nbsp;org.springframework.ui.Model;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestMapping;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestMethod;\r\nimport&nbsp;org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport&nbsp;javax.servlet.http.HttpServletRequest;\r\nimport&nbsp;javax.servlet.http.HttpServletResponse;\r\nimport&nbsp;java.io.IOException;\r\nimport&nbsp;java.security.MessageDigest;\r\nimport&nbsp;java.util.*;\r\n\r\nimport&nbsp;org.apache.http.client.ClientProtocolException;\r\n\r\nimport&nbsp;org.json.JSONObject;\r\n\r\n@Controller\r\n@EnableAutoConfiguration\r\npublic&nbsp;class&nbsp;AdminWx&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;token&nbsp;=&nbsp;&quot;wx&quot;;&nbsp;&nbsp;&nbsp;//接口配置信息里的url\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;url1=&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=zz&amp;secret=zz&quot;;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;APPID&nbsp;=&nbsp;&quot;ccc&quot;;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;String&nbsp;APPSECRET&nbsp;=&nbsp;&quot;aeffffcd836bf&quot;;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**全局token&nbsp;所有与微信有交互的前提&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;ACCESS_TOKEN;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**全局token上次获取事件&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;long&nbsp;LASTTOKENTIME;\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/wx&quot;,method&nbsp;=&nbsp;RequestMethod.GET)\r\n&nbsp;&nbsp;&nbsp;&nbsp;@ResponseBody\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;wxx(HttpServletRequest&nbsp;req,&nbsp;HttpServletResponse&nbsp;response)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;signature&nbsp;=&nbsp;req.getParameter(&quot;signature&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;timestamp&nbsp;=&nbsp;req.getParameter(&quot;timestamp&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;nonce&nbsp;=&nbsp;req.getParameter(&quot;nonce&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;echostr&nbsp;=&nbsp;req.getParameter(&quot;echostr&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(checkSignature(signature,&nbsp;timestamp,&nbsp;nonce)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;echostr;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;&quot;wx&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;boolean&nbsp;checkSignature(String&nbsp;signature,String&nbsp;timestamp,String&nbsp;nonce){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String[]&nbsp;arr&nbsp;=&nbsp;new&nbsp;String[]{token,timestamp,nonce};\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//排序\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Arrays.sort(arr);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//生成字符串\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuffer&nbsp;content&nbsp;=&nbsp;new&nbsp;StringBuffer();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i=0;i&lt;arr.length;i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content.append(arr[i]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//sha1加密\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;temp&nbsp;=&nbsp;getSha1(content.toString());\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;temp.equals(signature);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Sha1加密方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;str\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;String&nbsp;getSha1(String&nbsp;str)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(str&nbsp;==&nbsp;null&nbsp;||&nbsp;str.length()&nbsp;==&nbsp;0)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;hexDigits[]&nbsp;=&nbsp;{&nbsp;&#39;0&#39;,&nbsp;&#39;1&#39;,&nbsp;&#39;2&#39;,&nbsp;&#39;3&#39;,&nbsp;&#39;4&#39;,&nbsp;&#39;5&#39;,&nbsp;&#39;6&#39;,&nbsp;&#39;7&#39;,&nbsp;&#39;8&#39;,&nbsp;&#39;9&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;a&#39;,&nbsp;&#39;b&#39;,&nbsp;&#39;c&#39;,&nbsp;&#39;d&#39;,&nbsp;&#39;e&#39;,&nbsp;&#39;f&#39;&nbsp;};\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessageDigest&nbsp;mdTemp&nbsp;=&nbsp;MessageDigest.getInstance(&quot;SHA1&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mdTemp.update(str.getBytes(&quot;UTF-8&quot;));\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;byte[]&nbsp;md&nbsp;=&nbsp;mdTemp.digest();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;j&nbsp;=&nbsp;md.length;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;buf[]&nbsp;=&nbsp;new&nbsp;char[j&nbsp;*&nbsp;2];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;k&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;j;&nbsp;i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;byte&nbsp;byte0&nbsp;=&nbsp;md[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buf[k++]&nbsp;=&nbsp;hexDigits[byte0&nbsp;&gt;&gt;&gt;&nbsp;4&nbsp;&amp;&nbsp;0xf];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buf[k++]&nbsp;=&nbsp;hexDigits[byte0&nbsp;&amp;&nbsp;0xf];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;String(buf);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/wx/at&quot;,method&nbsp;=&nbsp;RequestMethod.GET)\r\n&nbsp;&nbsp;&nbsp;&nbsp;@ResponseBody\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;&nbsp;getAccessToken()&nbsp;throws&nbsp;IOException\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getAccess_token();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;abc:&quot;+ACCESS_TOKEN;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;获取全局token方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;该方法通过使用HttpClient发送http请求，HttpGet()发送请求\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;微信返回的json中access_token是我们的全局token\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;synchronized&nbsp;void&nbsp;getAccess_token(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ACCESS_TOKEN&nbsp;==&nbsp;null&nbsp;||&nbsp;System.currentTimeMillis()&nbsp;-&nbsp;LASTTOKENTIME&nbsp;&gt;&nbsp;7000*1000){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//请求access_token地址\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;url&nbsp;=&nbsp;&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=xx&amp;secret=rr&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建提交方式\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HttpGet&nbsp;httpGet&nbsp;=&nbsp;new&nbsp;HttpGet(url);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取到httpclien\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HttpClient&nbsp;httpClient&nbsp;=&nbsp;new&nbsp;DefaultHttpClient();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//发送请求并得到响应\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HttpResponse&nbsp;response&nbsp;=&nbsp;httpClient.execute(httpGet);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//判断请求是否成功\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(response.getStatusLine().getStatusCode()&nbsp;==&nbsp;HttpStatus.SC_OK){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将得到的响应转为String类型\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;str&nbsp;=&nbsp;EntityUtils.toString(response.getEntity(),&nbsp;&quot;utf-8&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//字符串转json\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSONObject&nbsp;jsonObject&nbsp;=&nbsp;new&nbsp;JSONObject(str);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//输出access_token\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println((String)&nbsp;jsonObject.get(&quot;access_token&quot;));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//给静态变量赋值，获取到access_token\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ACCESS_TOKEN&nbsp;=&nbsp;(String)&nbsp;jsonObject.get(&quot;access_token&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//给获取access_token时间赋值，方便下此次获取时进行判断\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LASTTOKENTIME&nbsp;=&nbsp;System.currentTimeMillis();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(ClientProtocolException&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;TODO&nbsp;Auto-generated&nbsp;catch&nbsp;block\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(IOException&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;TODO&nbsp;Auto-generated&nbsp;catch&nbsp;block\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n}</pre><p style=\"margin: 10px auto; padding: 0px; font-size: 1.2em; font-family: Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p>', '2018-06-30 17:34:48', '2018-06-30 17:34:48');
INSERT INTO `article` VALUES ('55', 'Java微信公众号(三)：自定义创建菜单', '2', '微信公众号应用一般都有菜单，下面就给我我创建菜单的代码，亲测可用。只需要把appid,appsecret，token等换成你自己的就行，我利用的SSM+maven+idea+mysql开发的。根据创建菜单接口，关键是要有acces_token和菜单json格式的字符串，我并没有像别的例子那么复杂，菜单还拆的很细，写了很多类，搞蒙了，我这里直接写成字符串。然后封装了一个http的get,post请求类。引入第三方包，一个控制器，一个http请求类，就搞定了，就是这么简单。看代码。', '<p>访问：你的域名//wx/addmenu ，只要你配置的正确，就能成功创建菜单哦，我用测试号亲测的</p><p>package com.demo.controller.admin;</p><p>import com.demo.utils.HttpUtils;</p><p>import org.apache.http.HttpResponse;</p><p>import org.apache.http.HttpStatus;</p><p>import org.apache.http.client.HttpClient;</p><p>import org.apache.http.client.methods.HttpGet;</p><p>import org.apache.http.impl.client.DefaultHttpClient;</p><p>import org.apache.http.util.EntityUtils;</p><p>import org.springframework.boot.autoconfigure.EnableAutoConfiguration;</p><p>import org.springframework.stereotype.Controller;</p><p>import org.springframework.ui.Model;</p><p>import org.springframework.web.bind.annotation.RequestMapping;</p><p>import org.springframework.web.bind.annotation.RequestMethod;</p><p>import org.springframework.web.bind.annotation.ResponseBody;</p><p><br/></p><p>import javax.servlet.http.HttpServletRequest;</p><p>import javax.servlet.http.HttpServletResponse;</p><p>import java.io.IOException;</p><p>import java.security.MessageDigest;</p><p>import java.util.*;</p><p>import org.apache.http.client.ClientProtocolException;</p><p>import org.json.JSONObject;</p><p><br/></p><p>@Controller</p><p>@EnableAutoConfiguration</p><p>public class AdminWx {</p><p>&nbsp; &nbsp; private static final String token = &quot;wx&quot;; &nbsp; //接口配置信息里的url</p><p>&nbsp; &nbsp; private String url1 = &quot;<a href=\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=你自己的&secret=你自己的\">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=你自己的&amp;secret=你自己的</a>&nbsp;&quot;;</p><p>&nbsp; &nbsp; public static final String APPID = &quot;xxx&quot;;</p><p>&nbsp; &nbsp; public static final String APPSECRET = &quot;xxxxxxxxxxxxf&quot;;</p><p>&nbsp; &nbsp; /**全局token 所有与微信有交互的前提 */</p><p>&nbsp; &nbsp; public static String ACCESS_TOKEN;</p><p>&nbsp; &nbsp; /**全局token上次获取事件 */</p><p>&nbsp; &nbsp; public static long LASTTOKENTIME;</p><p><br/></p><p>&nbsp; &nbsp; @RequestMapping(value=&quot;/wx&quot;,method = RequestMethod.GET)</p><p>&nbsp; &nbsp; @ResponseBody</p><p>&nbsp; &nbsp; public String wxx(HttpServletRequest req, HttpServletResponse response)</p><p>&nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String signature = req.getParameter(&quot;signature&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String timestamp = req.getParameter(&quot;timestamp&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String nonce = req.getParameter(&quot;nonce&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String echostr = req.getParameter(&quot;echostr&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if(checkSignature(signature, timestamp, nonce)){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return echostr;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return &nbsp;&quot;wx&quot;;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; public static boolean checkSignature(String signature,String timestamp,String nonce){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String[] arr = new String[]{token,timestamp,nonce};</p><p>&nbsp; &nbsp; &nbsp; &nbsp; //排序</p><p>&nbsp; &nbsp; &nbsp; &nbsp; Arrays.sort(arr);</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; //生成字符串</p><p>&nbsp; &nbsp; &nbsp; &nbsp; StringBuffer content = new StringBuffer();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for(int i=0;i&lt;arr.length;i++){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; content.append(arr[i]);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; //sha1加密</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String temp = getSha1(content.toString());</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return temp.equals(signature);</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; /**</p><p>&nbsp; &nbsp; &nbsp;* Sha1加密方法</p><p>&nbsp; &nbsp; &nbsp;* @param str</p><p>&nbsp; &nbsp; &nbsp;* @return</p><p>&nbsp; &nbsp; &nbsp;*/</p><p>&nbsp; &nbsp; public static String getSha1(String str) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if (str == null || str.length() == 0) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return null;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; char hexDigits[] = { &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39; };</p><p>&nbsp; &nbsp; &nbsp; &nbsp; try {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MessageDigest mdTemp = MessageDigest.getInstance(&quot;SHA1&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mdTemp.update(str.getBytes(&quot;UTF-8&quot;));</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte[] md = mdTemp.digest();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int j = md.length;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char buf[] = new char[j * 2];</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int k = 0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int i = 0; i &lt; j; i++) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte byte0 = md[i];</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; buf[k++] = hexDigits[byte0 &gt;&gt;&gt; 4 &amp; 0xf];</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; buf[k++] = hexDigits[byte0 &amp; 0xf];</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return new String(buf);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return null;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; @RequestMapping(value=&quot;/wx/at&quot;,method = RequestMethod.GET)</p><p>&nbsp; &nbsp; @ResponseBody</p><p>&nbsp; &nbsp; public String &nbsp;getAccessToken() throws IOException</p><p>&nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; getAccess_token();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return &quot;abc:&quot;+ACCESS_TOKEN;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p><br/></p><p>&nbsp; &nbsp; /**</p><p>&nbsp; &nbsp; &nbsp;* 获取全局token方法</p><p>&nbsp; &nbsp; &nbsp;* 该方法通过使用HttpClient发送http请求，HttpGet()发送请求</p><p>&nbsp; &nbsp; &nbsp;* 微信返回的json中access_token是我们的全局token</p><p>&nbsp; &nbsp; &nbsp;*/</p><p>&nbsp; &nbsp; public static synchronized void getAccess_token(){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if(ACCESS_TOKEN == null || System.currentTimeMillis() - LASTTOKENTIME &gt; 7000*1000){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //请求access_token地址</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String url = &quot;<a href=\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=ni\">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=</a>你自己的&nbsp;&amp;secret=你自己的&quot;;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //创建提交方式</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HttpGet httpGet = new HttpGet(url);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //获取到httpclien</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HttpClient httpClient = new DefaultHttpClient();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //发送请求并得到响应</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HttpResponse response = httpClient.execute(httpGet);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //判断请求是否成功</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(response.getStatusLine().getStatusCode() == HttpStatus.SC_OK){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //将得到的响应转为String类型</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String str = EntityUtils.toString(response.getEntity(), &quot;utf-8&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //字符串转json</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; JSONObject jsonObject = new JSONObject(str);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //输出access_token</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println((String) jsonObject.get(&quot;access_token&quot;));</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //给静态变量赋值，获取到access_token</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ACCESS_TOKEN = (String) jsonObject.get(&quot;access_token&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //给获取access_token时间赋值，方便下此次获取时进行判断</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LASTTOKENTIME = System.currentTimeMillis();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (ClientProtocolException e) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated catch block</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (IOException e) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated catch block</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p><br/></p><p><br/></p><p>&nbsp; &nbsp; @RequestMapping(value = &quot;/wx/addmenu&quot;,method = RequestMethod.GET)</p><p>&nbsp; &nbsp; @ResponseBody</p><p>&nbsp; &nbsp; public String addWxMenu()</p><p>&nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; getAccess_token();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String jsonString=&quot;{\\&quot;button\\&quot;:[&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + &quot;{\\&quot;name\\&quot;:\\&quot;微登录\\&quot;,\\&quot;sub_button\\&quot;:&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + &quot;[{\\&quot;type\\&quot;:\\&quot;view\\&quot;,\\&quot;name\\&quot;:\\&quot;授权登录\\&quot;,\\&quot;key\\&quot;:\\&quot;11\\&quot;,\\&quot;url\\&quot;:\\&quot;http://www.javabcsx.cn/wx/user\\&quot;},&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + &quot;{\\&quot;type\\&quot;:\\&quot;click\\&quot;,\\&quot;name\\&quot;:\\&quot;帐号解绑\\&quot;,\\&quot;key\\&quot;:\\&quot;22\\&quot;}]}&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + &quot;,{\\&quot;type\\&quot;:\\&quot;click\\&quot;,\\&quot;name\\&quot;:\\&quot;微推送\\&quot;,\\&quot;key\\&quot;:\\&quot;20_PROMANAGE\\&quot;}]}&quot;;</p><p>// &nbsp; &nbsp; &nbsp; &nbsp;System.out.println(jsonString);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; //这里为请求接口的url +号后面的是token，这里就不做过多对token获取的方法解释</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String url=&quot;https://api.weixin.qq.com/cgi-bin/menu/create?access_token=&quot;+ACCESS_TOKEN;</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; try{</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String rs=HttpUtils.sendPost(url, jsonString);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(rs);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }catch(Exception e){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;请求错误！&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return &quot;abc&quot;;</p><p><br/></p><p>&nbsp; &nbsp; }</p><p>}</p><p><br/></p><p><br/></p><p>package com.demo.utils;</p><p>import java.io.BufferedReader;</p><p>import java.io.IOException;</p><p>import java.io.InputStreamReader;</p><p>import java.io.PrintWriter;</p><p>import java.io.OutputStreamWriter;</p><p>import java.net.URL;</p><p>import java.net.URLConnection;</p><p>import java.util.List;</p><p>import java.util.Map;</p><p><br/></p><p>public class HttpUtils {</p><p>&nbsp; &nbsp; /**</p><p>&nbsp; &nbsp; &nbsp;* 向指定URL发送GET方法的请求</p><p>&nbsp; &nbsp; &nbsp;*</p><p>&nbsp; &nbsp; &nbsp;* @param url</p><p>&nbsp; &nbsp; &nbsp;* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;发送请求的URL</p><p>&nbsp; &nbsp; &nbsp;* @param param</p><p>&nbsp; &nbsp; &nbsp;* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;请求参数，请求参数应该是 name1=value1&amp;name2=value2 的形式。</p><p>&nbsp; &nbsp; &nbsp;* @return URL 所代表远程资源的响应结果</p><p>&nbsp; &nbsp; &nbsp;*/</p><p>&nbsp; &nbsp; public static String sendGet(String url, String param) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String result = &quot;&quot;;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; BufferedReader in = null;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; try {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String urlNameString = url + &quot;?&quot; + param;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL realUrl = new URL(urlNameString);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 打开和URL之间的连接</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URLConnection connection = realUrl.openConnection();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 设置通用的请求属性</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connection.setRequestProperty(&quot;accept&quot;, &quot;*/*&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connection.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connection.setRequestProperty(&quot;user-agent&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 建立实际的连接</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connection.connect();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 获取所有响应头字段</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Map&lt;String, List&lt;String&gt;&gt; map = connection.getHeaderFields();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 遍历所有的响应头字段</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (String key : map.keySet()) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(key + &quot;---&gt;&quot; + map.get(key));</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 定义 BufferedReader输入流来读取URL的响应</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; in = new BufferedReader(new InputStreamReader(</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connection.getInputStream()));</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String line;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; while ((line = in.readLine()) != null) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result += line;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;发送GET请求出现异常！&quot; + e);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; // 使用finally块来关闭输入流</p><p>&nbsp; &nbsp; &nbsp; &nbsp; finally {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (in != null) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; in.close();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e2) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e2.printStackTrace();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return result;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; /**</p><p>&nbsp; &nbsp; &nbsp;* 向指定 URL 发送POST方法的请求</p><p>&nbsp; &nbsp; &nbsp;*</p><p>&nbsp; &nbsp; &nbsp;* @param url</p><p>&nbsp; &nbsp; &nbsp;* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;发送请求的 URL</p><p>&nbsp; &nbsp; &nbsp;* @param param</p><p>&nbsp; &nbsp; &nbsp;* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;请求参数，请求参数应该是 name1=value1&amp;name2=value2 的形式。</p><p>&nbsp; &nbsp; &nbsp;* @return 所代表远程资源的响应结果</p><p>&nbsp; &nbsp; &nbsp;*/</p><p>&nbsp; &nbsp; public static String sendPost(String url, String param) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; OutputStreamWriter out = null;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; BufferedReader in = null;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; String result = &quot;&quot;;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; try {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL realUrl = new URL(url);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 打开和URL之间的连接</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URLConnection conn = realUrl.openConnection();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 设置通用的请求属性</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn.setRequestProperty(&quot;accept&quot;, &quot;*/*&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn.setRequestProperty(&quot;connection&quot;, &quot;Keep-Alive&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn.setRequestProperty(&quot;user-agent&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn.setRequestProperty(&quot;Charset&quot;, &quot;UTF-8&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 发送POST请求必须设置如下两行</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn.setDoOutput(true);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn.setDoInput(true);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 获取URLConnection对象对应的输出流</p><p>// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;out = new PrintWriter(conn.getOutputStream());</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out = new OutputStreamWriter(conn.getOutputStream(), &quot;UTF-8&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 发送请求参数</p><p>// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;out.print(param);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out.write(param);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // flush输出流的缓冲</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out.flush();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 定义BufferedReader输入流来读取URL的响应</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; in = new BufferedReader(</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new InputStreamReader(conn.getInputStream()));</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String line;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; while ((line = in.readLine()) != null) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result += line;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;发送 POST 请求出现异常！&quot;+e);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; //使用finally块来关闭输出流、输入流</p><p>&nbsp; &nbsp; &nbsp; &nbsp; finally{</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try{</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(out!=null){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out.close();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(in!=null){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; in.close();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; catch(IOException ex){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ex.printStackTrace();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return result;</p><p>&nbsp; &nbsp; }</p><p>}</p><p><br/></p>', '2018-06-25 23:39:16', '2018-06-25 23:39:16');
INSERT INTO `article` VALUES ('56', 'React Native(四):导航react-navigation入门', '6', '今天跟着react native中文网学习使用导航器跳转页面，现在官方推荐React-Nevigation。但是react native中文网写的太简单，不知道该怎么用，就去搜索了其他文章。结果发现其他文章又写的太繁琐，一上来就给你介绍一大堆属性，代码也很零散，看的让人头大，几乎想要放弃。后来看到网址为：https://blog.csdn.net/mikuoohash/article/details/79933435 的这篇博客，自己按照博客的例子写了写，运行了一下，发现例子也比较简单。这才有点信心，继续研究下去。', '<pre class=\"brush:plain;toolbar:false\">react-navigation里面包含了三种Navigator：StackNavigator，TabNavigator和DrawerNavigator。\r\nStackNavigator可以实现最普通的跳转，比如在A页面点击一个按钮，然后跳转到B页面，就用StackNavigator，但是它会自动帮\r\n你的页面添加一个标题栏，如果是A跳转到B，还会在B页面的标题栏自动添加一个返回键。如果你不需要的话，可以通过设置属性，\r\n将它隐藏。\r\nTabNavigator可以实现类似于Android的TabLayout的效果，左右滑动屏幕来切换界面。这个导航栏的位置可以用属性控制，\r\n从而实现顶部导航栏或者底部导航栏的效果。\r\nDrawerNavigator可以实现侧滑，弹出抽屉的效果。\r\n我今天只实现了StackNavigator和TabNavigator两种，都只实现了简单的功能，这就是我所需要的，通过简单的例子让\r\n自己先有能力实现跳转，入门后，再学习各种复杂的属性。\r\n我把自己今天写的Demo贴一下。\r\n运行项目之前，要先下载一下react-navigation库，使用下面的命令\r\nnpm&nbsp;install&nbsp;--save&nbsp;react-navigation\r\n或者如果你之前安装了yarn,可以用命令：&nbsp;yarn&nbsp;add&nbsp;react-navigation，&nbsp;二者的效果是一样的。\r\n\r\n\r\n/*\r\n&nbsp;第一个例子：A界面点击按钮，跳转到B界面，再向B界面传一个值。这个例子只在一个文件就可以完成：写了2个组件\r\n*/\r\nimport&nbsp;React,{&nbsp;Component&nbsp;}&nbsp;from&nbsp;&#39;react&#39;;\r\nimport&nbsp;{Button,Text}&nbsp;from&nbsp;&#39;react-native&#39;;\r\nimport&nbsp;{&nbsp;StackNavigator&nbsp;}&nbsp;from&nbsp;&#39;react-navigation&#39;;\r\n\r\n/**\r\n&nbsp;实现界面跳转，最少需要两个界面，在这里，我写2个组件\r\n&nbsp;*/\r\n\r\nclass&nbsp;One&nbsp;extends&nbsp;Component{\r\n&nbsp;&nbsp;&nbsp;&nbsp;render(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;{navigate}=this.props.navigation;&nbsp;&nbsp;//固定写法，navigate用来实现跳转，名字不能改\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Button&nbsp;title=&#39;跳转&#39;&nbsp;onPress={()=&gt;navigate(&#39;two&#39;,{name:&#39;西游记ttt&#39;})}&nbsp;/&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\nclass&nbsp;Two&nbsp;&nbsp;extends&nbsp;Component{\r\n&nbsp;&nbsp;&nbsp;&nbsp;render(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;{state}=this.props.navigation;&nbsp;&nbsp;//固定写法，state包含了上一个页面传来的值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将传过来的值显示出来\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&gt;{state.params.name}&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n\r\n//使用StackNavigator构造函数，把2个界面传进去\r\nconst&nbsp;router&nbsp;=&nbsp;StackNavigator({\r\n&nbsp;&nbsp;&nbsp;one:&nbsp;{&nbsp;screen:One&nbsp;},&nbsp;&nbsp;//one,&nbsp;two键可以随便改，但是跳转的时候要用到\r\n&nbsp;&nbsp;&nbsp;two:&nbsp;{&nbsp;screen:Two&nbsp;}\r\n});\r\n\r\n\r\n//把这个文件暴露出去，就像组件的export&nbsp;default一样\r\nmodule.exports=router;\r\n\r\n\r\n/*\r\n&nbsp;第二个例子，实现TabNavigator，只需要两个组件（2个界面）就可以啦\r\n*/\r\nimport&nbsp;React,{&nbsp;Component&nbsp;}&nbsp;from&nbsp;&#39;react&#39;;\r\nimport&nbsp;{Button,Text}&nbsp;from&nbsp;&#39;react-native&#39;;\r\nimport&nbsp;{&nbsp;StackNavigator,&nbsp;TabNavigator&nbsp;}&nbsp;from&nbsp;&#39;react-navigation&#39;;\r\n\r\n\r\nclass&nbsp;Hello&nbsp;extends&nbsp;Component{\r\n&nbsp;&nbsp;&nbsp;&nbsp;render(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Text&gt;&nbsp;hell&nbsp;world!&nbsp;&lt;/Text&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n\r\nconst&nbsp;App&nbsp;&nbsp;=&nbsp;TabNavigator({\r\n&nbsp;&nbsp;&nbsp;&nbsp;one:&nbsp;{screen:&nbsp;Hello&nbsp;},\r\n&nbsp;&nbsp;&nbsp;&nbsp;two:&nbsp;{screen:&nbsp;Hello},\r\n&nbsp;&nbsp;&nbsp;&nbsp;three:{screen:Hello},\r\n&nbsp;&nbsp;&nbsp;&nbsp;four:{screen:Hello}\r\n});\r\n\r\nmodule.exports=App;</pre><p>第一张，第二张图是第一个例子效果： 第三张是第二个例子的</p><p><br/><img src=\"https://app.yinxiang.com/shard/s49/res/7bcd58ec-e4bf-4ba6-b12c-bf983a74a75b/61.png\" alt=\"\" class=\"en-media\"/><br/><img src=\"https://app.yinxiang.com/shard/s49/res/52a8a3f5-9e80-4200-96ad-9aa2f634af55/611.png\" alt=\"\" class=\"en-media\"/></p><p><br/><img src=\"https://app.yinxiang.com/shard/s49/res/74d77b90-c1f4-418f-b370-5a8af9b11576/612.png\" alt=\"\" class=\"en-media\"/></p><p><br/></p>', '2018-06-29 23:12:41', '2018-06-29 23:12:41');
INSERT INTO `article` VALUES ('57', 'PHPExcel读取excel超过26列的值，生成超过26列excel', '3', 'PHPExcel是一个PHP类库，用来帮助我们简单、高效实现从Excel读取Excel的数据和导出数据到Excel。网上的很多教程并没有任何处理读取超过27列的excel，我的这篇文章给出了方法，很简单的。只需要引入phpexcel类。就可以使用。亲测的哦，亲', '<pre class=\"brush:plain;toolbar:false\">&lt;?php\r\n//PHPExcel读取excel超过26列的值，生生超过26列excel\r\n第一步骤，把phpexcel类库引入进来\r\n//读取excel数据\r\nfunction&nbsp;readExcel($fileName)\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$file&nbsp;=&nbsp;$fileName;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!file_exists($fileName))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die(&#39;no&nbsp;file!&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;$extension&nbsp;=&nbsp;strtolower(&nbsp;pathinfo($fileName,&nbsp;PATHINFO_EXTENSION)&nbsp;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($extension&nbsp;==&#39;xlsx&#39;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objReader&nbsp;=&nbsp;new&nbsp;\\PHPExcel_Reader_Excel2007();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objExcel&nbsp;=&nbsp;$objReader&nbsp;-&gt;load($file);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;($extension&nbsp;==&#39;xls&#39;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objReader&nbsp;=&nbsp;new&nbsp;\\PHPExcel_Reader_Excel5();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objExcel&nbsp;=&nbsp;$objReader&nbsp;-&gt;load($file);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;($extension==&#39;csv&#39;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$PHPReader&nbsp;=&nbsp;new&nbsp;\\PHPExcel_Reader_CSV();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//默认输入字符集\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$PHPReader-&gt;setInputEncoding(&#39;GBK&#39;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//默认的分隔符\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$PHPReader-&gt;setDelimiter(&#39;,&#39;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//载入文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objExcel&nbsp;=&nbsp;$PHPReader-&gt;load($file);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;$sheet&nbsp;=&nbsp;$objExcel&nbsp;-&gt;getSheet(0);\r\n&nbsp;&nbsp;&nbsp;//&nbsp;var_dump($sheet);\r\n\r\n&nbsp;&nbsp;&nbsp;//&nbsp;$sheet&nbsp;=&nbsp;$PHPExcel-&gt;getSheet(0);&nbsp;//&nbsp;读取第一個工作表\r\n&nbsp;&nbsp;&nbsp;&nbsp;$highestRow&nbsp;=&nbsp;$sheet-&gt;getHighestRow();&nbsp;//&nbsp;取得总行数\r\n&nbsp;&nbsp;&nbsp;&nbsp;$highestColumm&nbsp;=&nbsp;$sheet-&gt;getHighestColumn();&nbsp;//&nbsp;取得总列数\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;//字段\r\n&nbsp;&nbsp;&nbsp;&nbsp;$fields&nbsp;=[];\r\n&nbsp;&nbsp;&nbsp;&nbsp;$i&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($column&nbsp;=&nbsp;&#39;A&#39;;&nbsp;$column&nbsp;!=&nbsp;$highestColumm;&nbsp;$column++)&nbsp;{//列数是以A列开始\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($i&gt;25){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$num&nbsp;=&nbsp;ord($column)+$i;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$num&nbsp;=&nbsp;ord($column);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$val&nbsp;=&nbsp;$sheet-&gt;getCellByColumnAndRow($num-65,1)-&gt;getValue();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//echo&nbsp;$column.$num.&#39;：&#39;.$val.&#39;&lt;br&gt;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fields[$num-65]&nbsp;=&nbsp;$val;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$i++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;//最后一列处理\r\n&nbsp;&nbsp;&nbsp;&nbsp;$num&nbsp;+=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$val&nbsp;=&nbsp;$sheet-&gt;getCellByColumnAndRow($num-65,1)-&gt;getValue();\r\n&nbsp;&nbsp;&nbsp;&nbsp;$fields[$num-65]&nbsp;=&nbsp;$val;\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;循环读取每个单元格的数据&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;$values&nbsp;=&nbsp;[];\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($row&nbsp;=&nbsp;2;&nbsp;$row&nbsp;&lt;=&nbsp;$highestRow;&nbsp;$row++){//行数是以第1行开始\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmp&nbsp;=&nbsp;[];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$i&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($column&nbsp;=&nbsp;&#39;A&#39;;&nbsp;$column&nbsp;!=&nbsp;$highestColumm;&nbsp;$column++)&nbsp;{//列数是以A列开始\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($i&gt;25){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$num&nbsp;=&nbsp;ord($column)+$i;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$num&nbsp;=&nbsp;ord($column);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$val&nbsp;=&nbsp;$sheet-&gt;getCellByColumnAndRow($num-65,$row)-&gt;getValue();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmp[$fields[$num-65]]&nbsp;=&nbsp;$val;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$i++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$num&nbsp;+=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$val&nbsp;=&nbsp;$sheet-&gt;getCellByColumnAndRow($num-65,$row)-&gt;getValue();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmp[$fields[$num-65]]&nbsp;=&nbsp;$val;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array_push($values,$tmp);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;dump($values);\r\n}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n测试：	\r\n&nbsp;$file&nbsp;=&nbsp;&quot;D:/abc/a.xlsx&quot;;\r\n&nbsp;readExcel($file);\r\n\r\n&nbsp;生成excel例子\r\n$keys&nbsp;=&nbsp;[&#39;name&#39;,&#39;pwd&#39;,&#39;age&#39;];\r\n$rs&nbsp;=&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&#39;name&#39;=&gt;&#39;aaa&#39;,&#39;pwd&#39;=&gt;123,&#39;age&#39;=&gt;55],\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&#39;name&#39;=&gt;&#39;aaa&#39;,&#39;pwd&#39;=&gt;123,&#39;age&#39;=&gt;55],\r\n&nbsp;&nbsp;[&#39;name&#39;=&gt;&#39;aaa&#39;,&#39;pwd&#39;=&gt;123,&#39;age&#39;=&gt;55],\r\n];\r\n&nbsp;&nbsp;&nbsp;&nbsp;getExcel(&quot;D:/abc/b.xlsx&quot;,$keys,$rs);\r\n&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;getExcel($fileName,$headArr,$data)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//$headArr,&nbsp;设置的表头\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//$data&nbsp;传过来的需要导出的数据&nbsp;二维数组\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$date&nbsp;=&nbsp;date(&quot;Y_m_d&quot;,&nbsp;time());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fileName&nbsp;.=&nbsp;&quot;_{$date}.xls&quot;;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建PHPExcel对象，注意，不能少了\\\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel&nbsp;=&nbsp;new&nbsp;\\PHPExcel();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objProps&nbsp;=&nbsp;$objPHPExcel-&gt;getProperties();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置表头&nbsp;超过26列\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($headArr&nbsp;as&nbsp;$v)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//注意，不能少了。将列数字转换为字母\\\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$colum&nbsp;=&nbsp;\\PHPExcel_Cell::stringFromColumnIndex($key);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;setActiveSheetIndex(0)-&gt;setCellValue($colum&nbsp;.&nbsp;&#39;1&#39;,&nbsp;$v);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key&nbsp;+=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置表头\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;$key&nbsp;=&nbsp;ord(&quot;A&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//print_r($headArr);exit;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach($headArr&nbsp;as&nbsp;$v){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$colum&nbsp;=&nbsp;chr($key);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;setActiveSheetIndex(0)&nbsp;-&gt;setCellValue($colum.&#39;1&#39;,&nbsp;$v);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;setActiveSheetIndex(0)&nbsp;-&gt;setCellValue($colum.&#39;1&#39;,&nbsp;$v);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key&nbsp;+=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$column&nbsp;=&nbsp;2;&nbsp;//从第二行写入数据&nbsp;第一行是表头\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objActSheet&nbsp;=&nbsp;$objPHPExcel-&gt;getActiveSheet();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//print_r($data);exit;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*foreach($data&nbsp;as&nbsp;$key&nbsp;=&gt;&nbsp;$rows){&nbsp;//行写入\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$span&nbsp;=&nbsp;ord(&quot;A&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach($rows&nbsp;as&nbsp;$keyName=&gt;$value){//&nbsp;列写入\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$j&nbsp;=&nbsp;chr($span);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objActSheet-&gt;setCellValue($j.$column,&nbsp;$value);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$span++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$column++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($data&nbsp;as&nbsp;$key&nbsp;=&gt;&nbsp;$rows)&nbsp;{&nbsp;//行写入\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$span&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($rows&nbsp;as&nbsp;$keyName&nbsp;=&gt;&nbsp;$value)&nbsp;{//&nbsp;列写入\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$j&nbsp;=&nbsp;\\PHPExcel_Cell::stringFromColumnIndex($span);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objActSheet-&gt;setCellValue($j&nbsp;.&nbsp;$column,&nbsp;$value);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$span++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$column++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$fileName&nbsp;=&nbsp;iconv(&quot;utf-8&quot;,&nbsp;&quot;gb2312&quot;,&nbsp;$fileName);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;&nbsp;//重命名表\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;getActiveSheet()-&gt;setTitle($date);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置字体大小\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;getDefaultStyle()-&gt;getFont()-&gt;setSize(14);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置单元格宽度\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;getActiveSheet()-&gt;getColumnDimension(&#39;A&#39;)-&gt;setWidth(15);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置默认行高\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;getActiveSheet()-&gt;getDefaultRowDimension()-&gt;setRowHeight(23);\r\n&nbsp;*/\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//重命名表\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//$objPHPExcel-&gt;getActiveSheet()-&gt;setTitle(&#39;test&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置活动单指数到第一个表,所以Excel打开这是第一个表\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;setActiveSheetIndex(0);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ob_end_clean();//清除缓冲区,避免乱码\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Content-Type:&nbsp;application/vnd.ms-excel&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&quot;Content-Disposition:&nbsp;attachment;filename=\\&quot;$fileName\\&quot;&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Cache-Control:&nbsp;max-age=0&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objWriter&nbsp;=&nbsp;\\PHPExcel_IOFactory::createWriter($objPHPExcel,&nbsp;&#39;Excel5&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objWriter-&gt;save(&#39;php://output&#39;);&nbsp;//文件通过浏览器下载\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p><br/></p>', '2018-06-30 17:11:05', '2018-06-30 17:11:05');
INSERT INTO `article` VALUES ('58', 'java 集合类Array、List、Map区别和优缺点', '2', 'Java最常用的集合是List，Map,大部分需求用ArrayList，HashMap，加Array数组就可以实现。所以我们如果是初学者，先把基础的，常用的学会了，也就是先了解list，map，set的区别，知道是干什么的，然后学会用ArrayList,HashMap,数组，工作之后或者java基本知识会了再深入。很多博客一上来就谈一堆集合属性，集合接口，集合结构，追求大而全，对初学者不利，很多深入的东西大多都是循序渐进的，学完整本书或者上班之后随项目的进展不断深入的。', '<pre class=\"brush:plain;toolbar:false\">第一类：Array、Arrays\r\n\r\n第二类：Collection&nbsp;：List、Set\r\n第三类：Map&nbsp;：HashMap、HashTable\r\n\r\n\r\n\r\n一、Array&nbsp;，&nbsp;Arrays\r\n\r\nJava所有“存储及随机访问一连串对象”的做法，array是最有效率的一种。\r\n\r\n1、\r\n效率高，但容量固定且无法动态改变。\r\narray还有一个缺点是，无法判断其中实际存有多少元素，length只是告诉我们array的容量。\r\n\r\n2、Java中有一个Arrays类，专门用来操作array&nbsp;。\r\n&nbsp;&nbsp;&nbsp;&nbsp;arrays中拥有一组static函数，\r\nequals()：比较两个array是否相等。array拥有相同元素个数，且所有对应元素两两相等。\r\nfill()：将值填入array中。\r\nsort()：用来对array进行排序。\r\nbinarySearch()：在排好序的array中寻找元素。\r\nSystem.arraycopy()：array的复制。\r\n\r\n\r\n二、Collection&nbsp;，&nbsp;Map\r\n\r\n若撰写程序时不知道究竟需要多少对象，需要在空间不足时自动扩增容量，则需要使用容器类库，array不适用。\r\n\r\n1、Collection&nbsp;和&nbsp;Map&nbsp;的区别\r\n\r\n容器内每个为之所存储的元素个数不同。\r\nCollection类型者，每个位置只有一个元素。\r\nMap类型者，持有&nbsp;key-value&nbsp;pair，像个小型数据库。\r\n\r\n2、各自旗下的子类关系\r\n\r\nCollection\r\n&nbsp;&nbsp;&nbsp;&nbsp;--List&nbsp;：&nbsp;将以特定次序存储元素。所以取出来的顺序可能和放入顺序不同。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--ArrayList&nbsp;/&nbsp;LinkedList&nbsp;/&nbsp;Vector\r\n&nbsp;&nbsp;&nbsp;&nbsp;--Set&nbsp;：&nbsp;不能含有重复的元素\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--HashSet&nbsp;/&nbsp;TreeSet\r\nMap\r\n&nbsp;&nbsp;&nbsp;&nbsp;--HashMap\r\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;HashTable\r\n&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;TreeMap\r\n\r\n3、其他特征\r\n\r\n*&nbsp;&nbsp;List，Set，Map将持有对象一律视为Object型别。\r\n*&nbsp;&nbsp;Collection、List、Set、Map都是接口，不能实例化。\r\n&nbsp;&nbsp;&nbsp;继承自它们的&nbsp;ArrayList,&nbsp;Vector,&nbsp;HashTable,&nbsp;HashMap是具象class，这些才可被实例化。\r\n*&nbsp;&nbsp;vector容器确切知道它所持有的对象隶属什么型别。vector不进行边界检查。\r\n\r\n\r\n三、Collections\r\n\r\nCollections是针对集合类的一个帮助类。&nbsp;提供了一系列静态&nbsp;方法实现对各种集合的搜索、排序、线程完全化等操作。\r\n相当于对Array进行类似操作的类——Arrays。\r\n如，Collections.max(Collection&nbsp;coll);&nbsp;取coll中最大的元素。\r\n&nbsp;&nbsp;&nbsp;&nbsp;Collections.sort(List&nbsp;list);&nbsp;对list中元素排序\r\n\r\n四、如何选择？\r\n\r\n1、容器类和Array的区别、择取\r\n&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;容器类仅能持有对象引用（指向对象的指针），而不是将对象信息copy一份至数列某位置。\r\n&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;一旦将对象置入容器内，便损失了该对象的型别信息。\r\n\r\n2、\r\n&nbsp;&nbsp;*&nbsp;&nbsp;在各种Lists中，最好的做法是以ArrayList作为缺省选择。当插入、删除频繁时，使用LinkedList()；\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Vector总是比ArrayList慢，所以要尽量避免使用。\r\n&nbsp;&nbsp;*&nbsp;&nbsp;在各种Sets中，HashSet通常优于HashTree（插入、查找）。只有当需要产生一个经过排序的序列，才用TreeSet。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HashTree存在的唯一理由：能够维护其内元素的排序状态。\r\n&nbsp;&nbsp;*&nbsp;&nbsp;在各种Maps中\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HashMap用于快速查找。\r\n&nbsp;&nbsp;*&nbsp;&nbsp;当元素个数固定，用Array，因为Array效率是最高的。\r\n\r\n结论：最常用的是ArrayList，HashSet，HashMap，Array。\r\n\r\n\r\n注意：\r\n\r\n1、Collection没有get()方法&nbsp;来取得某个元素。只能通过iterator()遍历元素。\r\n2、Set&nbsp;和Collection拥有一模一样的接口。\r\n3、List&nbsp;，可以通过get()方法来一次取出一个元素&nbsp;。使用数字来选择一堆对象中的一个，get(0)...。(add/get)\r\n4、一般使用ArrayList。用LinkedList构造堆栈stack、队列queue&nbsp;。\r\n\r\n5、Map用&nbsp;put(k,v)&nbsp;/&nbsp;get(k)&nbsp;，还可以使用containsKey()/containsValue()来检查其中是否含有某个key/value。\r\n&nbsp;&nbsp;&nbsp;HashMap会利用对象的hashCode来快速找到key。\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;hashing\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;哈希码就是将对象的信息经过一些转变形成一个独一无二的int值，这个值存储在一个array中。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们都知道所有存储结构中，array查找速度是最快的。所以，可以加速查找。\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;发生碰撞时，让array指向多个values。即，数组每个位置上又生成一个梿表。\r\n\r\n6、Map中元素，可以将key序列、value序列单独抽取出来。\r\n使用keySet()&nbsp;抽取key序列，将map中的所有keys生成一个Set。\r\n使用values(&nbsp;)&nbsp;抽取value序列，将map中的所有values生成一个Collection。\r\n\r\n为什么一个生成Set，一个生成Collection？那是因为，key总是独一无二的，value允许重复。\r\n\r\n\r\n7.Java中的HashMap的工作原理是什么？\r\n\r\nJava中的HashMap是以键值对(key-value)的形式存储元素的。HashMap需要一个hash函数，它使用hashCode()和equals()方法来\r\n向集合/从集合添加和检索元素。当调用put()方法的时候，HashMap会计算key的hash值，然后把键值对存储在集合中合适的索引上。\r\n如果key已经存在了，value会被更新成新值。HashMap的一些重要的特性是它的容量(capacity)，负载因子(load&nbsp;factor)和扩容\r\n极限(threshold&nbsp;resizing)。\r\n\r\n8.hashCode()和equals()方法的重要性体现在什么地方？\r\n\r\nJava中的HashMap使用hashCode()和equals()方法来确定键值对的索引，当根据键获取值的时候也会用到这两个方法。如果没有正\r\n确的实现这两个方法，两个不同的键可能会有相同的hash值，因此，可能会被集合认为是相等的。而且，这两个方法也用来发现重复\r\n元素。所以这两个方法的实现对HashMap的精确性和正确性是至关重要的。\r\n\r\n9.HashMap和Hashtable有什么区别？\r\n\r\nHashMap和Hashtable都实现了Map接口，因此很多特性非常相似。但是，他们有以下不同点：\r\nHashMap允许键和值是null，而Hashtable不允许键或者值是null。\r\nHashtable是同步的，而HashMap不是。因此，HashMap更适合于单线程环境，而Hashtable适合于多线程环境。\r\nHashMap提供了可供应用迭代的键的集合，因此，HashMap是快速失败的。另一方面，Hashtable提供了对键的列举(Enumeration)。\r\n一般认为Hashtable是一个遗留的类。\r\n10.数组(Array)和列表(ArrayList)有什么区别？什么时候应该使用Array而不是ArrayList？\r\n\r\n下面列出了Array和ArrayList的不同点：\r\n\r\nArray可以包含基本类型和对象类型，ArrayList只能包含对象类型。\r\nArray大小是固定的，ArrayList的大小是动态变化的。\r\nArrayList提供了更多的方法和特性，比如：addAll()，removeAll()，iterator()等等。\r\n对于基本类型数据，集合使用自动装箱来减少编码工作量。但是，当处理固定大小的基本数据类型的时候，这种方式相对比较慢。\r\n11.ArrayList和LinkedList有什么区别？\r\n\r\nArrayList和LinkedList都实现了List接口，他们有以下的不同点：\r\n\r\nArrayList是基于索引的数据接口，它的底层是数组。它可以以O(1)时间复杂度对元素进行随机访问。与此对应，LinkedList是以元\r\n素列表的形式存储它的数据，每一个元素都和它的前一个和后一个元素链接在一起，在这种情况下，查找某个元素的时间复杂度是O(n)。\r\n\r\n相对于ArrayList，LinkedList的插入，添加，删除操作速度更快，因为当元素被添加到集合任意位置的时候，不需要像数组那样重\r\n新计算大小或者是更新索引。\r\n\r\nLinkedList比ArrayList更占内存，因为LinkedList为每一个节点存储了两个引用，一个指向前一个元素，一个指向下一个元素。\r\n\r\n\r\n例子\r\nimport&nbsp;java.util.*;\r\n\r\npublic&nbsp;class&nbsp;Test&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;String&gt;&nbsp;arr&nbsp;=&nbsp;new&nbsp;ArrayList&lt;String&gt;();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.add(&quot;张三&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.add(&quot;李四&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr.add(&quot;王五&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(String&nbsp;s:&nbsp;arr){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;String,String&gt;&nbsp;m&nbsp;=&nbsp;new&nbsp;HashMap&lt;String,String&gt;();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.put(&quot;one&quot;,&quot;张三&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.put(&quot;two&quot;,&quot;李四&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.put(&quot;three&quot;,&quot;王五&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;for(String&nbsp;key:m.keySet()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;key:&quot;+key+&quot;&nbsp;&nbsp;&nbsp;value:&quot;+m.get(key));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n\r\n/*\r\n\r\n输出：\r\n\r\n张三\r\n李四\r\n王五\r\nkey:one&nbsp;&nbsp;&nbsp;value:张三\r\nkey:two&nbsp;&nbsp;&nbsp;value:李四\r\nkey:three&nbsp;&nbsp;&nbsp;value:王五\r\n\r\nProcess&nbsp;finished&nbsp;with&nbsp;exit&nbsp;code&nbsp;0\r\n\r\n*/\r\n\r\n参考：https://www.cnblogs.com/xionggeclub/p/7243407.html</pre><p><br/></p>', '2018-07-02 23:50:02', '2018-07-02 23:50:02');
INSERT INTO `article` VALUES ('59', 'Java IO(一): FileInputStream，FileOutputStream，File', '2', 'java中输入输出IO流很重要，常用的流我们必须要熟练掌握，今天IO第一课先说2个最最重要的流InputStream和OutputStream。\r\n说三遍，必须会哦，必须会，必须会，如果你是小白，你先别看那些复杂的IO流结构图，大而全的把你搞蒙了，我们需要的是先学会\r\n最简单的，先入门哦。\r\nInputStream和OutputStream是抽象类，是所有字节输入流和输出流的父类。这里，我们首先要分清楚两个概念：\r\nInputStream(输入流):输入流是用来读入数据的。- - - > > >读入\r\nOutputStream(输出流):输出流是用来写出数据的。- - - > > >写出\r\n', '<pre class=\"brush:plain;toolbar:false\">下面将要讨论的两个重要的流是&nbsp;FileInputStream&nbsp;和&nbsp;FileOutputStream：\r\nFileInputStream\r\n该流用于从文件读取数据，它的对象可以用关键字&nbsp;new&nbsp;来创建。\r\n有多种构造方法可用来创建对象。\r\n可以使用字符串类型的文件名来创建一个输入流对象来读取文件：\r\nInputStream&nbsp;f&nbsp;=&nbsp;new&nbsp;FileInputStream(&quot;C:/java/hello&quot;);\r\n也可以使用一个文件对象来创建一个输入流对象来读取文件。我们首先得使用&nbsp;File()&nbsp;方法来创建一个文件对象：\r\nFile&nbsp;f&nbsp;=&nbsp;new&nbsp;File(&quot;C:/java/hello&quot;);\r\nInputStream&nbsp;out&nbsp;=&nbsp;new&nbsp;FileInputStream(f);\r\n创建了InputStream对象，就可以使用下面的方法来读取流或者进行其他的流操作。\r\n\r\n\r\n1&nbsp;&nbsp;public&nbsp;void&nbsp;close()&nbsp;throws&nbsp;IOException{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。\r\n2&nbsp;&nbsp;protected&nbsp;void&nbsp;finalize()throws&nbsp;IOException&nbsp;{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其&nbsp;close&nbsp;方法。抛出IOException异常。\r\n3&nbsp;&nbsp;public&nbsp;int&nbsp;read(int&nbsp;r)throws&nbsp;IOException{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;这个方法从&nbsp;InputStream&nbsp;对象读取指定字节的数据。返回为整数值。返回下一字节数据，如果已经到结尾则返回-1。\r\n4&nbsp;&nbsp;public&nbsp;int&nbsp;read(byte[]&nbsp;r)&nbsp;throws&nbsp;IOException{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;这个方法从输入流读取r.length长度的字节。返回读取的字节数。如果是文件结尾则返回-1。\r\n5&nbsp;&nbsp;public&nbsp;int&nbsp;available()&nbsp;throws&nbsp;IOException{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;返回下一次对此输入流调用的方法可以不受阻塞地从此输入流读取的字节数。返回一个整数值。\r\n除了&nbsp;InputStream&nbsp;外，还有一些其他的输入流，更多的细节参考:\r\n&nbsp;&nbsp;&nbsp;&nbsp;ByteArrayInputStream\r\n&nbsp;&nbsp;&nbsp;&nbsp;DataInputStream\r\n\r\nFileOutputStream\r\n&nbsp;&nbsp;&nbsp;&nbsp;该类用来创建一个文件并向文件中写数据。\r\n&nbsp;&nbsp;&nbsp;&nbsp;如果该流在打开文件进行输出前，目标文件不存在，那么该流会创建该文件。\r\n&nbsp;&nbsp;&nbsp;&nbsp;有两个构造方法可以用来创建&nbsp;FileOutputStream&nbsp;对象。\r\n&nbsp;&nbsp;&nbsp;&nbsp;使用字符串类型的文件名来创建一个输出流对象：\r\n&nbsp;&nbsp;&nbsp;&nbsp;OutputStream&nbsp;f&nbsp;=&nbsp;new&nbsp;FileOutputStream(&quot;C:/java/hello&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;也可以使用一个文件对象来创建一个输出流来写文件。我们首先得使用File()方法来创建一个文件对象：\r\n&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;f&nbsp;=&nbsp;new&nbsp;File(&quot;C:/java/hello&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;OutputStream&nbsp;f&nbsp;=&nbsp;new&nbsp;FileOutputStream(f);\r\n&nbsp;&nbsp;&nbsp;&nbsp;创建OutputStream&nbsp;对象完成后，就可以使用下面的方法来写入流或者进行其他的流操作。\r\n\r\n\r\n1&nbsp;&nbsp;public&nbsp;void&nbsp;close()&nbsp;throws&nbsp;IOException{}\r\n&nbsp;&nbsp;&nbsp;关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。\r\n2&nbsp;&nbsp;protected&nbsp;void&nbsp;finalize()throws&nbsp;IOException&nbsp;{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其&nbsp;close&nbsp;方法。抛出IOException异常。\r\n3&nbsp;&nbsp;public&nbsp;void&nbsp;write(int&nbsp;w)throws&nbsp;IOException{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;这个方法把指定的字节写到输出流中。\r\n4&nbsp;&nbsp;public&nbsp;void&nbsp;write(byte[]&nbsp;w)\r\n&nbsp;&nbsp;&nbsp;&nbsp;把指定数组中w.length长度的字节写到OutputStream中。\r\n除了OutputStream外，还有一些其他的输出流，更多的细节参考:\r\n&nbsp;&nbsp;&nbsp;&nbsp;ByteArrayOutputStream\r\n&nbsp;&nbsp;&nbsp;&nbsp;DataOutputStream\r\n\r\n\r\n\r\n\r\n实例\r\n下面是一个演示&nbsp;InputStream&nbsp;和&nbsp;OutputStream&nbsp;用法的例子：\r\nfileStreamTest.java&nbsp;文件代码：\r\nimport&nbsp;java.io.*;\r\n&nbsp;\r\npublic&nbsp;class&nbsp;Test{\r\n&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String&nbsp;args[]){\r\n&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;bWrite&nbsp;[]&nbsp;=&nbsp;{11,21,3,40,5};\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OutputStream&nbsp;os&nbsp;=&nbsp;new&nbsp;FileOutputStream(&quot;test.txt&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;bWrite.length&nbsp;;&nbsp;i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;os.write(&nbsp;bWrite[i]&nbsp;);&nbsp;//&nbsp;writes&nbsp;the&nbsp;bytes\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;os.close();\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;InputStream&nbsp;is&nbsp;=&nbsp;new&nbsp;FileInputStream(&quot;test.txt&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;//available():返回与之关联的文件的字节数\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;size&nbsp;=&nbsp;is.available();\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i=0;&nbsp;i&lt;&nbsp;size;&nbsp;i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print((char)is.read()&nbsp;+&nbsp;&quot;&nbsp;&nbsp;&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is.close();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}catch(IOException&nbsp;e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(&quot;Exception&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;}\r\n}\r\n上面的程序首先创建文件test.txt，并把给定的数字以二进制形式写进该文件，同时输出到控制台上。\r\n以上代码由于是二进制写入，可能存在乱码，你可以使用以下代码实例来解决乱码问题：\r\n\r\nimport&nbsp;java.io.*;\r\n\r\npublic&nbsp;class&nbsp;Test&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//写入文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;f&nbsp;=&nbsp;new&nbsp;File(&quot;a.txt&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;构建FileOutputStream对象,文件不存在会自动新建\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileOutputStream&nbsp;fop&nbsp;=&nbsp;new&nbsp;FileOutputStream(f);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;构建OutputStreamWriter对象,参数可以指定编码,默认为操作系统默认编码,windows上是gbk\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OutputStreamWriter&nbsp;writer&nbsp;=&nbsp;new&nbsp;OutputStreamWriter(fop,&quot;UTF-8&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;写入到缓冲区,&nbsp;\\r\\n是换行\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.append(&quot;中文输入\\r\\nenglish&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//关闭写入流,同时会把缓冲区内容写入文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.close();\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//读取文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;构建FileInputStream对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileInputStream&nbsp;in&nbsp;=&nbsp;new&nbsp;FileInputStream(f);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//构建InputStreamReader对象,编码与写入相同\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InputStreamReader&nbsp;reader&nbsp;=&nbsp;new&nbsp;InputStreamReader(in,&quot;UTF-8&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuffer&nbsp;sb&nbsp;=&nbsp;new&nbsp;StringBuffer();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(reader.ready()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;转成char加到StringBuffer对象中\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sb.append((char)reader.read());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(sb.toString());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;关闭读取流\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.close();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;关闭输入流,释放系统资源\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in.close();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;控制台输出：\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;中文输入\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;english\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}catch(IOException&nbsp;e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n\r\n文件和I/O\r\n还有一些关于文件和I/O的类，我们也需要知道：\r\nFile&nbsp;Class(类)\r\nFileReader&nbsp;Class(类)\r\nFileWriter&nbsp;Class(类)\r\n\r\nJava中的目录\r\n创建目录：\r\nFile类中有两个方法可以用来创建文件夹：\r\nmkdir(&nbsp;)方法创建一个文件夹，成功则返回true，失败则返回false。失败表明File对象指定的路径已经存在，或者由于\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;整个路径还不存在，该文件夹不能被创建。\r\nmkdirs()方法创建一个文件夹和它的所有父文件夹。\r\n下面的例子创建&nbsp;src/dist文件夹：\r\nimport&nbsp;java.io.*;\r\n\r\npublic&nbsp;class&nbsp;Test&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;dirname&nbsp;=&nbsp;&quot;./src/dist&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;f=&nbsp;new&nbsp;File(dirname);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.mkdirs();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}catch(Exception&nbsp;e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n编译并执行上面代码来创建目录&nbsp;&quot;/tmp/user/java/bin&quot;。\r\n注意：&nbsp;Java&nbsp;在&nbsp;UNIX&nbsp;和&nbsp;Windows&nbsp;自动按约定分辨文件路径分隔符。如果你在Windows版本的Java中使用分隔符&nbsp;(/)&nbsp;，\r\n路径依然能够被正确解析。\r\n\r\n\r\n读取目录\r\n一个目录其实就是一个&nbsp;File&nbsp;对象，它包含其他文件和文件夹。\r\n如果创建一个&nbsp;File&nbsp;对象并且它是一个目录，那么调用&nbsp;isDirectory()&nbsp;方法会返回&nbsp;true。\r\n可以通过调用该对象上的&nbsp;list()&nbsp;方法，来提取它包含的文件和文件夹的列表。\r\n下面展示的例子说明如何使用&nbsp;list()&nbsp;方法来检查一个文件夹中包含的内容：\r\n\r\n检查的文件夹是一个ssm+maven的项目：\r\n\r\nimport&nbsp;java.io.*;\r\n\r\npublic&nbsp;class&nbsp;Test&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;dir&nbsp;=&nbsp;&quot;D:/xm/java-xm/demo/src&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;f&nbsp;=&nbsp;new&nbsp;File(dir);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(f.isDirectory()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;目录：&quot;+dir);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;s[]&nbsp;=&nbsp;f.list();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i=0;i&lt;s.length;i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;f1&nbsp;=&nbsp;new&nbsp;File(dir+&quot;/&quot;+s[i]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(f1.isDirectory()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s[i]+&quot;&nbsp;是一个目录&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(s[i]+&nbsp;&quot;&nbsp;是一个文件&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(dir+&quot;&nbsp;不是一个目录&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}catch(Exception&nbsp;e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输出例子：\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;目录：D:/xm/java-xm/demo/src\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;main&nbsp;是一个目录\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test&nbsp;是一个目录\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n删除目录或文件\r\n删除文件可以使用&nbsp;java.io.File.delete()&nbsp;方法。\r\n以下代码会删除dist目录，需要注意当删除某一目录时，必须保证该目录下没有其他文件才能正确删除，否则将删除失败。\r\n测试目录结构：\r\n/src/\r\n|--&nbsp;Test.java\r\n|--&nbsp;dist文件夹\r\n\r\n\r\nimport&nbsp;java.io.*;\r\n\r\npublic&nbsp;class&nbsp;Test&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;这里修改为自己的测试目录\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;folder&nbsp;=&nbsp;new&nbsp;File(&quot;./src/dist&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deleteFolder(folder);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;//删除文件及目录\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;deleteFolder(File&nbsp;folder)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File[]&nbsp;files&nbsp;=&nbsp;folder.listFiles();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(files!=null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(File&nbsp;f:&nbsp;files)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(f.isDirectory())&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deleteFolder(f);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.delete();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;folder.delete();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>', '2018-07-10 07:36:40', '2018-07-10 07:36:40');
INSERT INTO `article` VALUES ('60', ' Java中Json用法', '2', '\r\n因为最近开发微信，微信接口返回的数据大多都是Json格式，还有就是调用微信接口，大多也是传json格式的参数，因为java中Json必须要会哦。用 org.json就可以满足了哦.\r\n首先导入json.jar，非常简单看过代码就明白怎么用了\r\n', '<pre class=\"brush:plain;toolbar:false\">package&nbsp;cn.demo;\r\n&nbsp;\r\nimport&nbsp;java.util.HashMap;\r\nimport&nbsp;java.util.Map;\r\n&nbsp;\r\nimport&nbsp;org.json.JSONArray;\r\nimport&nbsp;org.json.JSONException;\r\nimport&nbsp;org.json.JSONObject;\r\n&nbsp;\r\npublic&nbsp;class&nbsp;MyJson&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;JSONException&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParseJson(&quot;{\\&quot;name\\&quot;:\\&quot;Alexia\\&quot;,\\&quot;age\\&quot;:\\&quot;23\\&quot;}&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CreateJson();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//解析JSON\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;ParseJson(String&nbsp;jsonString)&nbsp;throws&nbsp;JSONException\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSONObject&nbsp;jObject&nbsp;=&nbsp;new&nbsp;JSONObject(jsonString);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(jObject.get(&quot;name&quot;));&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//创建一个JSON\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;void&nbsp;CreateJson()&nbsp;throws&nbsp;JSONException\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;下面构造两个map、一个list和一个Employee对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;String,&nbsp;String&gt;&nbsp;map1&nbsp;=&nbsp;new&nbsp;HashMap&lt;String,&nbsp;String&gt;();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map1.put(&quot;name&quot;,&nbsp;&quot;Alexia&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map1.put(&quot;sex&quot;,&nbsp;&quot;female&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map1.put(&quot;age&quot;,&nbsp;&quot;23&quot;);\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;String,&nbsp;String&gt;&nbsp;map2&nbsp;=&nbsp;new&nbsp;HashMap&lt;String,&nbsp;String&gt;();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map2.put(&quot;name&quot;,&nbsp;&quot;Edward&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map2.put(&quot;sex&quot;,&nbsp;&quot;male&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map2.put(&quot;age&quot;,&nbsp;&quot;24&quot;);\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;将Map转换为JSONArray数据\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSONArray&nbsp;jArray&nbsp;=&nbsp;new&nbsp;JSONArray();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jArray.put(map1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jArray.put(map2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//定义JSON\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSONObject&nbsp;jObject=new&nbsp;JSONObject();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jObject.put(&quot;List&quot;,&nbsp;jArray);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jObject.put(&quot;Count&quot;,&quot;1200&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(jObject.toString());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>', '2018-07-03 23:58:42', '2018-07-03 23:58:42');
INSERT INTO `article` VALUES ('61', ' PHP 计算2个日期相差多少年，多少个月，多少天', '3', '在PHP程序中，很多时候都会遇到处理时间的问题，比如：判断用户在线了多长时间，\r\n共登录了多少天，两个帖子发布的时间差或者是不同操作之间的日志记录等等。本文\r\n介绍了PHP中如何计算两个日期相差（相差多少年，多少个月，多少天）\r\n', '<pre class=\"brush:plain;toolbar:false\">[php]&nbsp;\r\n$time1&nbsp;=&nbsp;strtotime(&#39;2014-02-04&#39;);&nbsp;//&nbsp;自动为00:00:00&nbsp;时分秒&nbsp;两个时间之间的年和月份&nbsp;\r\n$time2&nbsp;=&nbsp;strtotime(&#39;2015-02-06&#39;);&nbsp;\r\n\r\n$monarr&nbsp;=&nbsp;array();&nbsp;\r\n$monarr[]&nbsp;=&nbsp;&#39;2014-02&#39;;&nbsp;//&nbsp;当前月;&nbsp;\r\nwhile(&nbsp;($time1&nbsp;=&nbsp;strtotime(&#39;+1&nbsp;month&#39;,&nbsp;$time1))&nbsp;&lt;=&nbsp;$time2){&nbsp;\r\n$monarr[]&nbsp;=&nbsp;date(&#39;Y-m&#39;,$time1);&nbsp;//&nbsp;取得递增月;&nbsp;&nbsp;&nbsp;&nbsp;\r\n}&nbsp;\r\n\r\nprint_r($monarr);&nbsp;&nbsp;&nbsp;//相差多少个月的数组，一年12个月，自然可以得到相差多少年，多少个月\r\n\r\n\r\n[php]&nbsp;\r\n&lt;?php&nbsp;\r\n//今天与2008年9月9日相差多少天&nbsp;\r\n$Date_1&nbsp;=&nbsp;date(&quot;Y-m-d&quot;);&nbsp;\r\n$Date_2&nbsp;=&nbsp;&quot;2008-10-11&quot;;&nbsp;\r\n$d1&nbsp;=&nbsp;strtotime($Date_1);&nbsp;\r\n$d2&nbsp;=&nbsp;strtotime($Date_2);&nbsp;\r\n$Days&nbsp;=&nbsp;round(($d2-$d1)/3600/24);&nbsp;\r\necho&nbsp;&quot;今天与2008年10月11日相差&quot;&nbsp;.&nbsp;$Days&nbsp;.&nbsp;&quot;天&quot;;&nbsp;\r\n?&gt;&nbsp;\r\n\r\n[php]&nbsp;\r\n\r\n&lt;?php&nbsp;\r\nfunction&nbsp;prDates($start,$end){&nbsp;//&nbsp;两个日期之间的所有日期&nbsp;\r\n$dt_start&nbsp;=&nbsp;strtotime($start);&nbsp;\r\n$dt_end&nbsp;=&nbsp;strtotime($end);&nbsp;\r\nwhile&nbsp;($dt_start&lt;=$dt_end){&nbsp;\r\necho&nbsp;date(&#39;Y-m-d&#39;,$dt_start).&quot;\\n&quot;;&nbsp;\r\n$dt_start&nbsp;=&nbsp;strtotime(&#39;+1&nbsp;day&#39;,$dt_start);&nbsp;\r\n}&nbsp;\r\n}&nbsp;\r\nprDates(&#39;2005-02-01&#39;,&#39;2005-02-05&#39;);&nbsp;\r\n\r\n?&gt;</pre><p>参考：</p><p><a href=\"https://blog.csdn.net/ahjxhy2010/article/details/62046817\" target=\"_blank\" style=\"margin: 0px; padding: 0px; border: 0px; line-height: 1.57143em; cursor: pointer; color: rgb(4, 122, 198);\">https://blog.csdn.net/ahjxhy2010/article/details/62046817</a><br/></p><p><br/></p>', '2018-07-09 23:35:13', '2018-07-09 23:35:13');
INSERT INTO `article` VALUES ('62', 'Java IO(二):OutputStreamWriter、InputStreamReader(字节-字符转换流)', '2', 'InputStreamReader和OutputStreamWriter 是字节流通向字符流的桥梁：它使用指定的 charset 读写字节并将其解码为字符。\r\nInputStreamReader 的作用是将“字节输入流”转换成“字符输入流”。它继承于Reader。\r\nOutputStreamWriter 的作用是将“字节输出流”转换成“字符输出流”。它继承于Writer。\r\n', '<pre class=\"brush:plain;toolbar:false\">首先说明下字节流和字符流：\r\n\r\nFileReader，FileWriter&nbsp;是读字符的，1个字符是2个字节，16位\r\nOutputStream&nbsp;，InputStream是读字节的，1个字节是8位\r\n\r\n如果要读汉字，一个汉字是2个字节，用InputStream读就把汉字折成两半，不太适合吧。\r\n\r\n字符流主要读文本效率比较高。\r\n字节流主要读二进制文件，图片&nbsp;，音频，视频等，就是为了防止出现读取的单位放大，出现无法还原本程序的目的\r\n\r\n\r\n如果把文件按字节读取，然后按照UTF-8的格式编码显示，怎么办？\r\nInputStreamReader就有这功能，对原字节再编码的过程。\r\n\r\n\r\n\r\n一、OutputStreamWriter类\r\n\r\nOutputStreamWriter&nbsp;将字节流转换为字符流。是字节流通向字符流的桥梁。如果不指定字符集编码，该解码过程将使用\r\n平台默认的字符编码，如：GBK。\r\n\r\n构造方法：\r\n\r\n//构造一个默认编码集的OutputStreamWriter类\r\nOutputStreamWriter&nbsp;osw&nbsp;=&nbsp;new&nbsp;OutputStreamWriter(OutputStream&nbsp;out);\r\n\r\nOutputStreamWriter&nbsp;osw&nbsp;=&nbsp;new&nbsp;OutputStreamWriter(OutputStream&nbsp;out,String&nbsp;charsetName);\r\n//构造一个指定编码集的OutputStreamWriter类。参数&nbsp;out对象通过\r\n&nbsp;//打印到控制台上：InputStream&nbsp;out&nbsp;=&nbsp;System.out;获得。\r\n或者\r\n//输出到文件中。FileoutputStream&nbsp;为outputStream的子类。\r\n&nbsp;InputStream&nbsp;out&nbsp;=&nbsp;new&nbsp;FileoutputStream(String&nbsp;fileName);\r\n\r\n主要方法：void&nbsp;write(int&nbsp;c);//将单个字符写入。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;viod&nbsp;write(String&nbsp;str,int&nbsp;off,int&nbsp;len);//将字符串某部分写入。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;flush();//将该流中的缓冲数据刷到目的地中去。\r\n\r\n\r\n二、InputStreamReader类\r\n\r\nInputStreamReader&nbsp;将字节流转换为字符流。是字节流通向字符流的桥梁。如果不指定字符集编码，该解码过程将使用\r\n平台默认的字符编码，如：GBK。\r\n\r\n构造方法：\r\n\r\n//构造一个默认编码集的InputStreamReader类\r\nInputStreamReader&nbsp;isr&nbsp;=&nbsp;new&nbsp;InputStreamReader(InputStream&nbsp;in);\r\n\r\nInputStreamReader&nbsp;isr&nbsp;=&nbsp;new&nbsp;InputStreamReader(InputStream&nbsp;in,String&nbsp;charsetName);\r\n//构造一个指定编码集的InputStreamReader类。参数&nbsp;in对象通过\r\n//读取键盘上的数据:&nbsp;InputStream&nbsp;in&nbsp;=&nbsp;System.in;获得。\r\n&nbsp;或者\r\n&nbsp;//读取文件中的数据。FileInputStream&nbsp;为InputStream的子类。\r\n&nbsp;InputStream&nbsp;in&nbsp;=&nbsp;new&nbsp;FileInputStream(String&nbsp;fileName);\r\n\r\n主要方法：int&nbsp;read();//读取单个字符。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;read(char&nbsp;[]cbuf);//将读取到的字符存到数组中。返回读\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\nimport&nbsp;java.io.*;\r\n\r\npublic&nbsp;class&nbsp;day710&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//构建FileOutputStream对象，文件不存在会自动创建\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OutputStream&nbsp;os=&nbsp;new&nbsp;FileOutputStream(&quot;a.txt&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//构建OutputStreamWriter对象，参数可以指定编码，默认为操作系统编码，windows上是gbk\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OutputStreamWriter&nbsp;writer&nbsp;=&nbsp;new&nbsp;OutputStreamWriter(os,&quot;utf-8&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//写入缓冲区\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.append(&quot;我是中国人\\r\\n&nbsp;我是PHPer&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//关闭写入流，同时会把缓冲区的内容写入文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.close();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//关闭输出流\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;os.close();\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//构建InputStream对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InputStream&nbsp;in&nbsp;=&nbsp;new&nbsp;FileInputStream(&quot;a.txt&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//构建InputStreamReader对象，编码和写入相同\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InputStreamReader&nbsp;reader&nbsp;=&nbsp;new&nbsp;InputStreamReader(in,&quot;utf-8&quot;);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuffer&nbsp;sb&nbsp;=&nbsp;new&nbsp;StringBuffer();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(reader.ready()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sb.append((char)reader.read());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(sb.toString());\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.close();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in.close();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}catch(IOException&nbsp;e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>', '2018-07-11 23:29:15', '2018-07-11 23:29:15');
INSERT INTO `article` VALUES ('63', ' ssm文件上传(一);单个文件上传', '2', '在Web应用系统开发中，文件上传和下载功能是非常常用的功能，今天来讲一下ssm中的文件上传。注意：我ssm的版本是2018年5月最新的版本。控制器中设计的依赖自己找，我的架构是springboot+springmvc+mybatis+idea+maven+mysql，非常方便。', '<pre class=\"brush:plain;toolbar:false\">\r\nhtml文件：也就是&nbsp;下面UserController控制器header方法渲染的页面&nbsp;&nbsp;注意input的name值，和后端参数保持一致\r\n\r\n&lt;form&nbsp;action=&quot;/user/upload&quot;&nbsp;method=&quot;post&quot;&nbsp;enctype=&quot;multipart/form-data&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=&quot;form-group&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;label&nbsp;for=&quot;exampleInputFile&quot;&gt;头像上传&lt;/label&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type=&quot;file&quot;&nbsp;id=&quot;file&quot;&nbsp;name=&quot;file&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&nbsp;class=&quot;help-block&quot;&gt;Example&nbsp;block-level&nbsp;help&nbsp;text&nbsp;here.&lt;/p&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;button&nbsp;type=&quot;submit&quot;&nbsp;class=&quot;btn&nbsp;btn-default&quot;&gt;Submit&lt;/button&gt;\r\n&lt;/form&gt;\r\n\r\n\r\n控制器：&nbsp;UserController\r\n\r\npackage&nbsp;com.demo.controller.home;\r\n\r\nimport&nbsp;org.springframework.boot.autoconfigure.EnableAutoConfiguration;\r\nimport&nbsp;org.springframework.stereotype.Controller;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestMapping;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestMethod;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestParam;\r\nimport&nbsp;org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport&nbsp;java.io.*;\r\n\r\nimport&nbsp;org.springframework.web.multipart.MultipartFile;\r\n\r\nimport&nbsp;javax.servlet.http.HttpServletRequest;\r\nimport&nbsp;javax.servlet.http.HttpServletResponse;\r\n\r\n\r\n@Controller\r\n@EnableAutoConfiguration\r\npublic&nbsp;class&nbsp;UserController&nbsp;{\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;//file属性用来封装上传的文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;File&nbsp;file;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/user/header&quot;,method=RequestMethod.GET)\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;header()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;home/header&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/user/upload&quot;,method=RequestMethod.POST)\r\n&nbsp;&nbsp;&nbsp;&nbsp;@ResponseBody\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;upload(HttpServletRequest&nbsp;request,&nbsp;&nbsp;@RequestParam(&quot;file&quot;)MultipartFile&nbsp;file)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws&nbsp;IOException\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(request.getContentLength()&gt;0){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取文件名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;fileName&nbsp;=&nbsp;file.getOriginalFilename();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取文件的hozhui\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;suffixName&nbsp;=&nbsp;fileName.substring(fileName.lastIndexOf(&quot;.&quot;));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//上传后的文件存储路径\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;filePath&nbsp;=&nbsp;&quot;f://sc/&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;dest&nbsp;=&nbsp;new&nbsp;File(filePath+fileName);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//检测目录是否存在，不存在则创建\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!dest.getParentFile().exists()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dest.getParentFile().mkdirs();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.transferTo(dest);&nbsp;//保存文件\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}catch(Exception&nbsp;e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;成功&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n}\r\n\r\n参考：https://blog.csdn.net/coding13/article/details/54577076，下期讲解ssm多文件上传和文件下载</pre><p><br/></p>', '2018-07-17 00:44:46', '2018-07-17 00:44:46');
INSERT INTO `article` VALUES ('64', 'ssm文件上传(二);多个文件上传', '2', '　文件上传和下载是java web中常见的操作，文件上传主要是将文件通过IO流传放到服务器的某一个特定的文件夹下，而文件下载则是与文件上传相反，将文件从服务器的特定的文件夹下的文件通过IO流下载到本地。本次讲解SSM中多文件上传，例子如下，亲测的。环境springboot+springmvc+mybatis+idea+maven+mysql,用到的东西都是2018上半年最新版的', '<pre class=\"brush:plain;toolbar:false\">\r\nhtml文件：也就是&nbsp;下面UserController控制器header方法渲染的页面&nbsp;&nbsp;注意input的name值，和后端参数保持一致\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;多文件上传&lt;/h2&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;form&nbsp;action=&quot;/user/uploads&quot;&nbsp;method=&quot;post&quot;&nbsp;enctype=&quot;multipart/form-data&quot;&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&nbsp;文件1：&nbsp;&lt;input&nbsp;type=&quot;file&quot;&nbsp;name=&quot;file&quot;&nbsp;/&gt;&nbsp;&lt;/p&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&nbsp;文件2：&nbsp;&lt;input&nbsp;type=&quot;file&quot;&nbsp;name=&quot;file&quot;&nbsp;/&gt;&nbsp;&lt;/p&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&nbsp;文件3：&nbsp;&lt;input&nbsp;type=&quot;file&quot;&nbsp;name=&quot;file&quot;&nbsp;/&gt;&nbsp;&lt;/p&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button&nbsp;type=&quot;submit&quot;&nbsp;class=&quot;btn&nbsp;btn-default&quot;&gt;Submit&lt;/button&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;\r\n\r\n\r\n\r\n控制器：&nbsp;UserController\r\n\r\npackage&nbsp;com.demo.controller.home;\r\n\r\nimport&nbsp;org.springframework.boot.autoconfigure.EnableAutoConfiguration;\r\nimport&nbsp;org.springframework.stereotype.Controller;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestMapping;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestMethod;\r\nimport&nbsp;org.springframework.web.bind.annotation.RequestParam;\r\nimport&nbsp;org.springframework.web.bind.annotation.ResponseBody;\r\n\r\nimport&nbsp;java.io.*;\r\n\r\nimport&nbsp;org.springframework.web.multipart.MultipartFile;\r\n\r\nimport&nbsp;javax.servlet.http.HttpServletRequest;\r\nimport&nbsp;javax.servlet.http.HttpServletResponse;\r\n\r\n\r\n@Controller\r\n@EnableAutoConfiguration\r\npublic&nbsp;class&nbsp;UserController&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/user/header&quot;,method=RequestMethod.GET)\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;header()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;home/header&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;//多文件上传\r\n&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/user/uploads&quot;,&nbsp;method&nbsp;=&nbsp;RequestMethod.POST)\r\n&nbsp;&nbsp;&nbsp;&nbsp;@ResponseBody\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;uploads(HttpServletRequest&nbsp;request)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//getFiles(&quot;file&quot;);&nbsp;参数file和form中的input&nbsp;name值保持一致\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;MultipartFile&gt;&nbsp;files&nbsp;=&nbsp;((MultipartHttpServletRequest)&nbsp;request).getFiles(&quot;file&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MultipartFile&nbsp;file&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedOutputStream&nbsp;stream&nbsp;=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i=0;i&lt;files.size();i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file&nbsp;=&nbsp;files.get(i);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!file.isEmpty()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//以下五行可以不要，\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;byte[]&nbsp;bytes&nbsp;=&nbsp;file.getBytes();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;File&nbsp;file1&nbsp;=&nbsp;new&nbsp;File(file.getOriginalFilename());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;stream&nbsp;=&nbsp;new&nbsp;BufferedOutputStream(new&nbsp;FileOutputStream(file1));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//stream.write(bytes);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//stream.close();\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//上传后的文件存储路径，关键，这里实现文件保存\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;filePath&nbsp;=&nbsp;&quot;f://sc/&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File&nbsp;dest&nbsp;=&nbsp;new&nbsp;File(filePath+file.getOriginalFilename());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.transferTo(dest);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}catch(Exception&nbsp;e){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stream=null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;You&nbsp;failed&nbsp;to&nbsp;upload&nbsp;&quot;&nbsp;+&nbsp;i&nbsp;+&nbsp;&quot;&nbsp;=&gt;&nbsp;&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;e.getMessage();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;you&nbsp;failed&nbsp;to&nbsp;upload&nbsp;&quot;+i+&quot;&nbsp;because&nbsp;the&nbsp;file&nbsp;is&nbsp;empty&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;上传成功文件数：&quot;+files.size();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n}</pre><p><br/></p>', '2018-07-18 00:26:27', '2018-07-18 00:26:27');
INSERT INTO `article` VALUES ('65', 'PPDO连接mysql数据库，增删改查等操作', '3', '我们使用传统的 mysql_connect 、mysql_query方法来连接查询数据库时，如果过滤不严就有SQL注入风险，导致网站被攻击。\r\n虽然可以用mysql_real_escape_string()函数过滤用户提交的值，但是也有缺陷。\r\n而使用PHP的PDO扩展的 prepare 方法，就可以避免sql injection 风险。\r\nPDO(PHP Data Object) 是PHP5新加入的一个重大功能，因为在PHP 5以前的php4/php3都是一堆的数据库扩展来跟各个数据库的连接和处理.\r\n如 php_mysql.dll。 PHP6中也将默认使用PDO的方式连接，mysql扩展将被作为辅助 。\r\n官方：http://php.net/manual/en/book.pdo.php\r\n', '<pre class=\"brush:plain;toolbar:false\">1、使用PDO连接前需要先确认PDO扩展是否已经打开。\r\n使用PDO扩展之前，先要启用这个扩展，PHP.ini中。\r\n去掉&quot;extension=php_pdo.dll&quot;前面的&quot;;&quot;号，若要连接数据库，还需要去掉与PDO相关的数据库扩展前面的&quot;;&quot;号。\r\n（一般用的是php_pdo_mysql.dll），然后重启Apache服务器即可。&nbsp;\r\n\r\nextension=php_pdo.dll\r\nextension=php_pdo_mysql.dll\r\n\r\n2、PDO连接数据库：\r\n\r\n#&nbsp;&nbsp;PDO连接mysql数据库（数据库名：lmgg&nbsp;，账户:root，密码:root）\r\n$pdo&nbsp;=&nbsp;new&nbsp;\\PDO(&quot;mysql:host=localhost;dbname=lmgg&quot;,&quot;root&quot;,&quot;root&quot;);\r\n\r\n3、PDO设置属性：\r\n&nbsp;PDO有三种错误处理方式：\r\n1、PDO::ERrmODE_SILENT&nbsp;不显示错误信息，只设置错误码\r\n2、PDO::ERrmODE_WARNING&nbsp;显示警告错\r\n3、PDO::ERrmODE_EXCEPTION&nbsp;抛出异常\r\n1\r\n$pdo-&gt;setAttribute(\\PDO::ATTR_ERrmODE,&nbsp;\\PDO::ERrmODE_EXCEPTION);\r\n1)&nbsp;:当设置为PDO::ERrmODE_SILENT时可以通过调用errorCode()&nbsp;或errorInfo()来获得错误信息，当然其他情况下也可以。\r\n2)&nbsp;:因为不同数据库对返回的字段名称大小写处理不同，所以PDO提供了PDO::ATTR_CASE设置项（包括PDO::CASE_LOWER，\r\nPDO::CASE_NATURAL，PDO::CASE_UPPER），来确定返回的字段名称的大小写。\r\n3)&nbsp;:通过设置PDO::ATTR_ORACLE_NULLS类型（包括PDO::NULL_NATURAL，PDO::NULL_EmpTY_STRING，PDO::NULL_TO_STRING）\r\n来指定数据库返回的NULL值在php中对应的数值。\r\n\r\n4、PDO常用方法及其应用:\r\nPDO::query()&nbsp;主要是用于有记录结果返回的操作，特别是SELECT操作\r\nPDO::exec()&nbsp;主要是针对没有结果集合返回的操作，如INSERT、UPDATE等操作\r\nPDO::prepare()&nbsp;主要是预处理操作，需要通过$rs-&gt;execute()来执行预处理里面的SQL语句，这个方法可以绑定参数，\r\n功能比较强大（防止sql注入就靠这个）\r\nPDO::lastInsertId()&nbsp;返回上次插入操作，主键列类型是自增的最后的自增ID\r\nPDOStatement::fetch()&nbsp;是用来获取一条记录\r\nPDOStatement::fetchAll()&nbsp;是获取所有记录集到一个集合\r\nPDOStatement::fetchColumn()&nbsp;是获取结果指定第一条记录的某个字段，缺省是第一个字段\r\nPDOStatement::rowCount()&nbsp;主要是用于PDO::query()和PDO::prepare()进行DELETE、INSERT、UPDATE操作影响的结果集，\r\n对PDO::exec()方法和SELECT操作无效。\r\n\r\n5、PDO操作实例：\r\n\r\n【示例6，说明】，防sql注入操作：\r\n\r\n1、使用PDO访问MySQL数据库时，真正的real&nbsp;prepared&nbsp;statements&nbsp;默认情况下是不使用的。\r\n为了解决这个问题，你必须禁用&nbsp;prepared&nbsp;statements的仿真效果。\r\n2、设置禁用prepared&nbsp;statements：$pdo-&gt;setAttribute(\\PDO::ATTR_EMULATE_PREPARES,&nbsp;false);&nbsp;\r\n\r\n它会告诉PDO禁用模拟预处理语句，并使用&nbsp;real&nbsp;parepared&nbsp;statements&nbsp;。\r\n这可以确保SQL语句和相应的值在传递到mysql服务器之前是不会被PHP解析的（禁止了所有可能的恶意SQL注入攻击）。\r\n虽然你可以配置文件中设置字符集的属性(charset=utf8)，但是需要格外注意的是，老版本的&nbsp;PHP（&nbsp;&lt;&nbsp;5.3.6）\r\n在DSN中是忽略字符参数的。\r\n\r\n但是我们需要注意以下几种情况，PDO并不能帮助我们防范SQL注入的：\r\n1、你不能让占位符&nbsp;?&nbsp;代替一组值，如：\r\nselect&nbsp;*&nbsp;from&nbsp;xc_company&nbsp;where&nbsp;id&nbsp;in(&nbsp;?&nbsp;);\r\n2、你不能让占位符代替数据表名或列名，如：\r\nselect&nbsp;*&nbsp;from&nbsp;xc_company&nbsp;order&nbsp;by&nbsp;?;\r\n3、你不能让占位符&nbsp;?&nbsp;代替任何其他SQL语法，如：\r\nselect&nbsp;EXTRACT(&nbsp;?&nbsp;from&nbsp;date)&nbsp;as&nbsp;times&nbsp;from&nbsp;xc_company;\r\n\r\n\r\n查看PDO都有那些方法\r\n\r\necho&nbsp;&#39;&lt;pre&gt;&#39;;\r\nprint_r(get_class_methods(&#39;PDO&#39;));\r\necho&nbsp;&#39;&lt;/pre&gt;&#39;;\r\n结果：\r\nArray\r\n(\r\n&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;__construct\r\n&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;prepare\r\n&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;beginTransaction\r\n&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;commit\r\n&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;rollBack\r\n&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;inTransaction\r\n&nbsp;&nbsp;&nbsp;&nbsp;[6]&nbsp;=&gt;&nbsp;setAttribute\r\n&nbsp;&nbsp;&nbsp;&nbsp;[7]&nbsp;=&gt;&nbsp;exec\r\n&nbsp;&nbsp;&nbsp;&nbsp;[8]&nbsp;=&gt;&nbsp;query\r\n&nbsp;&nbsp;&nbsp;&nbsp;[9]&nbsp;=&gt;&nbsp;lastInsertId\r\n&nbsp;&nbsp;&nbsp;&nbsp;[10]&nbsp;=&gt;&nbsp;errorCode\r\n&nbsp;&nbsp;&nbsp;&nbsp;[11]&nbsp;=&gt;&nbsp;errorInfo\r\n&nbsp;&nbsp;&nbsp;&nbsp;[12]&nbsp;=&gt;&nbsp;getAttribute\r\n&nbsp;&nbsp;&nbsp;&nbsp;[13]&nbsp;=&gt;&nbsp;quote\r\n&nbsp;&nbsp;&nbsp;&nbsp;[14]&nbsp;=&gt;&nbsp;__wakeup\r\n&nbsp;&nbsp;&nbsp;&nbsp;[15]&nbsp;=&gt;&nbsp;__sleep\r\n&nbsp;&nbsp;&nbsp;&nbsp;[16]&nbsp;=&gt;&nbsp;getAvailableDrivers\r\n)\r\n\r\n常用实例源码：\r\n\r\n&lt;?php\r\n&nbsp;\r\n#&nbsp;【PDO连接mysql数据库】（数据库名：lmgg&nbsp;，账户:root，密码:root）\r\n$pdo&nbsp;=&nbsp;new&nbsp;\\PDO(&#39;mysql:host=localhost;dbname=lmgg;charset=utf8&#39;,&#39;root&#39;,&#39;root&#39;);&nbsp;\r\n#&nbsp;设置数据库编码为utf-8（防止乱码）当然上面的连接设置了。\r\n#&nbsp;上面可设置也可不设置，有没有charset=utf8都可以连接上数据库\r\n$pdo-&gt;exec(&#39;set&nbsp;names&nbsp;utf8&#39;);&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n#&nbsp;【示例1：查询数据】：查询company表中的id和name字段。存到$data数组中去\r\n$res&nbsp;=&nbsp;$pdo-&gt;query(&quot;select&nbsp;id,name&nbsp;from&nbsp;xc_company&quot;);&nbsp;\r\n$data&nbsp;=&nbsp;[];\r\n&nbsp;\r\n#&nbsp;1：FETCH_ASSOC&nbsp;&nbsp;&nbsp;关联数组形式返回&nbsp;\r\n#&nbsp;2：FETCH_NUM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数字索引数组形式返回\r\n#&nbsp;设置返回数据类型方法1：\r\n$res-&gt;setFetchMode(\\PDO::FETCH_NUM);&nbsp;\r\nwhile($row&nbsp;=&nbsp;$res-&gt;fetch()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$data[]&nbsp;=&nbsp;$row;\r\n}\r\necho&nbsp;&#39;&lt;pre&gt;&#39;;\r\nprint_r($data);\r\necho&nbsp;&#39;&lt;/pre&gt;&#39;;\r\n&nbsp;\r\n#&nbsp;设置返回数据类型方法2：\r\nwhile($row&nbsp;=&nbsp;$res-&gt;fetch(\\PDO::FETCH_ASSOC)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$data[]&nbsp;=&nbsp;$row;\r\n}\r\necho&nbsp;&#39;&lt;pre&gt;&#39;;\r\nprint_r($data);\r\necho&nbsp;&#39;&lt;/pre&gt;&#39;;\r\n&nbsp;\r\n&nbsp;\r\n\r\n&nbsp;\r\n#&nbsp;【示例2：添加数据】：添加数据到company表中，并返回数据在表中的ID是多少！\r\n$res&nbsp;=&nbsp;$pdo-&gt;exec(&quot;insert&nbsp;into&nbsp;xc_company(name)&nbsp;values(&#39;小川编程添加111&#39;)&quot;);\r\nif($res){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;11添加成功数据ID为：&#39;.$pdo-&gt;lastinsertid().&#39;&lt;br/&gt;&#39;;\r\n}\r\n$res&nbsp;=&nbsp;$pdo-&gt;query(&quot;insert&nbsp;into&nbsp;xc_company(name)&nbsp;values(&#39;小川编程添加222&#39;)&quot;);\r\nif($res){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;22添加成功数据ID为：&#39;.$pdo-&gt;lastinsertid().&#39;&lt;br/&gt;&#39;;\r\n}\r\n&nbsp;\r\n&nbsp;\r\n\r\n\r\n#&nbsp;【示例3：更新数据】：\r\n$res&nbsp;=&nbsp;$pdo-&gt;exec(&quot;update&nbsp;xc_company&nbsp;set&nbsp;name=&#39;小川编程更新111&#39;&nbsp;where&nbsp;id=26&quot;);\r\nif($res){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;更新数据成功&lt;br/&gt;&#39;;\r\n}\r\n$res&nbsp;=&nbsp;$pdo-&gt;query(&quot;update&nbsp;xc_company&nbsp;set&nbsp;name=&#39;小川编程更新222&#39;&nbsp;where&nbsp;id=26&quot;);\r\nif($res){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;成功更新数据【&#39;.$res-&gt;rowCount().&#39;】条&lt;br/&gt;&#39;;\r\n}\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n#&nbsp;【示例4：删除数据】：\r\n$res&nbsp;=&nbsp;$pdo-&gt;exec(&quot;delete&nbsp;from&nbsp;xc_company&nbsp;where&nbsp;id=38&quot;);\r\nif($res){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;删除数据成功&lt;br/&gt;&#39;;\r\n}\r\n$res&nbsp;=&nbsp;$pdo-&gt;query(&quot;delete&nbsp;from&nbsp;xc_company&nbsp;where&nbsp;id=38&quot;);\r\nif($res){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;成功删除数据【&#39;.$res-&gt;rowCount().&#39;】条&lt;br/&gt;&#39;;\r\n}\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n&nbsp;\r\n#&nbsp;【示例5：统计数据】：统计company表有多少条数据\r\n$num&nbsp;=&nbsp;$pdo-&gt;query(&quot;select&nbsp;count(*)&nbsp;from&nbsp;xc_company&quot;);\r\necho&nbsp;&#39;共有数据：【&#39;.$num-&gt;fetchColumn().&#39;】条&#39;;\r\n&nbsp;\r\n&nbsp;\r\n#&nbsp;【示例6：防sql注入】：实例，使用前先看文字说明，会理解的更透彻！\r\n#&nbsp;&nbsp;PDO连接mysql数据库（数据库名：lmgg&nbsp;，账户:root，密码:root）\r\n$pdo&nbsp;=&nbsp;new&nbsp;\\PDO(&quot;mysql:host=localhost;&nbsp;dbname=lmgg&quot;,&nbsp;&quot;root&quot;,&nbsp;&quot;root&quot;);\r\n#&nbsp;&nbsp;禁用prepared&nbsp;statements的仿真效果\r\n$pdo-&gt;setAttribute(\\PDO::ATTR_EMULATE_PREPARES,&nbsp;false);&nbsp;\r\n$pdo-&gt;query(&quot;set&nbsp;names&nbsp;&#39;utf8&#39;&quot;);\r\n$sql=&quot;select&nbsp;*&nbsp;from&nbsp;xc_company&nbsp;where&nbsp;name&nbsp;=&nbsp;?&quot;;\r\n$res&nbsp;=&nbsp;$pdo-&gt;prepare($sql);\r\n$name&nbsp;=&nbsp;&#39;小川编程&#39;;\r\n$exeres&nbsp;=&nbsp;$res-&gt;execute(array($name));\r\n$data&nbsp;=&nbsp;[];\r\nif($exeres){\r\n&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;($row&nbsp;=&nbsp;$res-&gt;fetch(\\PDO::FETCH_ASSOC)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data[]&nbsp;=&nbsp;$row;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\necho&nbsp;&#39;&lt;pre&gt;&#39;;\r\nprint_r($data);\r\necho&nbsp;&#39;&lt;/pre&gt;&#39;;\r\n$pdo&nbsp;=&nbsp;null;\r\n&nbsp;\r\n?&gt;\r\n\r\n参考：http://www.youhutong.com/index.php/article/index/143.html</pre><p><br/></p>', '2018-07-23 22:07:03', '2018-07-23 22:07:03');
INSERT INTO `article` VALUES ('66', 'centos7时间同步和时区设置', '7', '安装完centos7.5后，发现时间不正确。下面给是亲测的解决办法。', '<pre class=\"brush:plain;toolbar:false\">安装ntp服务的软件包\r\nsudo&nbsp;yum&nbsp;install&nbsp;ntp\r\n\r\n将ntp服务设置为缺省启动\r\nsystemctl&nbsp;enable&nbsp;ntpd\r\n\r\n#修改启动参数，增加-g&nbsp;-x参数，允许ntp服务在系统时间误差较大时也能正常工作，这一步可不用\r\n#sudo&nbsp;vi&nbsp;/etc/sysconfig/ntpd\r\n\r\n#启动ntp服务，这一步可不用\r\n#sudo&nbsp;service&nbsp;ntpd&nbsp;restart\r\n\r\n将系统时区改为上海时间&nbsp;(亦即CST时区)\r\nln&nbsp;-sf&nbsp;/usr/share/zoneinfo/Asia/Shanghai&nbsp;/etc/localtime\r\n\r\n查看时间是否正确\r\n执行date命令即可。\r\n\r\n参考：https://www.cnblogs.com/zxf330301/p/8359674.html</pre><p><br/></p>', '2018-07-28 15:29:41', '2018-07-28 15:29:41');
INSERT INTO `article` VALUES ('67', '完美解决 CentOS7.5 (Linux) 下 Sublime Text3 中文输入', '7', '相信很多人第一次安装centos7图形界面后，想在sublime text中输入中文，却输入不了吧？其实我开始也是面临同样的问题，后来经过摸索，网上只有在ubuntu上解决sublime中文输入的问题，却没有centos相关的。下面就给大家介绍centos7下解决sublime text3中文输入问题。', '<pre class=\"brush:plain;toolbar:false\">文章参考：https://www.cnblogs.com/wangkongming/p/4302642.html\r\n测试系统：CentOS7.5&nbsp;gnome&nbsp;（理论上所有&nbsp;Linux&nbsp;发行版都通用）\r\n\r\n输入法：Fcitx&nbsp;\r\n\r\nSublime&nbsp;Text&nbsp;版本：Sublime&nbsp;Text&nbsp;3&nbsp;dev（Build&nbsp;3176）\r\n\r\n--------------------------------------------------------------------\r\n\r\n我的电脑配置：华硕&nbsp;8g内存，双系统(win7+centos7.5)\r\n\r\n输入法：centos自带的，不能用于sublime&nbsp;text中文输入，需要安装fcitx拼音输入法(安装fcitx也简单)。\r\n\r\nSublime&nbsp;Text&nbsp;版本：Sublime&nbsp;Text&nbsp;3\r\n\r\n\r\n\r\n\r\n第一步：准备工作，安装gcc,gcc-c++,cmake,gtk等\r\n\r\n1、安装最基本的：&nbsp;sudo&nbsp;yum&nbsp;-y&nbsp;install&nbsp;gcc&nbsp;gcc-c++&nbsp;cmake\r\n2、安装图形界面相关的：&nbsp;sudo&nbsp;yum&nbsp;-y&nbsp;install&nbsp;gtk2&nbsp;gtk2-devel&nbsp;gtk2-devel-docs&nbsp;\r\n&nbsp;&nbsp;这一步可以不用：sudo&nbsp;yum&nbsp;-y&nbsp;install&nbsp;gtk2.i686&nbsp;\r\n3、安装图形输入法选择器：sudo&nbsp;yum&nbsp;install&nbsp;im-chooser；\r\n4、结束&nbsp;ibus&nbsp;守护进程&nbsp;：sudo&nbsp;pkill&nbsp;ibus-daemon；\r\n\r\n5、关闭&nbsp;gnome-shell&nbsp;对键盘的监听（centos7.5以前的执行，centos7.5的不需要执行）\r\n$&nbsp;gsettings&nbsp;set&nbsp;org.gnome.settings-daemon.plugins.keyboard&nbsp;active&nbsp;false；\r\n6、切换输入法为&nbsp;fcitx：$&nbsp;imsettings-switch&nbsp;fcitx；\r\n\r\n7、配置fcitx环境变量（2个方法二选一）：\r\n\r\n分别在~/.bashrc&nbsp;/etc/bashrc&nbsp;文件中添加了如下代码：\r\n\r\n#&nbsp;vim:ts=4:sw=4\r\n\r\nexport&nbsp;GTK_IM_MODULE=fcitx\r\nexport&nbsp;QT_IM_MODULE=fcitx\r\nexport&nbsp;XMODIFIERS=&quot;@im=fcitx&quot;\r\n\r\n或者下面的：二选一\r\n\r\nexport&nbsp;XIM=&quot;fcitx&quot;\r\nexport&nbsp;XIM_PROGRAM=&quot;fcitx&quot;\r\nexport&nbsp;XMODIFIERS=&quot;@im=fcitx&quot;\r\nexport&nbsp;GTK_IM_MODULE=&quot;fcitx&quot;\r\nexport&nbsp;QT_IM_MODULE=&quot;fcitx&quot;\r\n\r\n\r\n8、安装完后imsettings-switch&nbsp;fcitx后，重启计算机，fcitx可以选择搜狗输入法（fedora系统的有搜狗输入法,centos\r\n的好像网上有相关的，自己搜，我没搜狗输入法，我直接用的是fcitx-pinyin），或者其他拼音输入法。\r\n\r\n第二步：下载sublime_text3,编译sublime_imfix.c,启动sublime&nbsp;text3&nbsp;实现中文输入\r\n\r\n1、去官网下载sublime&nbsp;text3&nbsp;,注意是下载centos版本的，至于怎么下载，自己百度\r\n下载完解压就可以使用啦，不需要安装，但是此时输入英文和数字是没有问题的，但是想要输入中文，却不能够完成，\r\n现在就给大家讲讲如何来解决这个问题（我的电脑安装的是fcitx拼音输入法，前面步骤有安装说明）。\r\n\r\n2、在sublime&nbsp;text3&nbsp;的解压目录新建文件：sublime-imfix.c，&nbsp;其实，在其他目录也可以的，但是为了方便，这里直接放在\r\n解压目录.文件内容如下：注意，用文本text&nbsp;editor编辑吧，别用vi/vim\r\n\r\n/*\r\nsublime-imfix.c\r\nUse&nbsp;LD_PRELOAD&nbsp;to&nbsp;interpose&nbsp;some&nbsp;function&nbsp;to&nbsp;fix&nbsp;sublime&nbsp;input&nbsp;method&nbsp;support&nbsp;for&nbsp;linux.\r\nBy&nbsp;Cjacker&nbsp;Huang\r\n\r\ngcc&nbsp;-shared&nbsp;-o&nbsp;libsublime-imfix.so&nbsp;sublime-imfix.c&nbsp;`pkg-config&nbsp;--libs&nbsp;--cflags&nbsp;gtk+-2.0`&nbsp;-fPIC\r\nLD_PRELOAD=./libsublime-imfix.so&nbsp;subl\r\n*/\r\n#include&nbsp;&lt;gtk/gtk.h&gt;\r\n#include&nbsp;&lt;gdk/gdkx.h&gt;\r\ntypedef&nbsp;GdkSegment&nbsp;GdkRegionBox;\r\n\r\nstruct&nbsp;_GdkRegion\r\n{\r\n&nbsp;&nbsp;long&nbsp;size;\r\n&nbsp;&nbsp;long&nbsp;numRects;\r\n&nbsp;&nbsp;GdkRegionBox&nbsp;*rects;\r\n&nbsp;&nbsp;GdkRegionBox&nbsp;extents;\r\n};\r\n\r\nGtkIMContext&nbsp;*local_context;\r\n\r\nvoid\r\ngdk_region_get_clipbox&nbsp;(const&nbsp;GdkRegion&nbsp;*region,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GdkRectangle&nbsp;&nbsp;&nbsp;&nbsp;*rectangle)\r\n{\r\n&nbsp;&nbsp;g_return_if_fail&nbsp;(region&nbsp;!=&nbsp;NULL);\r\n&nbsp;&nbsp;g_return_if_fail&nbsp;(rectangle&nbsp;!=&nbsp;NULL);\r\n\r\n&nbsp;&nbsp;rectangle-&gt;x&nbsp;=&nbsp;region-&gt;extents.x1;\r\n&nbsp;&nbsp;rectangle-&gt;y&nbsp;=&nbsp;region-&gt;extents.y1;\r\n&nbsp;&nbsp;rectangle-&gt;width&nbsp;=&nbsp;region-&gt;extents.x2&nbsp;-&nbsp;region-&gt;extents.x1;\r\n&nbsp;&nbsp;rectangle-&gt;height&nbsp;=&nbsp;region-&gt;extents.y2&nbsp;-&nbsp;region-&gt;extents.y1;\r\n&nbsp;&nbsp;GdkRectangle&nbsp;rect;\r\n&nbsp;&nbsp;rect.x&nbsp;=&nbsp;rectangle-&gt;x;\r\n&nbsp;&nbsp;rect.y&nbsp;=&nbsp;rectangle-&gt;y;\r\n&nbsp;&nbsp;rect.width&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;rect.height&nbsp;=&nbsp;rectangle-&gt;height;\r\n&nbsp;&nbsp;//The&nbsp;caret&nbsp;width&nbsp;is&nbsp;2;\r\n&nbsp;&nbsp;//Maybe&nbsp;sometimes&nbsp;we&nbsp;will&nbsp;make&nbsp;a&nbsp;mistake,&nbsp;but&nbsp;for&nbsp;most&nbsp;of&nbsp;the&nbsp;time,&nbsp;it&nbsp;should&nbsp;be&nbsp;the&nbsp;caret.\r\n&nbsp;&nbsp;if(rectangle-&gt;width&nbsp;==&nbsp;2&nbsp;&amp;&amp;&nbsp;GTK_IS_IM_CONTEXT(local_context))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gtk_im_context_set_cursor_location(local_context,&nbsp;rectangle);\r\n&nbsp;&nbsp;}\r\n}\r\n\r\n//this&nbsp;is&nbsp;needed,&nbsp;\r\n//&nbsp;for&nbsp;example&nbsp;if&nbsp;you&nbsp;input&nbsp;something&nbsp;in&nbsp;file&nbsp;dialog&nbsp;and&nbsp;return&nbsp;back&nbsp;the&nbsp;edit&nbsp;area\r\n//context&nbsp;will&nbsp;lost,&nbsp;so&nbsp;here&nbsp;we&nbsp;set&nbsp;it&nbsp;again.\r\n\r\nstatic&nbsp;GdkFilterReturn&nbsp;event_filter&nbsp;(GdkXEvent&nbsp;*xevent,&nbsp;GdkEvent&nbsp;*event,&nbsp;gpointer&nbsp;im_context)\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;XEvent&nbsp;*xev&nbsp;=&nbsp;(XEvent&nbsp;*)xevent;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(xev-&gt;type&nbsp;==&nbsp;KeyRelease&nbsp;&amp;&amp;&nbsp;GTK_IS_IM_CONTEXT(im_context))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GdkWindow&nbsp;*&nbsp;win&nbsp;=&nbsp;g_object_get_data(G_OBJECT(im_context),&quot;window&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(GDK_IS_WINDOW(win))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gtk_im_context_set_client_window(im_context,&nbsp;win);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GDK_FILTER_CONTINUE;\r\n}\r\n\r\nvoid&nbsp;gtk_im_context_set_client_window&nbsp;(GtkIMContext&nbsp;*context,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GdkWindow&nbsp;&nbsp;&nbsp;&nbsp;*window)\r\n{\r\n&nbsp;&nbsp;GtkIMContextClass&nbsp;*klass;\r\n&nbsp;&nbsp;g_return_if_fail&nbsp;(GTK_IS_IM_CONTEXT&nbsp;(context));\r\n&nbsp;&nbsp;klass&nbsp;=&nbsp;GTK_IM_CONTEXT_GET_CLASS&nbsp;(context);\r\n&nbsp;&nbsp;if&nbsp;(klass-&gt;set_client_window)\r\n&nbsp;&nbsp;&nbsp;&nbsp;klass-&gt;set_client_window&nbsp;(context,&nbsp;window);\r\n\r\n&nbsp;&nbsp;if(!GDK_IS_WINDOW&nbsp;(window))\r\n&nbsp;&nbsp;&nbsp;&nbsp;return;\r\n&nbsp;&nbsp;g_object_set_data(G_OBJECT(context),&quot;window&quot;,window);\r\n&nbsp;&nbsp;int&nbsp;width&nbsp;=&nbsp;gdk_window_get_width(window);\r\n&nbsp;&nbsp;int&nbsp;height&nbsp;=&nbsp;gdk_window_get_height(window);\r\n&nbsp;&nbsp;if(width&nbsp;!=&nbsp;0&nbsp;&amp;&amp;&nbsp;height&nbsp;!=0)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;gtk_im_context_focus_in(context);\r\n&nbsp;&nbsp;&nbsp;&nbsp;local_context&nbsp;=&nbsp;context;\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;gdk_window_add_filter&nbsp;(window,&nbsp;event_filter,&nbsp;context);\r\n}\r\n\r\n\r\n\r\n3、编译共享内库\r\n\r\ngcc&nbsp;-shared&nbsp;-o&nbsp;libsublime-imfix.so&nbsp;sublime-imfix.c&nbsp;`pkg-config&nbsp;--libs&nbsp;--cflags&nbsp;gtk+-2.0`&nbsp;-fPIC\r\n\r\n如果报错，根据报错信息解决，一般是缺少依赖导致的\r\n\r\n4、启动s能输入中文的sublime&nbsp;text3,在解压目录执行（前提，第3步正确执行啦）\r\nLD_PRELOAD=./libsublime-imfix.so&nbsp;./sublime_text\r\n如果一切正常，此时打开的sublime&nbsp;text3就是可以输入中文的啦\r\n5、其他设置，必然建立可输入中的sublime&nbsp;text3的桌面图标等，自己百度，我自己没建立图标，\r\n我的启动方式是：我的目录结构是/opt/sublime_text_3/xxx，所以，我要用sublime的时候就执行：\r\nLD_PRELOAD=/opt/sublime_text_3/libsublime-imfix.so&nbsp;/opt/sublime_text_3/sublime_text</pre><p><br/></p>', '2018-07-28 16:20:39', '2018-07-28 16:20:39');
INSERT INTO `article` VALUES ('68', 'Centos7.5下安装Python3', '5', '本文实例讲述了Centos7(我的centos版本是7.5)环境安装Python3的方法。与python2共存，分享给大家供大家参考，具体如下：', '<pre class=\"brush:plain;toolbar:false;\">\r\n\r\n由于centos7原本就安装了Python2，而且这个Python2不能被删除，因为有很多系统命令，比如yum都要用到。\r\n\r\n[root@VM_105_217_centos&nbsp;Python-3.6.2]#&nbsp;python\r\nPython&nbsp;2.7.5&nbsp;(default,&nbsp;Aug&nbsp;4&nbsp;2017,&nbsp;00:39:18)\r\n[GCC&nbsp;4.8.5&nbsp;20150623&nbsp;(Red&nbsp;Hat&nbsp;4.8.5-16)]&nbsp;on&nbsp;linux2\r\nType&nbsp;&quot;help&quot;,&nbsp;&quot;copyright&quot;,&nbsp;&quot;credits&quot;&nbsp;or&nbsp;&quot;license&quot;&nbsp;for&nbsp;more&nbsp;information.\r\n输入Python命令，查看可以得知是Python2.7.5版本\r\n\r\n输入&nbsp;&nbsp;&nbsp;which&nbsp;python\r\n可以查看位置，一般是位于/usr/bin/python目录下。\r\n\r\n下面介绍安装Python3的方法\r\n\r\n首先安装依赖包\r\n\r\n\r\nyum&nbsp;-y&nbsp;groupinstall&nbsp;&quot;Development&nbsp;tools&quot;\r\nyum&nbsp;-y&nbsp;install&nbsp;zlib-devel&nbsp;bzip2-devel&nbsp;openssl-devel&nbsp;ncurses-devel&nbsp;sqlite-devel&nbsp;\r\nyum&nbsp;-y&nbsp;install&nbsp;readline-devel&nbsp;tk-devel&nbsp;gdbm-devel&nbsp;db4-devel&nbsp;libpcap-devel&nbsp;xz-devel\r\n\r\n\r\n然后根据自己需求下载不同版本的Python3，我下载的是Python3.6.2\r\n\r\nwget&nbsp;https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tar.xz\r\n如果速度慢，可去官网下载，利用WinSCP等软件传到服务器上指定位置，我的存放目录是/usr/local/python3，使用命令：\r\n\r\n\r\nmkdir&nbsp;/usr/local/python3\r\n建立一个空文件夹\r\n\r\n然后解压压缩包，进入该目录，安装Python3\r\n\r\n\r\ntar&nbsp;-xvJf&nbsp;Python-3.6.2.tar.xz\r\ncd&nbsp;Python-3.6.2\r\n./configure&nbsp;--prefix=/usr/local/python3\r\nmake&nbsp;&amp;&amp;&nbsp;make&nbsp;install\r\n最后创建软链接\r\n\r\n\r\nln&nbsp;-s&nbsp;/usr/local/python3/bin/python3&nbsp;/usr/bin/python3\r\nln&nbsp;-s&nbsp;/usr/local/python3/bin/pip3&nbsp;/usr/bin/pip3\r\n在命令行中输入python3测试\r\n\r\n\r\n\r\n希望本文所述对大家CentOS服务器配置有所帮助。\r\n参考：https://www.jb51.net/article/136812.htm</pre><p><br/></p>', '2018-07-28 20:03:32', '2018-07-28 20:03:32');
INSERT INTO `article` VALUES ('69', 'python3下requests和bs4(BeautifulSoup4)数据抓取入门：抓取腾讯社招', '5', 'requests库是一个用python编写的http请求模块，可以方便的对网页进行爬取，是学习python爬虫的较好的http请求模块。\r\nBeautiful Soup 是用Python写的一个HTML/XML的解析器，它可以很好的处理不规范标记并生成剖析树(parse tree)。 它提供简单又常用的导航（navigating），搜索以及修改剖析树的操作。它可以大大节省你的编程时间。\r\n下面以抓取腾讯社招页面：\"https://hr.tencent.com/position.php?lid=&tid=&keywords=请输入关键词\" 上的职位标题，职位详情链接，详情页面的工作工作职责，工作要求。环境win7,python36,requests,bs4(注意和以前的老版本有区别，比如安装方式就不一样)\r\n', '<pre class=\"brush:plain;toolbar:false\">\r\n第一步：安装\r\npip&nbsp;install&nbsp;requests\r\n\r\n因为电脑上有python2和python3，默认环境变量是Python2,所以我安装python3下的reuqests命令是：\r\nD:\\usr\\local\\python\\Python36\\scripts\\pip3&nbsp;install&nbsp;requests\r\n\r\npip&nbsp;install&nbsp;bs4\r\n因为电脑上有python2和python3，默认环境变量是Python2,所以我安装python3下的bs4命令是：\r\n：D:\\usr\\local\\python\\Python36\\scripts\\pip3&nbsp;install&nbsp;bs4\r\n如果遇到报错自行解决\r\n\r\n\r\n第二步：实例代码,保存路径为：D:\\xm\\py-xm\\a.py\r\n\r\n#&nbsp;-*-&nbsp;coding:UTF-8&nbsp;-*-\r\nimport&nbsp;requests\r\nfrom&nbsp;bs4&nbsp;import&nbsp;BeautifulSoup\r\n\r\n#获取详情\r\ndef&nbsp;getDetail(url):\r\n&nbsp;&nbsp;&nbsp;&nbsp;url1&nbsp;=&nbsp;&quot;https://hr.tencent.com/position.php?lid=&amp;tid=&amp;keywords=请输入关键词&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;header&nbsp;=&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;User-Agent&#39;:&nbsp;&#39;Mozilla/5.0&nbsp;(Windows&nbsp;NT&nbsp;6.1;&nbsp;WOW64)&nbsp;AppleWebKit/537.36&nbsp;(KHTML,&nbsp;like&nbsp;Gecko)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Chrome/58.0.3029.110&nbsp;Safari/537.36&nbsp;SE&nbsp;2.X&nbsp;MetaSr&nbsp;1.0&#39;}\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#有的网页并不需要header就可以抓取，具体网站具体分析\r\n&nbsp;&nbsp;&nbsp;&nbsp;req&nbsp;=&nbsp;requests.get(url=url,&nbsp;headers=header)\r\n&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;print(req.text)&nbsp;&nbsp;查看获得的html源代码\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;html&nbsp;=&nbsp;req.text\r\n&nbsp;&nbsp;&nbsp;&nbsp;bf&nbsp;=&nbsp;BeautifulSoup(html,&nbsp;&#39;html.parser&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;duty&nbsp;=&nbsp;bf.find_all(&#39;ul&#39;,&nbsp;class_=&#39;squareli&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;-------------工作职责-------------》&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(duty[0])\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;-------------工作要求-------------》&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(duty[1])\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(&#39;\\n&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(&#39;\\n&#39;)\r\n\r\n\r\nif&nbsp;__name__&nbsp;==&nbsp;&quot;__main__&quot;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;url1&nbsp;=&nbsp;&quot;https://hr.tencent.com/position.php?lid=&amp;tid=&amp;keywords=请输入关键词&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;header&nbsp;=&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;User-Agent&#39;:&nbsp;&#39;Mozilla/5.0&nbsp;(Windows&nbsp;NT&nbsp;6.1;&nbsp;WOW64)&nbsp;AppleWebKit/537.36&nbsp;(KHTML,&nbsp;like&nbsp;Gecko)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Chrome/58.0.3029.110&nbsp;Safari/537.36&nbsp;SE&nbsp;2.X&nbsp;MetaSr&nbsp;1.0&#39;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#有的网页并不需要header就可以抓取，具体网站具体分析\r\n&nbsp;&nbsp;&nbsp;&nbsp;req&nbsp;=&nbsp;requests.get(url=url1,&nbsp;headers=header)\r\n&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;print(req.text)&nbsp;&nbsp;查看获得的html源代码\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;html&nbsp;=&nbsp;req.text\r\n&nbsp;&nbsp;&nbsp;&nbsp;bf&nbsp;=&nbsp;BeautifulSoup(html)\r\n&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;bf.find_all(&quot;td&quot;,&nbsp;class_=&#39;square&#39;)&nbsp;&nbsp;#获得&nbsp;class=&#39;square&#39;&nbsp;的dom元素\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;链接和文本：&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;print(bf.select(&#39;.square&nbsp;a&#39;)[0][&#39;href&#39;])\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;range(len(data)):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;第&nbsp;&quot;,i,&quot;个链接：&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link&nbsp;=&nbsp;&quot;https://hr.tencent.com/&quot;+(bf.select(&#39;.square&nbsp;a&#39;)[i][&#39;href&#39;]).strip()&nbsp;&nbsp;#详情链接\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text&nbsp;=&nbsp;bf.select(&#39;.square&nbsp;a&#39;)[i].get_text()&nbsp;&nbsp;&nbsp;&nbsp;#标题\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(link)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(text)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;----------详情-------&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getDetail(link)\r\n\r\n\r\n第三步：运行\r\n因为电脑上有python2和python3，默认环境变量是Python2,所以python3运行py文件的命令是：\r\npython下的python.exe路径&nbsp;&nbsp;&nbsp;文件路径，比如我的：\r\n\r\nD:\\usr\\local\\python\\Python36\\python&nbsp;D:\\xm\\py-xm\\a.py\r\n\r\n也可以自行设置python3的环境变量，直接python&nbsp;文件路径就可以运行文件</pre><p><br/></p>', '2018-08-04 11:06:39', '2018-08-04 11:06:39');
INSERT INTO `article` VALUES ('70', ' 最完美thinkphp nginx 配置文件', '3', '网上的TP nginx配置，就当是学习nginx.', '<pre class=\"brush:plain;toolbar:false\">\r\nserver&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80;\r\n&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;&nbsp;thinkphp.lo;\r\n&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;/var/www;\r\n&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;&nbsp;index.html&nbsp;index.htm&nbsp;index.php;\r\n&nbsp;&nbsp;&nbsp;&nbsp;error_page&nbsp;&nbsp;404&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/404.html;\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;=&nbsp;/404.html&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;404&nbsp;&#39;Sorry,&nbsp;File&nbsp;not&nbsp;Found!&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;error_page&nbsp;&nbsp;500&nbsp;502&nbsp;503&nbsp;504&nbsp;&nbsp;/50x.html;\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;=&nbsp;/50x.html&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;&nbsp;&nbsp;/usr/share/nginx/html;&nbsp;#&nbsp;windows用户替换这个目录\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try_files&nbsp;$uri&nbsp;@rewrite;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;@rewrite&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;$static&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;&nbsp;($uri&nbsp;~&nbsp;\\.(css|js|jpg|jpeg|png|gif|ico|woff|eot|svg|css\\.map|min\\.map)$)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;$static&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($static&nbsp;=&nbsp;0)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rewrite&nbsp;^/(.*)$&nbsp;/index.php?s=/$1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;/Uploads/.*\\.php$&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deny&nbsp;all;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;\\.php/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($request_uri&nbsp;~&nbsp;^(.+\\.php)(/.+?)($|\\?))&nbsp;{&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_pass&nbsp;127.0.0.1:9000;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;fastcgi_params;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_param&nbsp;SCRIPT_NAME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_param&nbsp;PATH_INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_param&nbsp;SCRIPT_FILENAME&nbsp;$document_root$1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;\\.php$&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_pass&nbsp;127.0.0.1:9000;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fastcgi_param&nbsp;SCRIPT_FILENAME&nbsp;$document_root$fastcgi_script_name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;fastcgi_params;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;/\\.ht&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deny&nbsp;&nbsp;all;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n\r\n参考：http://www.thinkphp.cn/topic/46462.html</pre><p><br/></p>', '2018-08-09 23:44:44', '2018-08-09 23:44:44');
INSERT INTO `article` VALUES ('71', 'nginx 部署 react 项目例子', '6', '', '本人测试环境：虚拟机：centos7,nginx,本地项目webpack+react16.5+react-router架构<br />\r\n<br />\r\n1.项目目录假设为： /www/wwwroot/react_nginx/<br />\r\n2.项目目录打包的Js文件路径为 /www/wwwroot/react_nginx/dist/bundle.js<br />\r\n3.人口文件假设定义为：/www/wwwroot/react_nginx/index.html<br />\r\n4.index.html中引入打包文件： &lt;script src=\'./dist/bundle.js\'&gt;&lt;/script&gt;<br />\r\n<br />\r\n5.nginx配置例子如下：<br />\r\nserver {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; listen 80;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; server_name www.react.dev;<br />\r\n&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; root &nbsp;/www/wwwroot/react_nginx/;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; index index.html index.htm;<br />\r\n&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; location / {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try_files $uri $uri/ /index.html;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; location ^~ /assets/ {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gzip_static on;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; expires max;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; add_header Cache-Control public;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; error_page 500 502 503 504 /500.html;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; client_max_body_size 20M;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; keepalive_timeout 10;<br />\r\n}<br />\r\n<br />\r\n6.重启Nignx: systemctl restart nginx<br />\r\n7.访问项目：ip或者server_name:比如我的项目: http://www.react.dev/<br />\r\n<br />\r\n<br />\r\n注意事项：<br />\r\n1、配置域名的话，需要80端口，成功后，只要访问域名即可访问的项目<br />\r\n2、如果你使用了React-Router的browserHistory 模式，请在Nginx配置中加入如下配置：<br />\r\nlocation / {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; try_files $uri $uri/ /index.html;<br />\r\n}<br />\r\n<br />\r\n原理，因为我们的项目只有一个根入口，当输入类似/home的url时，找不到这个页面，这是，nginx会尝试加载index.html，加载index.html之后，react-router就能起作用并匹配我们输入的/home路由，从而显示正确的home页面，，如果browserHistory模式的项目没有配置上述内容，会出现404的情况。<br />\r\n本人<br />\r\n亲自实践。参考https://blog.csdn.net/vVvlife/article/details/79403570<br />\r\n<br />', '2018-10-03 23:42:53', '2018-10-03 23:42:53');
INSERT INTO `article` VALUES ('72', 'react-native0.57 windows10 x64 环境搭建注意事项', '6', 'react-native0.57版本和老的版本在 Android Studio的android sdk配置，运行项目方法和老版本有区别。下面我把自己成功运行的总结记录如下\r\n注意：我用的windows10,用mac及linux的就自己摸索了。', '<br />\r\n1. 请严格按照react-native中文网（注意是0.57版本）的步骤进行操作，首先安装必须的依赖：有：Node(我安装的是v8.12.0)、React Native 命令行工具、Python2.7 以及 JDK1.8 和 Android Studio。<br />\r\n2. Android Studio下配置Android Sdk,请严格安装react-native(0.57)中文网操作进行<br />\r\n3. Android Studio安装和Android Sdk安装如果太慢，几个小时还不好的话，估计你的网络的不太好，需要自己fanqiang哦<br />\r\n3. 必须正确配置Android Sdk环境变量,必须确保python2.7,node,jdk环境变量正确<br />\r\n4. 因为是在windows上，所以只能开发安卓项目，请下载夜神模拟器并安装（当然有的是绿色版的，直接可以用，我以前用的是绿色版的，最近度娘上搜不到绿色版的夜神了，我就下载最新版的进行安装了），以方便测试RN项目，也许也还有其他的模拟器，但是目前我还不知道，如果有大神知道的，环境留言。当然了，你也可以用的安卓手机进行测试啦<br />\r\n5. 以上工作都完成了，关机重启(估计不重启也是可以的，喜欢尝试的菜鸟大神们自己试试就晓得了)<br />\r\n6. 准备工作(网不好的估计需要fanqiang)都做好了,关机重启了，打开夜神模拟器，然后命令行执行adb connect 127.0.0.1:62001,没报错的话进入我们要建立项目的文件夹执行react-native init demo,等待执行完，cd demo,然后在 android/app/src/main/下新建assets目录，得到android/app/src/main/assets,然后执行 react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res，结束之后，执行<br />\r\n&nbsp; &nbsp;react-native run-android,&nbsp; 这个时候如果没报错，我们的demo项目安装到手机了,然后在手机上设置ip:8081,这个时候可以停止react-native run-android的服务了。然后我们启动一个热部署服务器，方法只在项目目录下执行：react-native start --reset-cache， 对，react-native0.57的热部署服务就是执行这句。<br />', '2018-10-13 23:59:46', '2018-10-13 23:59:46');
INSERT INTO `article` VALUES ('73', '   react-native通过fetch post带参数请求php接口例子', '6', '接触react native 零零散散算下来有四五个月了，一般情况下app都是需要和后端接口进行交互的。下面是react native 中通过fetch post带参数请求PHP接口的例子，亲自测试成功的。', '本人测试时react native版本为0.57，日期是2018年10月14号，windows10,夜神模拟器。例子很简单，可以在render中输出first这个状态标志看效果<br />\r\n<br />\r\nfetch(\'http://192.168.99.192/api.php\', {<br />\r\n&nbsp; &nbsp; method: \'POST\',<br />\r\n&nbsp; &nbsp; headers: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'Accept\': \'application/json\',<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'Content-Type\': \'application/json\',<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; body: JSON.stringify({<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; name: \'名字\',<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; pwd: \'密码\',<br />\r\n&nbsp; &nbsp; })<br />\r\n}).then((response) =&gt; response.json())<br />\r\n&nbsp; &nbsp; .then((res) =&gt; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; console.log(res);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.setState({first: res});&nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; })<br />\r\n&nbsp; &nbsp; .catch((error) =&gt; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; console.warn(error);<br />\r\n&nbsp; &nbsp; });<br />\r\n<br />\r\n<br />\r\nhttp://192.168.99.192/api.php文件：<br />\r\n<br />\r\n&lt;?php<br />\r\n//如果需要设置允许所有域名发起的跨域请求，可以使用通配符 *<br />\r\nheader(\"Access-Control-Allow-Origin: *\");<br />\r\n<br />\r\n$json = json_decode(file_get_contents(\'php://input\'), true);<br />\r\n<br />\r\n$arr =[$json[\'name\'],$json[\'pwd\']];<br />\r\n<br />\r\necho json_encode($arr);<br />\r\n<div>\r\n	<br />\r\n</div>\r\n<br />', '2018-10-14 19:17:36', '2018-10-14 19:17:36');
INSERT INTO `article` VALUES ('74', 'react-native入门综合例子1：电影列表', '6', '今天是2018年10月14号，宅在家完成了官网的一个小demo\"电影列表\" 虽然不是什么大工程 但整个流程走下来 也挺有成就感的，为继续学react native增强了信心。', '<br />\r\n必备基础知识：ES6常用语法，props属性，state，react-native(和react差不多)生命周期，样式，flexbox布局，列表等。<br />\r\n测试环境：win10 ，夜神模拟器，react-native0.57, php作为后端接口，下面给出代码。<br />\r\n<br />\r\n<br />\r\n/**<br />\r\n&nbsp;* Sample React Native App<br />\r\n&nbsp;* https://github.com/facebook/react-native<br />\r\n&nbsp;*<br />\r\n&nbsp;* @format<br />\r\n&nbsp;* @flow<br />\r\n&nbsp;*/<br />\r\n<br />\r\nimport React, {Component} from \'react\';<br />\r\nimport {Platform, StyleSheet, Text, View, Image, FlatList} from \'react-native\';<br />\r\n<br />\r\nconst instructions = Platform.select({<br />\r\n&nbsp; &nbsp; ios: \'Press Cmd+R to reload,\\n\' + \'Cmd+D or shake for dev menu\',<br />\r\n&nbsp; &nbsp; android:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'Double tap R on your keyboard to reload,\\n\' +<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; \'Shake or press menu button for dev menu\',<br />\r\n});<br />\r\n<br />\r\ntype Props = {};<br />\r\nexport default class App extends Component&lt;Props&gt; {<br />\r\n<br />\r\n&nbsp; &nbsp; constructor(props) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; super(props);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.state = {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; movies: null,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; loaded: false,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data: []<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; };<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.fetchData = this.fetchData.bind(this);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.renderMovie = this.renderMovie.bind(this);<br />\r\n<br />\r\n&nbsp; &nbsp; }<br />\r\n<br />\r\n&nbsp; &nbsp; fetchData() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; fetch(\'http://192.168.99.193/b.php\')<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .then((response) =&gt; response.json())<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .then((responseData) =&gt; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 注意，这里使用了this关键字，为了保证this在调用时仍然指向当前组件，我们需要对其进行“绑定”操作<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(responseData);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.setState({<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; movies: responseData,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data: this.state.data.concat(responseData),<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; loaded: true,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<br />\r\n<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; componentDidMount() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.fetchData();<br />\r\n&nbsp; &nbsp; }<br />\r\n<br />\r\n&nbsp; &nbsp; render() {<br />\r\n<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if (!this.state.loaded) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return this.renderLoadingView();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return (&lt;FlatList<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderItem={this.renderMovie}<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data={this.state.data}<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; style={styles.list}<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; /&gt;);<br />\r\n<br />\r\n&nbsp; &nbsp; }<br />\r\n<br />\r\n&nbsp; &nbsp; renderLoadingView() {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return (<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;View style={styles.box}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Text&gt;正在加载数据....&lt;/Text&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/View&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; );<br />\r\n<br />\r\n&nbsp; &nbsp; }<br />\r\n<br />\r\n&nbsp; &nbsp; //item名字不能变，必须是item<br />\r\n&nbsp; &nbsp; renderMovie({item}) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return (<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;View style={styles.box}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Image source={{uri: item.src}} style={styles.img}/&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;View style={styles.rightbox}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Text style={styles.title}&gt;{item.title}&lt;/Text&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Text style={styles.year}&gt;{item.time}&lt;/Text&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/View&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/View&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; );<br />\r\n&nbsp; &nbsp; }<br />\r\n<br />\r\n}<br />\r\n<br />\r\nconst styles = StyleSheet.create({<br />\r\n&nbsp; &nbsp; box: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; flex: 1, flexDirection: \'row\', justifyContent: \'center\', alignItems: \'center\', backgroundColor: \"#F5FCFF\",<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; pic: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; flex: 1,<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; img: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; width: 51, height: 81,<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; rightbox: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; flex: 1,<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; title: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; fontSize: 20, marginBottom: 8, textAlign: \'center\',<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; year: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; textAlign: \'center\',<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; list: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; paddingTop: 20, backgroundColor: \'#F5FCFF\',<br />\r\n&nbsp; &nbsp; },<br />\r\n<br />\r\n})<br />\r\n<br />\r\nhttp://192.168.99.193/b.php&nbsp; 文件内容：<br />\r\n&lt;?php<br />\r\nheader(\"Access-Control-Allow-Origin: *\");<br />\r\n$str = file_get_contents(\'./m30.txt\');<br />\r\necho $str;<br />\r\n<br />\r\n<span style=\"font-size:10px;\"></span><br />\r\nm30.txt 文件内容为（数据来自网站\'http://www.langfly.com/interactive/person/0&amp;now=1\'）：<br />\r\n<br />\r\n[{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228180517.jpg\",\"title\":\"\\u4e24\\u4e2a\\u5934\\u4e00\\u4e2a\\u5927\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228180228.jpg\",\"title\":\"\\u4ee3\\u53f7\\uff1a\\u6740\\u624b\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228175948.jpg\",\"title\":\"\\u6124\\u6012\\u4e52\\u4e53\\u7403\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228175546.jpg\",\"title\":\"\\u62a2\\u94b1\\u888b\\u9f20\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228175347.jpg\",\"title\":\"\\u54c8\\u62c9\\u731b\\u7537\\u79c02:\\u6b27\\u6d32\\u79cd\\u9a6c\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228175119.jpg\",\"title\":\"\\u80a5\\u4f6c\\u6559\\u6388\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228174908.jpg\",\"title\":\"\\u80a5\\u4f6c\\u6559\\u63882\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228174428.jpg\",\"title\":\"\\u5c0f\\u77ee\\u4eba\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228174134.jpg\",\"title\":\"\\u62f3\\u738b\\u5f00\\u996d\\u9986\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228173846.jpg\",\"title\":\"\\u4e09\\u4e2a\\u81ed\\u76ae\\u5320\",\"time\":\"2018-10-14 14:13:00\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228173458.jpg\",\"title\":\"\\u653f\\u575b\\u6df7\\u6218\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228173250.jpg\",\"title\":\"\\u6076\\u8001\\u677f\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228172952.jpg\",\"title\":\"\\u6211\\u4eec\\u7684\\u50bb\\u8001\\u54e5\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228172628.jpg\",\"title\":\"\\u75af\\u72c2\\u795e\\u7236\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228172234.jpg\",\"title\":\"\\u56de\\u5230\\u8352\\u91ce\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228171955.jpg\",\"title\":\"\\u4e24\\u7537\\u53d8\\u9519\\u8eab\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228171630.jpg\",\"title\":\"\\u50cf\\u7537\\u4eba\\u4e00\\u6837\\u601d\\u8003\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228171352.jpg\",\"title\":\"\\u7231\\u60c5\\u65e0\\u7ebf\\u7275\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228171041.jpg\",\"title\":\"\\u4e94\\u5e74\\u4e4b\\u7ea6\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228170653.jpg\",\"title\":\"District 9\",\"time\":\"2018-10-14 14:13:02\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228165619.jpg\",\"title\":\"\\u65e0\\u803b\\u6df7\\u86cb\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228164526.jpg\",\"title\":\" \\u5176\\u5b9e\\u4ed6\\u6ca1\\u90a3\\u4e48\\u559c\\u6b22\\u4f60\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228164040.jpg\",\"title\":\"\\u5fc3\\u5982\\u6298\\u7eb8\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228162731.jpg\",\"title\":\"\\u79d1\\u5e7b\\u5927\\u5e08\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228162242.jpg\",\"title\":\"\\u4eba\\u95f4\\u5927\\u6d69\\u52ab\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228161759.jpg\",\"title\":\"\\u52a0\\u91cc\\u68ee\\u6562\\u6b7b\\u961f\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228161535.jpg\",\"title\":\"\\u5144\\u5f1f\\u8fde\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228161020.jpg\",\"title\":\"\\u98ce\\u96e8\\u54c8\\u4f5b\\u8def\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228160632.jpg\",\"title\":\"\\u62ef\\u6551\\u5927\\u5175\\u745e\\u6069\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228160100.jpg\",\"title\":\"\\u5c0f\\u59d0\\u597d\\u767d\",\"time\":\"2018-10-14 14:13:10\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228155742.jpg\",\"title\":\"\\u8d85\\u7ea7\\u5988\\u5988\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228155336.jpg\",\"title\":\"\\u6d77\\u745f\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228154417.jpg\",\"title\":\"\\u6211\\u4eec\\u8fd9\\u6837\\u7684\\u4eba\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228154109.jpg\",\"title\":\"\\u8ff7\\u7f51\\u5973\\u5b69\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228152036.jpg\",\"title\":\"\\u8feb\\u964d\\u822a\\u73ed\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228151650.jpg\",\"title\":\"\\u5999\\u7b14\\u751f\\u82b1\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228151345.jpg\",\"title\":\"\\u6210\\u4e3a\\u5f17\\u6797\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228150734.jpg\",\"title\":\"\\u66f2\\u7ebf\\u96be\\u9898\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228145952.jpg\",\"title\":\"\\u7231\\u5728\\u7f57\\u9a6c\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121228145641.jpg\",\"title\":\"\\u88ab\\u89e3\\u653e\\u7684\\u59dc\\u6208\",\"time\":\"2018-10-14 14:13:18\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226155628.jpg\",\"title\":\"\\u604b\\u604b\\u4e66\\u4e2d\\u4eba\",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226155133.jpg\",\"title\":\" \\u8b66\\u6212\\u7ed3\\u675f\",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226153534.jpg\",\"title\":\"\\u970d\\u6bd4\\u7279\\u4eba1\\uff1a\\u610f\\u5916\\u4e4b\\u65c5 \",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226153005.jpg\",\"title\":\"\\u5149\\u66554\\uff1a\\u822a\\u5411\\u9ece\\u660e\\u53f7\",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226151959.jpg\",\"title\":\"\\u5b88\\u62a4\\u8005\\u8054\\u76df\",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226151714.jpg\",\"title\":\"\\u5357\\u56fd\\u91ce\\u517d\",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226151311.jpg\",\"title\":\"\\u963f\\u7518\\u6b63\\u4f20\",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226151018.jpg\",\"title\":\"2012 3D\",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226150602.jpg\",\"title\":\"\\u65e0\\u654c\\u7834\\u574f\\u738b\",\"time\":\"2018-10-14 14:13:21\"},{\"src\":\"http:\\/\\/www.langfly.com:80\\/images\\/movie\\/20121226150124.jpg\",\"title\":\"\\u901a\\u7075\\u7537\\u5b69\\u8bfa\\u66fc\",\"time\":\"2018-10-14 14:13:21\"}]<br />', '2018-10-14 23:20:06', '2018-10-14 23:20:06');
INSERT INTO `article` VALUES ('75', 'RN0.57  Error Execution failed for task \':app:mergeReleaseResources\' building APK', '6', '学习react-native坑不少，但是主要多谷歌，百度等，总能找到解决方案。下面是我打包apk遇到的一个坑，并成功解决。', '<div style=\"margin:0px;padding:0px;border:0px;font-family:gotham, helvetica, arial, sans-serif;font-size:14px;color:#383838;\">\r\n	react-native0.57打包apk报错：FAILURE: Build failed with an exception.<br />\r\n<br />\r\n* What went wrong:<br />\r\nExecution failed for task \':app:mergeReleaseResources\'.<br />\r\n</div>\r\n<p style=\"font-family:gotham, helvetica, arial, sans-serif;font-size:14px;color:#383838;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:gotham, helvetica, arial, sans-serif;font-size:14px;color:#383838;\">\r\n	解决方案：\r\n</p>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:gotham, helvetica, arial, sans-serif;font-size:14px;color:#383838;\">\r\n	项目目录下执行：\r\n</div>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:gotham, helvetica, arial, sans-serif;font-size:14px;color:#383838;\">\r\n	linux,mac&nbsp;直接执行：&nbsp;\r\n<pre><span style=\"line-height:1.57143em;\">rm </span><span style=\"line-height:1.57143em;\">-</span><span style=\"line-height:1.57143em;\">rf android</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">app</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">src</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">main</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">res</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">drawable</span><span style=\"line-height:1.57143em;\">-*</span></pre>\r\n</div>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:gotham, helvetica, arial, sans-serif;font-size:14px;color:#383838;\">\r\n	windows下打开git&nbsp;bush&nbsp; 执行&nbsp;\r\n<pre><span style=\"line-height:1.57143em;\">rm </span><span style=\"line-height:1.57143em;\">-</span><span style=\"line-height:1.57143em;\">rf android</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">app</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">src</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">main</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">res</span><span style=\"line-height:1.57143em;\">/</span><span style=\"line-height:1.57143em;\">drawable</span><span style=\"line-height:1.57143em;\">-*</span></pre>\r\n</div>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:gotham, helvetica, arial, sans-serif;font-size:14px;color:#383838;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px;padding:0px;border:0px;font-family:gotham, helvetica, arial, sans-serif;font-size:14px;color:#383838;\">\r\n	然后再执行：比如我自己测试的：\r\n</div>\r\n<p>\r\n	<br />\r\nD:\\lx\\demo\\android&gt;gradlew assembleRelease<br />\r\n<br />\r\nBUILD SUCCESSFUL in 53s<br />\r\n28 actionable tasks: 19 executed, 9 up-to-date<br />\r\n	<p>\r\n		D:\\lx\\demo\\android&gt;\r\n	</p>\r\n	<p>\r\n		<br />\r\n	</p>\r\n</p>\r\n<div>\r\n	参考：<a href=\"https://stackoverflow.com/questions/52652381/error-execution-failed-for-task-appmergereleaseresources-building-apk\" target=\"_blank\">https://stackoverflow.com/questions/52652381/error-execution-failed-for-task-appmergereleaseresources-building-apk</a>\r\n</div>\r\n<br />', '2018-10-28 13:08:47', '2018-10-28 13:08:47');
INSERT INTO `article` VALUES ('76', 'ReactNative基础可滚动的控件--ScrollView', '6', '在用react-native开发app时，比如商品详情页，有商品图片，商品价格，型号，商品介绍，评价等等，很多内容，单独一个屏幕显示不下时，需要上下滚动或者左右滚动时才能全部展示时，可以用ScrollView组件实现，代码结构可以是这样\"<ScrollView><图片组件/><规格，型号，产地，等等介绍组件/><详细说明组件/><评论列表组件/>...</ScrollView>\"', '关于ScrollView<br />\r\n<br />\r\nScrollView是一个通用的可滚动的控件，可以放入多个组件和视图，而且这些组件并不需要是同类型的。ScrollView不仅可以垂直滚动，还能水平滚动<br />\r\n一般使用ScrollView满足俩点即可&nbsp;<br />\r\nScrollView必须有一个确定的高度才能正常工作&nbsp;<br />\r\n将一系列不确定高度的子组件装进一个确定高度的容器（通过滚动操作）&nbsp;<br />\r\n通常有两种做法：&nbsp;<br />\r\n1、 直接给该ScrollView进行设置高度(不建议)；&nbsp;<br />\r\n2、 ScrollView中不要加{flex:1}。<br />\r\nScrollView内部的其他响应者尚无法阻止ScrollView本身成为响应者<br />\r\n常用属性<br />\r\n<br />\r\ncontentContainerStyle StyleSheetPropType(ViewStylePropTypes)&nbsp;<br />\r\n这些样式会应用到一个内层的内容容器上，所有的子视图都会包裹在内容容器内。<br />\r\nhorizontal bool&nbsp;<br />\r\n当此属性为true的时候，所有的的子视图会在水平方向上排成一行，而不是默认的在垂直方向上排成一列。默认值为false。<br />\r\n<br />\r\nkeyboardDismissMode enum(‘none’, “interactive”, ‘on-drag’)&nbsp;<br />\r\n用户拖拽滚动视图的时候，是否要隐藏软键盘。<br />\r\n<br />\r\nnone（默认值），拖拽时不隐藏软键盘。<br />\r\n<br />\r\non-drag 当拖拽开始的时候隐藏软键盘。<br />\r\n<br />\r\ninteractive 软键盘伴随拖拽操作同步地消失，并且如果往上滑动会恢复键盘。安卓设备上不支持这个选项，会表现的和none一样。<br />\r\n<br />\r\nkeyboardShouldPersistTaps bool&nbsp;<br />\r\n当此属性为false的时候，在软键盘激活之后，点击焦点文本输入框以外的地方，键盘就会隐藏。如果为true，滚动视图不会响应点击操作，并且键盘不会自动消失。默认值为false。<br />\r\n<br />\r\nonScroll function&nbsp;<br />\r\n在滚动的过程中，每帧最多调用一次此回调函数。调用的频率可以用scrollEventThrottle属性来控制。<br />\r\n<br />\r\nrefreshControl element&nbsp;<br />\r\n指定RefreshControl组件，用于为ScrollView提供下拉刷新功能。<br />\r\n<br />\r\nremoveClippedSubviews bool&nbsp;<br />\r\n（实验特性）：当此属性为true时，屏幕之外的子视图（子视图的overflow样式需要设为hidden）会被移除。这个可以提升大列表的滚动性能。默认值为true。<br />\r\n<br />\r\nshowsHorizontalScrollIndicator bool&nbsp;<br />\r\n当此属性为true的时候，显示一个水平方向的滚动条。<br />\r\n<br />\r\nshowsVerticalScrollIndicator bool&nbsp;<br />\r\n当此属性为true的时候，显示一个垂直方向的滚动条。<br />\r\n<br />\r\nalwaysBounceHorizontal bool&nbsp;<br />\r\n当此属性为true时，水平方向即使内容比滚动视图本身还要小，也可以弹性地拉动一截。当horizontal={true}时默认值为true，否则为false。<br />\r\n<br />\r\nOnMomentumScrollEnd function&nbsp;<br />\r\n当一帧滚动完毕的时候调用，e.nativeEvent.contentOffset。<br />\r\nonScrollBeginDrag fuction&nbsp;<br />\r\n当开始手动拖拽的时候调用。<br />\r\nonScrollEndDrag fuction&nbsp;<br />\r\n当结束手动拖拽的时候调用。<br />\r\n注意：ScrollView是继承自View，所以View中所有的属性同样适用于ScrollView。<br />\r\n<br />\r\n<br />\r\nexport default class App4 extends Component&lt;{}&gt; {<br />\r\n&nbsp; &nbsp; render() {<br />\r\n&nbsp; &nbsp; &nbsp; return (<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;View style={styles.container}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;ScrollView&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; horizontal={true}<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; showsHorizontalScrollIndicator = {false}<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pagingEnabled = {true}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {this.setUP()}<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/ScrollView&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/View&gt;<br />\r\n&nbsp; &nbsp; &nbsp; );<br />\r\n&nbsp; &nbsp; }s<br />\r\n<br />\r\n&nbsp; &nbsp; setUP(){<br />\r\n<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; var viewArr = [];<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; var colorArr = [\'red\',\'green\',\'blue\',\'yellow\',\'purple\'];<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; for (let i = 0; i &lt; 5; i++) {<br />\r\n<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; viewArr.push(<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;View key = {i} style = {{backgroundColor:colorArr[i],width:375,height:150}}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;Text&gt;{i}&lt;/Text&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/View&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return viewArr;<br />\r\n&nbsp; &nbsp; }<br />\r\n};<br />\r\n<br />\r\nconst styles = StyleSheet.create({<br />\r\n&nbsp; &nbsp; container:{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; flex:1, &nbsp; &nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; backgroundColor:\'white\',<br />\r\n&nbsp; &nbsp; },<br />\r\n});<br />\r\n<br />\r\n<br />\r\n参考：https://blog.csdn.net/hejiasu/article/details/78991529&nbsp;<br />\r\n<div>\r\n	<br />\r\n</div>', '2018-10-28 23:36:19', '2018-10-28 23:36:19');
INSERT INTO `article` VALUES ('77', 'React-Native之TextInput组件的设置以及获取输入框的内容', '6', '这两天在学习React-Native。今天来说说TextInput组件。\r\nStyleSheet：RN的样式组件 \r\nText：显示文本组件 \r\nView：是一个支持flexbox布局等的展示容器 \r\nTextInput：编辑文本的组件\r\n\r\n本文还是主要介绍怎么在RN中展示一个input框，及获取其内容：', '<strong></strong><br />\r\nTextInput组件的内容部分：<br />\r\nclass Myinput extends Component{<br />\r\n&nbsp; &nbsp; constructor(props){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; super(props);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this._onChangeText = this._onChangeText.bind(this);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.state = {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; showValue:\"\",<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; _onChangeText(inputData){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; console.log(\"输入的内容\",inputData);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; //把获取到的内容，设置给showValue<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; this.setState({showValue:inputData});<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; showData(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; alert(this.state.showValue);//展示输入框的内容<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; render(){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return (&lt;View style={styles.mycontainer}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;TextInput<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; placeholder=\"请输入用户名\"<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; editable={true}//是否可编辑<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; style={styles.inputStyle}//input框的基本样式<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; onChangeText={this._onChangeText}//输入框改变触发的函数<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;TouchableOpacity onPress={this.showData.bind(this)}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;View style={styles.btn}&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Text style={styles.wordC}&gt;搜索&lt;/Text&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/View&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/TouchableOpacity&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/View&gt;)<br />\r\n&nbsp; &nbsp; }<br />\r\n}<br />\r\nconst styles = StyleSheet.create({<br />\r\n&nbsp; &nbsp; mycontainer:{<br />\r\n&nbsp; &nbsp; &nbsp; marginTop:30,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; flexDirection:\"row\",<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; inputStyle:{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; width:280,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; height:30,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; borderColor:\"black\",<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; borderWidth:1,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; marginLeft:5,<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; btn:{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; width:85,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; height:30,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; justifyContent:\"center\",<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; alignItems:\"center\",<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; backgroundColor:\"green\",<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; // borderRadius:5<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; wordC:{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; color:\"white\",<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; fontSize:18,<br />\r\n&nbsp; &nbsp; }<br />\r\n})<br />\r\n<br />\r\n<br />\r\n原文：https://blog.csdn.net/MYTLJP/article/details/79430640&nbsp;<br />', '2018-10-31 00:15:16', '2018-10-31 00:15:16');
INSERT INTO `article` VALUES ('78', 'PHP框架 Larave where 包含and，or等条件查询', '3', '在laravel的ORM查询中，如果查询条件是where a and (b or c) 该怎么写呢？下面给出一个样例', '<p>多条件的话可以这样写：</p><p><br/></p><p>$goodsShow = Goods::where(&#39;cate_id&#39;,&#39;=&#39;,$cate_id)</p><p>&nbsp; &nbsp; -&gt;where(function($query){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; $query-&gt;where(&#39;status&#39;,&#39;&lt;&#39;,&#39;61&#39;)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt;orWhere(function($query){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $query-&gt;where(&#39;status&#39;, &#39;91&#39;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</p><p>&nbsp; &nbsp; })-&gt;first();</p><p>这一段其实执行的就是where cate_id = $cate_id AND (status &lt; 61 OR status = 91)</p><p><br/></p>', '2019-01-27 13:30:26', '2019-01-27 13:30:26');
INSERT INTO `article` VALUES ('79', 'laravel apidoc工具使用(centos7下实验)', '3', 'apidoc是一种风格优雅的API文档生成工具。', '<p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:宋体;color:#333333\">格式：</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:宋体;color:#333333\">路由：</span><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">Route::POST(&#39;user/center&#39;, &#39;UserController@center&#39;)-&gt;name(&#39;user.center&#39;);</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:宋体;color:#333333\">控制器方法：</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">/**</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp; * @apiGroup User</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp; * @api {post} /user/center [xxx]</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp; * @apiHeader {int} user_id </span><span style=\"font-size:16px;font-family:宋体;color:#333333\">用户</span><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">ID</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp; * {&quot;code&quot;:200,&quot;message&quot;:&quot;</span><span style=\"font-size: 16px;font-family:宋体;color:#333333\">成功</span><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">&quot;,&quot;data&quot;:{}}</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp; */</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">Function ……</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:&#39;Helvetica&#39;,&#39;sans-serif&#39;;color:#333333\">&nbsp;</span></p><p style=\"margin-bottom:10px;text-align:left;background:white;vertical-align: baseline\"><span style=\"font-size:16px;font-family:宋体;color:#333333\">第一：</span><span style=\"font-family:宋体\">参考：</span> <a href=\"https://laravelacademy.org/post/4578.html\">https://laravelacademy.org/post/4578.html</a> <span style=\"font-family:宋体\">（使用</span> Laravel API <span style=\"font-family:宋体\">文档生成器扩展包自动为项目生成</span> API <span style=\"font-family:宋体\">文档）</span></p><p>&nbsp;</p><p>1<span style=\"font-family:宋体\">、简介</span>&amp;<span style=\"font-family:宋体\">安装</span></p><p>Laravel API <span style=\"font-family: 宋体\">文档生成器扩展包可以基于</span> Laravel <span style=\"font-family:宋体\">应用路由自动生成项目</span> API <span style=\"font-family:宋体\">文档。</span></p><p><span style=\"font-family:宋体\">我们使用</span>Composer<span style=\"font-family:宋体\">安装这个扩展包：</span> <span style=\"font-family:宋体\">非</span>root<span style=\"font-family:宋体\">用户执行</span></p><p>$ composer require mpociot/laravel-apidoc-generator</p><p><span style=\"font-family:宋体\">安装完成后需要到</span>config/app.php<span style=\"font-family:宋体\">中注册服务提供者：</span></p><p>MpociotApiDocApiDocGeneratorServiceProvider::class,</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p><span style=\"font-family:宋体\">第二：参考：</span><a href=\"https://blog.csdn.net/cjqh_hao/article/details/58256981\">https://blog.csdn.net/cjqh_hao/article/details/58256981</a></p><p>&nbsp;</p><p>apidoc<span style=\"font-family:宋体\">是一种风格优雅的</span>API<span style=\"font-family:宋体\">文档生成工具。</span></p><p>&nbsp;</p><p><span style=\"font-family:宋体\">第一步：安装</span>nodejs</p><p><span style=\"font-family:宋体\">安装步骤省略</span></p><p><span style=\"font-family:宋体\">查看是否安装成功</span></p><p>nodejs -v</p><p>npm -v</p><p>&nbsp;</p><p><span style=\"font-family:宋体\">第二步：安装</span>apidoc</p><p>npm install apidoc -g</p><p>apidoc -v</p><p>&nbsp;</p><p><span style=\"font-family:宋体\">查看命令路径</span></p><p>whereis apidoc</p><p>&nbsp;</p><p><span style=\"font-family:宋体\">第三步：将</span>apidoc<span style=\"font-family:宋体\">加入全局变量</span></p><p>&nbsp;</p><p><span style=\"font-family:宋体\">修改</span>/etc/profile<span style=\"font-family:宋体\">文件，在最后加上下面代码即可</span></p><p>export PATH=&quot;$PATH:/usr/bin/apidoc&quot;</p><p><span style=\"font-family:宋体\">保存，并执行</span></p><p>source /etc/profile</p><p>&nbsp;</p><p>&nbsp;</p><p><span style=\"font-family:宋体\">第四步：代码注释格式说明</span></p><p>&nbsp;</p><p><span style=\"font-family:宋体\">官方文档</span></p><p>&nbsp;</p><p><span style=\"font-family:宋体\">第五步：配置</span>apidoc.json<span style=\"font-family:宋体\">文件</span></p><p>&nbsp;</p><p>{</p><p>&nbsp; &quot;name&quot;: &quot;laravel5 API<span style=\"font-family: 宋体\">文档</span>&quot;,</p><p>&nbsp; &quot;version&quot;: &quot;0.1.0&quot;,</p><p>&nbsp; &quot;description&quot;: &quot;apiDoc basic example&quot;,</p><p>&nbsp; &quot;title&quot;: &quot;Custom apiDoc browser title&quot;,</p><p>&nbsp; &quot;url&quot; : &quot;localhost:10199/doc&quot;</p><p>&nbsp; //<span style=\"font-family:宋体\">此处文档的生成是在</span>public/doc<span style=\"font-family:宋体\">下，所以</span>url<span style=\"font-family:宋体\">配置是这样，其他就自行修改。</span> 10199<span style=\"font-family:宋体\">是</span>web<span style=\"font-family:宋体\">服务项目端口</span></p><p>}</p><p>&nbsp;</p><p><span style=\"font-family:宋体\">第六步：生成文档</span></p><p>&nbsp;</p><p>#<span style=\"font-family:宋体\">将</span>laravel<span style=\"font-family:宋体\">目录下的控制器生成</span>api<span style=\"font-family:宋体\">文档，命令如下：</span></p><p>apidoc -i app/Http/Controllers -o public/doc</p><p>&nbsp;</p><p><span style=\"font-family:宋体\">可能遇到的问题：</span> </p><p>1.json<span style=\"font-family:宋体\">文件配置</span>url<span style=\"font-family:宋体\">不对，导致一直加载中</span> </p><p>2.<span style=\"font-family:宋体\">注释格式不正确，导致无法生成文档</span></p><p>&nbsp;</p><p><span style=\"font-family:宋体\">最后访问：</span><a href=\"http://192.168.79.130:9002/doc\">http://192.168.79.130:9002/doc</a>&nbsp;&nbsp; <span style=\"font-family:宋体\">地址换成你自己的</span></p><p><br/></p>', '2019-02-18 11:42:18', '2019-02-18 11:42:18');
INSERT INTO `article` VALUES ('80', 'Tomcat找不到maven工程下jar包', '2', 'clipse4.9.Maven Web工程，启动tomcat后出现：java.lang.ClassNotFoundException,找不到maven下载的包。解决方案 如下：', '<p>需要设置一下eclipse：&nbsp;</p><p>项目 —&gt; 属性 -&gt; Deployment Assembly -&gt; Add -&gt; Java Build Path Entries -&gt; 选择Maven Dependencies -&gt; Finish -&gt; OK&nbsp;</p><p>把对应的Maven依赖包也发布到tomcat，调试时会自动把那些jar发布到指定目录下，这样tomcat也能找到那些jar了。&nbsp;</p><p><br/></p><p>参考：&nbsp;<a href=\"https://www.iteye.com/blog/elvis4139-2159804\">https://www.iteye.com/blog/elvis4139-2159804</a></p>', '2019-08-24 06:17:29', '2019-08-24 06:17:29');
INSERT INTO `article` VALUES ('81', ' mybatis entity.User with invalid types () or values (). Cause: java.lang.NoSuchMethodException: book.pojo.User.<init>()', '2', 'mybatis和servlet整合时报错的解决', '<p><br/></p><p>Error instantiating class book.pojo.User with invalid types () or values (). Cause: java.lang.NoSuchMethodException: book.pojo.User.&lt;init&gt;()</p><p>首先：</p><p>instantiating 中文是“实例化”的意思</p><p><br/></p><p>init&nbsp; 中文是“初始化”的意思</p><p><br/></p><p>这里首先考虑的就是你创建的实体类，这里是User类的构造方法的问题。</p><p><br/></p><p>我这里报错是因为在实体类里只给了一个有参构造方法，但在实例化时候却是用无参构造方法去实例化对象的，所以报了这个错。</p><p><br/></p><p>解决方法：在实体类中加入一个无参构造方法即可。</p><p><br/></p><p>本文链接：https://blog.csdn.net/baidu_32262373/article/details/50775267</p>', '2019-08-24 06:53:15', '2019-08-24 06:53:15');

-- ----------------------------
-- Table structure for category
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(20) DEFAULT NULL,
  `pid` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES ('1', 'top', '0');
INSERT INTO `category` VALUES ('2', 'Java', '1');
INSERT INTO `category` VALUES ('3', 'PHP', '1');
INSERT INTO `category` VALUES ('4', 'mysql', '1');
INSERT INTO `category` VALUES ('5', 'Python', '1');
INSERT INTO `category` VALUES ('6', 'React', '1');
INSERT INTO `category` VALUES ('7', 'Linux', '1');
